{
  "name": "nw-flash-trust",
  "author": {
    "name": "Jakub Szwacz",
    "email": "jakub@szwacz.com"
  },
  "description": "Flash Player trusted locations manager for node-webkit",
  "version": "0.1.1",
  "main": "main.js",
  "homepage": "https://github.com/szwacz/nw-flash-trust",
  "repository": {
    "type": "git",
    "url": "https://github.com/szwacz/nw-flash-trust.git"
  },
  "licence": "MIT",
  "readme": "# nw-flash-trust\n\nCross-platform solution for [node-webkit](https://github.com/rogerwang/node-webkit) to make your Flash plugins trusted, so they can run smoothly.\n\n## Why this is needed?\n\nNode-webkit uses local `file://` protocol to render pages. Unfortunately, for security reasons Flash Player doesn't like SWFs embedded locally and applies very restrictive policy to them. Such SWF lands in one of two possible [local sandboxes](http://help.adobe.com/en_US/ActionScript/3.0_ProgrammingAS3/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e3f.html), and communication via [ExternalInterface](http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/external/ExternalInterface.html) is blocked.\n\nFortunately there is officially supported way of making your local SWF trusted, so previously mentioned restrictions don't apply. Full explanation can be found in [Adobe Flash Player Administration Guide](http://www.adobe.com/devnet/flashplayer/articles/flash_player_admin_guide.html).\n\nLong story short: you have to put text file in special directory provided by Flash Player and save to this file paths of SWFs you want to be trusted. **This library provides cross-platform API for doing just that.**\n\n### Tested on\n\n- Windows XP\n- Windows 7\n- OSX 10.8\n- Linux Mint\n- Ubuntu\n- Fedora\n\n## Installation\n\n```\nnpm install nw-flash-trust\n```\n\n## Usage & API\n\nFor simplicity API is fully synchronous. It does a little of I/O, but so little it shouldn't be an issue.\n\n```javascript\nvar path = require('path');\nvar flashTrust = require('nw-flash-trust');\n\n// appName could be any globally unique string containing only\n// big and small letters, numbers and chars \"-._\"\n// It specifies name of file where trusted paths will be stored.\n// Best practice is to feed it with \"name\" value from your package.json file.\nvar appName = 'myApp';\n\ntry {\n    // Initialization and parsing config file for given appName (if already exists).\n    var trustManager = flashTrust.initSync(appName);\n} catch(err) {\n    if (err.message === 'Flash Player config folder not found.') {\n        // Directory needed to do the work doesn't exist.\n        // Probably Flash Player is not installed, there is nothing I can do.\n    }\n}\n\n// adds given filepath to trusted locations\n// paths must be absolute\ntrustManager.add(path.resolve('path-to', 'file.swf'));\n\n// whole folders are also allowed\ntrustManager.add(path.resolve('path-to', 'folder'));\n\n// removes given path from trusted locations\ntrustManager.remove(path.resolve('path-to', 'file.swf'));\n\n// returns true or false whether given path is trusted or not\nvar isTrusted = trustManager.isTrusted(path.resolve('path-to', 'file.swf'));\n\n// returns array containing all trusted paths\nvar list = trustManager.list();\n\n// removes all trusted locations from config file\ntrustManager.empty();\n```\n\n### Pitfalls\n\nOn Windows 2 Flash plugins can coexist: ActiveX plugin for Internet Explorer and second one, for all other browsers (Chrome, Firefox, Opera). If only ActiveX plugin is installed there is flash-config-folder on this maschine, so this library will instantiate withou throwing any error. But node-webkit uses the second plugin so in this case there is no Flash for him. Dont rely for Flash detection on what *nw-flash-trust* tells you.\n\nTo be sure Flash is available in node-webkit use something like this:\n```javascript\nfunction isFlashAvailable() {\n    return navigator.plugins.namedItem('Shockwave Flash') != null;\n}\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/szwacz/nw-flash-trust/issues"
  },
  "_id": "nw-flash-trust@0.1.1",
  "dist": {
    "shasum": "c77f612644d9f43d2153f8021d387a6966306094",
    "tarball": "http://registry.npmjs.org/nw-flash-trust/-/nw-flash-trust-0.1.1.tgz"
  },
  "_from": "nw-flash-trust@",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "szwacz",
    "email": "jakub@szwacz.com"
  },
  "maintainers": [
    {
      "name": "szwacz",
      "email": "jakub@szwacz.com"
    }
  ],
  "directories": {},
  "_shasum": "c77f612644d9f43d2153f8021d387a6966306094",
  "_resolved": "https://registry.npmjs.org/nw-flash-trust/-/nw-flash-trust-0.1.1.tgz"
}
