<?xml version="1.0" encoding="UTF-8"?><allClasses><apiPackage id="org.igniterealtime.xiff.auth"><apiName>org.igniterealtime.xiff.auth</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.auth:ISASLAuth"><apiName>ISASLAuth</apiName><shortdesc>
	 This is a base class for use with Simple Authentication and Security Layer
	 (SASL) mechanisms.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This is a base class for use with Simple Authentication and Security Layer
	 (SASL) mechanisms. Implement this class when creating new SASL mechanisms.
	 </apiDesc></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:ISASLAuth:org.igniterealtime.xiff.auth:ISASLAuth:handleChallenge"><apiName>handleChallenge</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="XML"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:ISASLAuth:org.igniterealtime.xiff.auth:ISASLAuth:handleResponse"><apiName>handleResponse</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:ISASLAuth:org.igniterealtime.xiff.auth:ISASLAuth:request:get"><apiName>request</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="XML"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:SASLAuth"><apiName>SASLAuth</apiName><shortdesc>
	 This is a base class for use with Simple Authentication and Security Layer
	 (SASL) mechanisms.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This is a base class for use with Simple Authentication and Security Layer
	 (SASL) mechanisms. Sub-class this class when creating new SASL mechanisms.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc4422"><linktext>http://tools.ietf.org/html/rfc4422</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-6"><linktext>http://tools.ietf.org/html/rfc3920#section-6</linktext></link><link href="http://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer"><linktext>http://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.auth:SASLAuth:SASLAuth"><apiName>SASLAuth</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.auth:SASLAuth:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The XML response to the challenge.
		 </apiDesc><apiType value="XML"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:SASLAuth:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:SASLAuth:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:ietf:params:xml:ns:xmpp-sasl</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:SASLAuth:RESPONSE_SUCCESS"><apiName>RESPONSE_SUCCESS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>success</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:SASLAuth:protected:connection"><apiName>connection</apiName><shortdesc>
		 Connection that is used to authenticate, if any
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef><apiDesc>
		 Connection that is used to authenticate, if any
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:SASLAuth:protected:req"><apiName>req</apiName><shortdesc>
		 The XML of the authentication request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="XML"/></apiValueDef><apiDesc>
		 The XML of the authentication request.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:SASLAuth:protected:response"><apiName>response</apiName><shortdesc>
		 The XML of the challenge response.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="XML"/></apiValueDef><apiDesc>
		 The XML of the challenge response.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:SASLAuth:protected:stage"><apiName>stage</apiName><shortdesc>
		 The current response stage.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
		 The current response stage.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:SASLAuth:request:get"><apiName>request</apiName><shortdesc>
		 The XML for the authentication request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="XML"/></apiValueDef><apiDesc>
		 The XML for the authentication request.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:DigestMD5"><apiName>DigestMD5</apiName><shortdesc>
	 This class provides SASL authentication using the DIGEST-MD5 mechanism, a HTTP Digest
	 compatible challenge-response scheme based upon MD5.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides SASL authentication using the DIGEST-MD5 mechanism, a HTTP Digest
	 compatible challenge-response scheme based upon MD5. DIGEST-MD5 offers a data security layer.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://en.wikipedia.org/wiki/Digest_access_authentication"><linktext>http://en.wikipedia.org/wiki/Digest_access_authentication</linktext></link><link href="http://tools.ietf.org/html/rfc1321"><linktext>http://tools.ietf.org/html/rfc1321</linktext></link><link href="http://www.ietf.org/rfc/rfc2831.txt"><linktext>http://www.ietf.org/rfc/rfc2831.txt</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-6"><linktext>http://tools.ietf.org/html/rfc3920#section-6</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.auth:DigestMD5:DigestMD5"><apiName>DigestMD5</apiName><shortdesc>
		Creates a new External authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance in use.
		</apiDesc></apiParam></apiConstructorDef><apiDesc>
		Creates a new External authentication object.
				</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.auth:DigestMD5:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>The XML response to the challenge.
		 </apiDesc><apiType value="XML"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:DigestMD5:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>An object specifying the current state of the authentication.
		</apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		</apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
				</apiDesc></apiParam></apiOperationDef><apiDesc>
		Called when a response to this authentication is received.
				</apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:DigestMD5:MECHANISM"><apiName>MECHANISM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DIGEST-MD5</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:Anonymous"><apiName>Anonymous</apiName><shortdesc>
	 This class provides SASL authentication using the ANONYMOUS mechanism.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides SASL authentication using the ANONYMOUS mechanism.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0175.html"><linktext>http://xmpp.org/extensions/xep-0175.html</linktext></link><link href="http://tools.ietf.org/html/rfc4505"><linktext>http://tools.ietf.org/html/rfc4505</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-6"><linktext>http://tools.ietf.org/html/rfc3920#section-6</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.auth:Anonymous:Anonymous"><apiName>Anonymous</apiName><shortdesc>
		 Creates a new Anonymous authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance to use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new Anonymous authentication object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.auth:Anonymous:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:Anonymous:MECHANISM"><apiName>MECHANISM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ANONYMOUS</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:XFacebookPlatform"><apiName>XFacebookPlatform</apiName><shortdesc>
	 This class provides SASL authentication using the X-FACEBOOK-PLATFORM mechanism.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides SASL authentication using the X-FACEBOOK-PLATFORM mechanism.
	 	 <p>Facebook Chat currently supports the following features, related to authentication:</p>
	 <ul>
	 <li>Facebook Platform authentication using the X-FACEBOOK-PLATFORM SASL authentication mechanism</li>
	 <li>Username/password authentication using the DIGEST-MD5 authentication mechanism</li>
	 </ul>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-6"><linktext>http://tools.ietf.org/html/rfc3920#section-6</linktext></link><link href="" invalidHref="https.//developers.facebook.com/docs/chat/.xml"><linktext>https://developers.facebook.com/docs/chat/</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.auth:XFacebookPlatform:XFacebookPlatform"><apiName>XFacebookPlatform</apiName><shortdesc>
		 Creates a new XFacebookPlatform authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance in use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new XFacebookPlatform authentication object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.auth:XFacebookPlatform:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>The XML response to the challenge.
		 </apiDesc><apiType value="XML"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 <p>The mechanism starts with a server challenge, in the form of a common HTTP query string:
		 an ampersand-separated sequence of equals-sign-delimited key/value pairs.
		 The keys and values are UTF-8-encoded and URL-encoded.
		 The query string contains two items: method and nonce.</p>
		 		 <p>The client's reply should be a similarly-encoded query string prepared as if it were
		 going to call a method against the Facebook API. The call should contain the
		 following parameters:</p>
		 <ul>
		 <li>string method: Should be the same as the method specified by the server.</li>
		 <li>string api_key: The application key associated with the calling application.</li>
		 <li>string access_token: The access_token obtained in the above step.</li>
		 <li>float call_id: The request's sequence number.</li>
		 <li>string v: This must be set to 1.0 to use this version of the API.</li>
		 <li>string format: Optional - Ignored.</li>
		 <li>string cnonce: Optional - Client-selected nonce. Ignored.</li>
		 <li>string nonce: Should be the same as the nonce specified by the server.</li>
		 </ul>
		 		 <p>The server will then respond with a success or failure message.
		 Note that this needs to be over TLS or you'll get an error.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:XFacebookPlatform:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:XFacebookPlatform:MECHANISM"><apiName>MECHANISM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>X-FACEBOOK-PLATFORM</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:XFacebookPlatform:fb_access_token"><apiName>fb_access_token</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:XFacebookPlatform:fb_app_id"><apiName>fb_app_id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:Plain"><apiName>Plain</apiName><shortdesc>
	 This class provides SASL authentication using the PLAIN mechanism.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides SASL authentication using the PLAIN mechanism.
	 This is used for plain text (base64 encoded) password authentication with an XMPP
	 server.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc4616"><linktext>http://tools.ietf.org/html/rfc4616</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-6"><linktext>http://tools.ietf.org/html/rfc3920#section-6</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.auth:Plain:Plain"><apiName>Plain</apiName><shortdesc>
		 Creates a new Plain authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier></apiParam></apiConstructorDef><apiDesc>
		 Creates a new Plain authentication object.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.auth:Plain:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:Plain:MECHANISM"><apiName>MECHANISM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>PLAIN</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:XOAuth2"><apiName>XOAuth2</apiName><shortdesc>
	 This class provides SASL authentication using the X-OAUTH2 mechanism.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides SASL authentication using the X-OAUTH2 mechanism.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-6"><linktext>http://tools.ietf.org/html/rfc3920#section-6</linktext></link><link href="" invalidHref="https.//developers.google.com/accounts/docs/OAuth2.xml"><linktext>https://developers.google.com/accounts/docs/OAuth2</linktext></link><link href="" invalidHref="https.//developers.google.com/cloud-print/docs/rawxmpp.xml"><linktext>https://developers.google.com/cloud-print/docs/rawxmpp</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.auth:XOAuth2:XOAuth2"><apiName>XOAuth2</apiName><shortdesc>
		 Creates a OAuth v2 authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance in use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a OAuth v2 authentication object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.auth:XOAuth2:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>The XML response to the challenge.
		 </apiDesc><apiType value="XML"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:XOAuth2:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:XOAuth2:MECHANISM"><apiName>MECHANISM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>X-OAUTH2</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.auth:XOAuth2:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:ietf:params:xml:ns:xmpp-sasl</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:External"><apiName>External</apiName><shortdesc>
	 This class provides SASL authentication using the EXTERNAL mechanism.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides SASL authentication using the EXTERNAL mechanism.
	 This is particularly useful when TLS authentication is required.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0178.html"><linktext>http://xmpp.org/extensions/xep-0178.html</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-6"><linktext>http://tools.ietf.org/html/rfc3920#section-6</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.auth:External:External"><apiName>External</apiName><shortdesc>
		 Creates a new External authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier></apiParam></apiConstructorDef><apiDesc>
		 Creates a new External authentication object.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.auth:External:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.auth:External:MECHANISM"><apiName>MECHANISM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>EXTERNAL</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.bookmark"><apiName>org.igniterealtime.xiff.bookmark</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.bookmark:GroupChatBookmark"><apiName>GroupChatBookmark</apiName><shortdesc>
	 XEP-0048: Bookmarks
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0048: Bookmarks
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0048.html"><linktext>http://xmpp.org/extensions/xep-0048.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:GroupChatBookmark"><apiName>GroupChatBookmark</apiName><shortdesc>
		 A common use case is bookmarking of multi-user chat rooms.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>		REQUIRED
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	RECOMMENDED
		 </apiDesc></apiParam><apiParam><apiItemName>autoJoin</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>OPTIONAL
		 </apiDesc></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OPTIONAL
		 </apiDesc></apiParam><apiParam><apiItemName>password</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>NOT RECOMMENDED
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 A common use case is bookmarking of multi-user chat rooms.
		 A room is bookmarked using the <b>conference</b> child element.
		 		 <p>Most of the properties can be set only via constructor or by setting the XML.</p>
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://xmpp.org/extensions/xep-0048.html#format-conference"><linktext>http://xmpp.org/extensions/xep-0048.html#format-conference</linktext></link></related-links></apiConstructor><apiOperation id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>conference</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:autoJoin:get"><apiName>autoJoin</apiName><shortdesc>
		 Whether the client should automatically join the conference room on login.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Whether the client should automatically join the conference room on login.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:jid:get"><apiName>jid</apiName><shortdesc>
		 The JabberID of the chat room.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The JabberID of the chat room.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:name:get"><apiName>name</apiName><shortdesc>
		 A friendly name for the bookmark.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 A friendly name for the bookmark.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:nickname:get"><apiName>nickname</apiName><shortdesc>
		 The user's preferred roomnick for the chatroom.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The user's preferred roomnick for the chatroom.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:password:get"><apiName>password</apiName><shortdesc>
		 Unencrypted string for the password needed to enter a password-protected room.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Unencrypted string for the password needed to enter a password-protected room.
		 		 <p>For security reasons, use of this element is NOT RECOMMENDED.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.bookmark:UrlBookmark"><apiName>UrlBookmark</apiName><shortdesc>
	 The url element is designed for bookmarking web pages,
	 i.e., HTTP or HTTPS URLs.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The <b>url</b> element is designed for bookmarking web pages,
	 i.e., HTTP or HTTPS URLs.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0048.html#format-url"><linktext>http://xmpp.org/extensions/xep-0048.html#format-url</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.bookmark:UrlBookmark:UrlBookmark"><apiName>UrlBookmark</apiName><shortdesc>
		 Bookmark an url.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>REQUIRED
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>RECOMMENDED
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Bookmark an url.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.bookmark:UrlBookmark:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>url</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:UrlBookmark:name:get"><apiName>name</apiName><shortdesc>
		 A friendly name for the bookmark.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 A friendly name for the bookmark.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:UrlBookmark:url:get"><apiName>url</apiName><shortdesc>
		 The HTTP or HTTPS URL of the web page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The HTTP or HTTPS URL of the web page.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.bookmark:BookmarkManager"><apiName>BookmarkManager</apiName><shortdesc>
	 XEP-0048: Bookmarks
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0048: Bookmarks
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0048.html"><linktext>http://xmpp.org/extensions/xep-0048.html</linktext></link></related-links><adobeApiEvent id="org.igniterealtime.xiff.bookmark:BookmarkManager_org.igniterealtime.xiff.events.BookmarkRetrievedEvent.BOOKMARK_RETRIEVED_bookmarkRetrieved"><apiName>bookmarkRetrieved</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.BookmarkRetrievedEvent.BOOKMARK_RETRIEVED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.BookmarkRetrievedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.bookmark:BookmarkManager_org.igniterealtime.xiff.events.BookmarkChangedEvent.GROUPCHAT_BOOKMARK_REMOVED_groupchatBookmarkRemoved"><apiName>groupchatBookmarkRemoved</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.BookmarkChangedEvent.GROUPCHAT_BOOKMARK_REMOVED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.BookmarkChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.bookmark:BookmarkManager_org.igniterealtime.xiff.events.BookmarkChangedEvent.GROUPCHAT_BOOKMARK_ADDED_groupchatBookmarkAdded"><apiName>groupchatBookmarkAdded</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.BookmarkChangedEvent.GROUPCHAT_BOOKMARK_ADDED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.BookmarkChangedEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.bookmark:BookmarkManager:BookmarkManager"><apiName>BookmarkManager</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>privateDataManager</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.privatedata:PrivateDataManager</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:addGroupChatBookmark"><apiName>addGroupChatBookmark</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>serverBookmark</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.bookmark:GroupChatBookmark</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:fetchBookmarks"><apiName>fetchBookmarks</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:getGroupChatBookmark"><apiName>getGroupChatBookmark</apiName><shortdesc>
		 Get a group chat bookmark with the given JID
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.bookmark:GroupChatBookmark</apiOperationClassifier></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get a group chat bookmark with the given JID
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:isGroupChatBookmarked"><apiName>isGroupChatBookmarked</apiName><shortdesc>
		 Does there exist a group chat bookmark with the given JID
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does there exist a group chat bookmark with the given JID
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:removeGroupChatBookmark"><apiName>removeGroupChatBookmark</apiName><shortdesc>
		 Remove
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:setAutoJoin"><apiName>setAutoJoin</apiName><shortdesc>
		 Set autoJoin for the given bookmark JID
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="Boolean"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Set autoJoin for the given bookmark JID
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.bookmark:BookmarkManager:bookmarks:get"><apiName>bookmarks</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload</apiValueClassifier></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload"><apiName>BookmarkPrivatePayload</apiName><shortdesc>
	 XEP-0048: Bookmarks
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.privatedata:IPrivatePayload</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0048: Bookmarks
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0048.html"><linktext>http://xmpp.org/extensions/xep-0048.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:BookmarkPrivatePayload"><apiName>BookmarkPrivatePayload</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>groupChatBookmarks</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>urlBookmarks</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:removeGroupChatBookmark"><apiName>removeGroupChatBookmark</apiName><shortdesc>
		 Removes the bookmark from the list, and returns it
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.bookmark:GroupChatBookmark</apiOperationClassifier></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the bookmark from the list, and returns it
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>storage</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>storage:bookmarks</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:groupChatBookmarks:get"><apiName>groupChatBookmarks</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:urlBookmarks:get"><apiName>urlBookmarks</apiName><shortdesc>
		 List of UrlBookmarks.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 List of UrlBookmarks.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.bookmark.xml#UrlBookmark"><linktext>org.igniterealtime.xiff.bookmark.UrlBookmark</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:xml:set"><apiName>xml</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.collections.events"><apiName>org.igniterealtime.xiff.collections.events</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.collections.events:CollectionEventKind"><apiName>CollectionEventKind</apiName><shortdesc>
	  The CollectionEventKind class contains constants for the valid values
	  of the CollectionEvent class kind property.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	  The CollectionEventKind class contains constants for the valid values
	  of the CollectionEvent class kind property.
	 </apiDesc></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEventKind:ADD"><apiName>ADD</apiName><shortdesc>
		  Indicates that the collection added an item or items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>add</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  Indicates that the collection added an item or items.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEventKind:REMOVE"><apiName>REMOVE</apiName><shortdesc>
		  Indicates that the collection removed an item or items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  Indicates that the collection removed an item or items.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEventKind:REPLACE"><apiName>REPLACE</apiName><shortdesc>
		  Indicates that the item at the position identified by the
		  CollectionEvent location property has been replaced.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>replace</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  Indicates that the item at the position identified by the
		  CollectionEvent location property has been replaced.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEventKind:RESET"><apiName>RESET</apiName><shortdesc>
		  Indicates that the collection has changed so drastically that
		  a reset is required.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  Indicates that the collection has changed so drastically that
		  a reset is required.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEventKind:UPDATE"><apiName>UPDATE</apiName><shortdesc>
		  Indicates that one or more items were updated within the collection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>update</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  Indicates that one or more items were updated within the collection.
		  The affected item(s)
		  are stored in the items property.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.collections.events:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
	  The CollectionEvent class represents an event that is
	  dispatched when the associated collection changes.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	  The CollectionEvent class represents an event that is
	  dispatched when the associated collection changes.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.collections.events:CollectionEvent:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>oldLocation</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>items</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.collections.events:CollectionEvent:clone"><apiName>clone</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections.events:CollectionEvent:toString"><apiName>toString</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEvent:COLLECTION_CHANGE"><apiName>COLLECTION_CHANGE</apiName><shortdesc>
		  The CollectionEvent.COLLECTION_CHANGE constant defines the value of the
		  type property of the event object for an event that is
		  dispatched when a collection has changed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>collectionChange</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  The CollectionEvent.COLLECTION_CHANGE constant defines the value of the
		  type property of the event object for an event that is
		  dispatched when a collection has changed.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEvent:items"><apiName>items</apiName><shortdesc>
		  When the kind is CollectionEventKind.ADD
		  or CollectionEventKind.REMOVE the items property
		  is an Array of added/removed items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
		  When the kind is CollectionEventKind.ADD
		  or CollectionEventKind.REMOVE the items property
		  is an Array of added/removed items.
		  When the kind is CollectionEventKind.REPLACE
		  or CollectionEventKind.UPDATE the items property
		  is an Array of PropertyChangeEvent objects with information about the items
		  affected by the event.
		  When a value changes, query the newValue and
		  oldValue fields of the PropertyChangeEvent objects
		  to find out what the old and new values were.
		  When the kind is CollectionEventKind.REFRESH
		  or CollectionEventKind.RESET, this array has zero length.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEvent:kind"><apiName>kind</apiName><shortdesc>
		  Indicates the kind of event that occurred.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
		  Indicates the kind of event that occurred.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEvent:location"><apiName>location</apiName><shortdesc>
		  When the kind value is CollectionEventKind.ADD,
		  CollectionEventKind.MOVE,
		  CollectionEventKind.REMOVE, or
		  CollectionEventKind.REPLACE, this property is the
		  zero-base index in the collection of the item(s) specified in the
		  items property.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
		  When the kind value is CollectionEventKind.ADD,
		  CollectionEventKind.MOVE,
		  CollectionEventKind.REMOVE, or
		  CollectionEventKind.REPLACE, this property is the
		  zero-base index in the collection of the item(s) specified in the
		  items property.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections.events:CollectionEvent:oldLocation"><apiName>oldLocation</apiName><shortdesc>
		  When the kind value is CollectionEventKind.MOVE,
		  this property is the zero-based index in the target collection of the
		  previous location of the item(s) specified by the items property.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
		  When the kind value is CollectionEventKind.MOVE,
		  this property is the zero-based index in the target collection of the
		  previous location of the item(s) specified by the items property.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.collections"><apiName>org.igniterealtime.xiff.collections</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.collections:ICollection"><apiName>ICollection</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:addItemAt"><apiName>addItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:addItem"><apiName>addItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:clearSource"><apiName>clearSource</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:contains"><apiName>contains</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:getItemAt"><apiName>getItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:getItemIndex"><apiName>getItemIndex</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:itemUpdated"><apiName>itemUpdated</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:removeAll"><apiName>removeAll</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:removeItemAt"><apiName>removeItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:removeItem"><apiName>removeItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:setItemAt"><apiName>setItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:length:get"><apiName>length</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.collections:ArrayCollection"><apiName>ArrayCollection</apiName><shortdesc>
	 The ArrayCollection class is a wrapper class that exposes an Array as a
	 collection that can be accessed and manipulated using collection methods.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.collections:ICollection</apiBaseInterface><apiBaseClassifier>flash.utils:Proxy</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The ArrayCollection class is a wrapper class that exposes an Array as a
	 collection that can be accessed and manipulated using collection methods.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.collections:ArrayCollection:ArrayCollection"><apiName>ArrayCollection</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>source</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:addItemAt"><apiName>addItemAt</apiName><shortdesc>
		 Add the specified item at the specified index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Add the specified item at the specified index.
		 Any item that was after this index is moved out by one.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:addItem"><apiName>addItem</apiName><shortdesc>
		 Add the specified item to the end of the list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Add the specified item to the end of the list.
		 Equivalent to addItemAt( item, length );
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:clearSource"><apiName>clearSource</apiName><shortdesc>
		 Remove all items from the ArrayCollection without dispatching a RESET event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove all items from the ArrayCollection without dispatching a RESET event.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:contains"><apiName>contains</apiName><shortdesc>
		 Returns whether the ArrayCollection contains the specified item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Returns whether the ArrayCollection contains the specified item.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
		 Dispatches an event into the event flow.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc>
		 Dispatches an event into the event flow.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:getItemAt"><apiName>getItemAt</apiName><shortdesc>
		 Get the item at the specified index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Get the item at the specified index.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:getItemIndex"><apiName>getItemIndex</apiName><shortdesc>
		 Get the index of the item if it is in the ArrayCollection such that getItemAt( index ) == item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Get the index of the item if it is in the ArrayCollection such that getItemAt( index ) == item.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:hasEventListener"><apiName>hasEventListener</apiName><shortdesc>
		 Checks whether the EventDispatcher object has any listeners registered for a specific type of event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Checks whether the EventDispatcher object has any listeners registered for a specific type of event.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:protected:internalDispatchEvent"><apiName>internalDispatchEvent</apiName><shortdesc>
		 Dispatches a collection event with the specified information.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>kind</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="any"/><apiData>null</apiData></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam></apiOperationDef><apiDesc>
		 Dispatches a collection event with the specified information.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:itemUpdated"><apiName>itemUpdated</apiName><shortdesc>
		 Notifies the view that an item has been updated.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Notifies the view that an item has been updated.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeAll"><apiName>removeAll</apiName><shortdesc>
		 Remove all items from the ArrayCollection.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove all items from the ArrayCollection.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 Removes a listener from the EventDispatcher object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 Removes a listener from the EventDispatcher object.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeItemAt"><apiName>removeItemAt</apiName><shortdesc>
		 Removes the item at the specified index and returns it.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Removes the item at the specified index and returns it.
		 Any items that were after this index are now one index earlier.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeItem"><apiName>removeItem</apiName><shortdesc>
		 Remove the specified item from this list, should it exist.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Remove the specified item from this list, should it exist.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:setItemAt"><apiName>setItemAt</apiName><shortdesc>
		 Places the item at the specified index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Places the item at the specified index.
		 If an item was already at that index the new item will replace it
		 and it will be returned.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:toArray"><apiName>toArray</apiName><shortdesc>
		 Return an Array that is populated in the same order as the ArrayCollection.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 Return an Array that is populated in the same order as the ArrayCollection.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:toString"><apiName>toString</apiName><shortdesc>
		 Pretty prints the contents of the ArrayCollection to a string and returns it.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Pretty prints the contents of the ArrayCollection to a string and returns it.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:willTrigger"><apiName>willTrigger</apiName><shortdesc>
		 Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.collections:ArrayCollection:protected:OUT_OF_BOUNDS_MESSAGE"><apiName>OUT_OF_BOUNDS_MESSAGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="protected"/><apiDynamic/><apiData>The supplied index is out of bounds.</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections:ArrayCollection:protected:_source"><apiName>_source</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections:ArrayCollection:protected:eventDispatcher"><apiName>eventDispatcher</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.events:EventDispatcher"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections:ArrayCollection:length:get"><apiName>length</apiName><shortdesc>
		 The number of items in the ArrayCollection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 The number of items in the ArrayCollection.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.collections:ArrayCollection:source:get"><apiName>source</apiName><shortdesc>
		 The source of data in the ArrayCollection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 The source of data in the ArrayCollection.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.conference"><apiName>org.igniterealtime.xiff.conference</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.conference:Room"><apiName>Room</apiName><shortdesc>
	 Manages incoming and outgoing data from a conference room as part of multi-user conferencing (XEP-0045).</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.conference:IRoom</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.collections:ArrayCollection</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Manages incoming and outgoing data from a conference room as part of multi-user conferencing (XEP-0045).
	 You will need an instance of this class for each room that the user joins.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html"><linktext>http://xmpp.org/extensions/xep-0045.html</linktext></link></related-links><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.USER_PRESENCE_CHANGE_userPresenceChange"><apiName>userPresenceChange</apiName><shortdesc>
	 Dispatched when a user's presence changes.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.USER_PRESENCE_CHANGE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when a user's presence changes.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.USER_KICKED_userKicked"><apiName>userKicked</apiName><shortdesc>
	 Dispatched when a user is kicked from the room.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.USER_KICKED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when a user is kicked from the room.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.USER_JOIN_userJoin"><apiName>userJoin</apiName><shortdesc>
	 Dispatched whenever an occupant joins the room.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.USER_JOIN</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched whenever an occupant joins the room. The <codeph>RoomEvent</codeph> instance will
	 contain an attribute <codeph>nickname</codeph> with the nickname of the occupant who joined.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.USER_DEPARTURE_userDeparture"><apiName>userDeparture</apiName><shortdesc>
	 Dispatched whenever an occpant leaves the room.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.USER_DEPARTURE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched whenever an occpant leaves the room. The <codeph>RoomEvent</codeph> instance will
	 contain an attribute <codeph>nickname</codeph> with the nickname of the occupant who left.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.USER_BANNED_userBanned"><apiName>userBanned</apiName><shortdesc>
	 Dispatched when a user is banned from the room.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.USER_BANNED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when a user is banned from the room.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.SUBJECT_CHANGE_subjectChange"><apiName>subjectChange</apiName><shortdesc>
	 Dispatched when the room subject changes.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.SUBJECT_CHANGE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the room subject changes.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.ROOM_LEAVE_roomLeave"><apiName>roomLeave</apiName><shortdesc>
	 Dispatched when the server acknoledges that you have the left the room.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.ROOM_LEAVE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the server acknoledges that you have the left the room.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.ROOM_JOIN_roomJoin"><apiName>roomJoin</apiName><shortdesc>
	 Dispatched when you have entered the room and messages that are sent
	 will be displayed to other users.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.ROOM_JOIN</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when you have entered the room and messages that are sent
	 will be displayed to other users. The room's role and affiliation will
	 be visible from this point forward.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.ROOM_DESTROYED_roomDestroyed"><apiName>roomDestroyed</apiName><shortdesc>
	 Dispatched when the room is removed.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.ROOM_DESTROYED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the room is removed.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.REGISTRATION_REQ_ERROR_registrationReqError"><apiName>registrationReqError</apiName><shortdesc>
	 Dispatched when the room is members-only and the user is not on the member list.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.REGISTRATION_REQ_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the room is members-only and the user is not on the member list.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.PRIVATE_MESSAGE_privateMessage"><apiName>privateMessage</apiName><shortdesc>
	 Dispatched whenever a new private message is received.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.PRIVATE_MESSAGE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched whenever a new private message is received. The <codeph>RoomEvent</codeph> class
	 contains an attribute <codeph>data</codeph> with the private message as an instance of the
	 <codeph>Message</codeph> class.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.PASSWORD_ERROR_passwordError"><apiName>passwordError</apiName><shortdesc>
	 Dispatched when the room requires a password and the user did not supply one (or
	 the password provided is incorrect).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.PASSWORD_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the room requires a password and the user did not supply one (or
	 the password provided is incorrect).
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.NICK_CONFLICT_nickConflict"><apiName>nickConflict</apiName><shortdesc>
	 Dispatched when the user's preferred nickname already exists in the room.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.NICK_CONFLICT</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the user's preferred nickname already exists in the room.	The
	 <codeph>RoomEvent</codeph> will contain an attribute <codeph>nickname</codeph> with the nickname
	 already existing in the room.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.MAX_USERS_ERROR_maxUsersError"><apiName>maxUsersError</apiName><shortdesc>
	 Dispatched if the room has reached its maximum number of occupants.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.MAX_USERS_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched if the room has reached its maximum number of occupants.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.LOCKED_ERROR_lockedError"><apiName>lockedError</apiName><shortdesc>
	 Dispatched if a user attempts to enter a room while it is "locked" (i.e., before the room
	 creator provides an initial configuration and therefore before the room officially exists).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.LOCKED_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched if a user attempts to enter a room while it is "locked" (i.e., before the room
	 creator provides an initial configuration and therefore before the room officially exists).
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.GROUP_MESSAGE_groupMessage"><apiName>groupMessage</apiName><shortdesc>
	 Dispatched whenever a new message intented for all room occupants is received.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.GROUP_MESSAGE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched whenever a new message intented for all room occupants is received. The
	 <codeph>RoomEvent</codeph> class will contain an attribute <codeph>data</codeph> with the
	 group message as an instance of the <codeph>Message</codeph> class.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.DECLINED_declined"><apiName>declined</apiName><shortdesc>
	 Dispatched when an invite to this room has been declined by the invitee.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.DECLINED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when an invite to this room has been declined by the invitee. The <codeph>RoomEvent</codeph>
	 <codeph>data</codeph> property that has the following attributes:
	 	 <p><codeph>from</codeph>: The JID of the user initiating the invite
	 <codeph>reason</codeph>: A string containing the reason to join the room
	 <codeph>data</codeph>: The original message containing the decline</p>
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.CONFIGURE_ROOM_COMPLETE_configureRoomComplete"><apiName>configureRoomComplete</apiName><shortdesc>
	 Dispatched when a room configuration form is complete.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.CONFIGURE_ROOM_COMPLETE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when a room configuration form is complete.
	 	 </apiDesc></adobeApiEventDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/configure"><linktext>configure</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.CONFIGURE_ROOM_configureRoom"><apiName>configureRoom</apiName><shortdesc>
	 Dispatched when a room configuration form is required.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.CONFIGURE_ROOM</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when a room configuration form is required.	This can occur during the
	 creation of a room, or if a room configuration is requested.	The <codeph>RoomEvent</codeph>
	 instance will contain an attribute <codeph>data</codeph> that is an instance of an object
	 with the following attributes:
	 	 <p><codeph>instructions</codeph>: Instructions for the use of form
	 <codeph>title</codeph>: Title of the configuration form
	 <codeph>label</codeph>: A friendly name for the field
	 <codeph>name</codeph>: A computer readable identifier for the field used to identify
	 this field in the result passed to <codeph>configure()</codeph>
	 <codeph>type</codeph>: The type of the field to be displayed. Type will be a constant
	 from the <codeph>FormField</codeph> class.</p>
	 	 </apiDesc></adobeApiEventDetail><related-links><link href="org.igniterealtime.xiff.data.forms.xml#FormExtension"><linktext>org.igniterealtime.xiff.data.forms.FormExtension</linktext></link><link href="org.igniterealtime.xiff.data.forms.xml#FormField"><linktext>org.igniterealtime.xiff.data.forms.FormField</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/configure"><linktext>configure</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.BANNED_ERROR_bannedError"><apiName>bannedError</apiName><shortdesc>
	 Dispatched if the user attempted to join the room but was not allowed to do so because
	 they are banned (i.e., has an affiliation of "outcast").</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.BANNED_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched if the user attempted to join the room but was not allowed to do so because
	 they are banned (i.e., has an affiliation of "outcast").
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.AFFILIATIONS_affiliations"><apiName>affiliations</apiName><shortdesc>
	 Dispatched when an affiliation list has been requested.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.AFFILIATIONS</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when an affiliation list has been requested. The event object contains an
	 array of <codeph>MUCItems</codeph> containing the JID and affiliation properties.
	 	 <p>To grant or revoke permissions based on this list, only send the changes you wish to
	 make, calling grant/revoke with the new affiliation and existing JID.</p>
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.AFFILIATION_CHANGE_COMPLETE_affiliationChangeComplete"><apiName>affiliationChangeComplete</apiName><shortdesc>
	 Dispatched when an affiliation change has completed.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.AFFILIATION_CHANGE_COMPLETE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when an affiliation change has completed.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.RoomEvent.ADMIN_ERROR_adminError"><apiName>adminError</apiName><shortdesc>
	 Dispatched when an administration action failed.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RoomEvent.ADMIN_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RoomEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when an administration action failed.
	 	 </apiDesc></adobeApiEventDetail><related-links><link href="" invalidHref="org.igniterealtime.xiff.core.XMPPConnection.error.xml"><linktext>org.igniterealtime.xiff.core.XMPPConnection.error</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.conference:Room_org.igniterealtime.xiff.events.PropertyChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
	 Dispatched when the active, affiliation, or role property changes.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.PropertyChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.PropertyChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the active, affiliation, or role property changes.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.conference:Room:Room"><apiName>Room</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiData>null</apiData><apiDesc> A XMPPConnection instance that is providing the primary server connection
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.conference:Room:allow"><apiName>allow</apiName><shortdesc>
		 Allow a previously banned JIDs to enter this room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An array of unescaped JIDs to allow
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Allow a previously banned JIDs to enter this room.	This is the same as:
		 <codeph>Room.grant(AFFILIATION_NONE, jid)</codeph>
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <codeph>RoomEvent.ADMIN_ERROR</codeph></p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/grant"><linktext>grant</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/revoke"><linktext>revoke</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:ban"><apiName>ban</apiName><shortdesc>
		 Bans an array of JIDs from entering the room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An arry of unescaped JIDs to ban
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Bans an array of JIDs from entering the room.
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <codeph>RoomEvent.ADMIN_ERROR</codeph>.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:cancelConfiguration"><apiName>cancelConfiguration</apiName><shortdesc>
		 Cancels the configuration process.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Cancels the configuration process.	The room may still be locked if
		 you cancel the configuration process when attempting to join a
		 reserved room.
		 		 <p>You must have joined the room and have the owner affiliation to
		 configure the room.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/configureRoom"><linktext>configureRoom</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/configure"><linktext>configure</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/join"><linktext>join</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:changeSubject"><apiName>changeSubject</apiName><shortdesc>
		 Changes the subject in the conference room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newSubject</apiItemName><apiType value="String"/><apiDesc>The new subject
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Changes the subject in the conference room. You must have already joined the
		 room before you can change the subject.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:configure"><apiName>configure</apiName><shortdesc>
		 Sends a configuration form to the room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldmap</apiItemName><apiType value="Object"/><apiDesc>FormExtension, or a hash that is an object with keys being the room configuration
		 form variables and the values being arrays. For single value fields, use a single
		 element array.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a configuration form to the room.
		 		 You must be joined and have owner affiliation to configure the room
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/configureRoom"><linktext>configureRoom</linktext></link><link href="http://xmpp.org/extensions/xep-0045.html#registrar-formtype-owner"><linktext>http://xmpp.org/extensions/xep-0045.html#registrar-formtype-owner</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:decline"><apiName>decline</apiName><shortdesc>
		 Actively decline an invitation.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>An unescaped JID of the user to invite.
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A string describing why the invitiation was declined
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Actively decline an invitation.	You can optionally ignore invitations
		 but if you choose to decline an invitation, you call this method on
		 a room instance that represents the room the invite originated from.
		 		 <p>You do not need to have joined this room to decline an invitation</p>
		 		 <p>Note: mu-conference-0.6 does not allow users to send decline
		 messages without joining first.	If using this version of conferencing
		 software, it is best to ignore invites.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:destroy"><apiName>destroy</apiName><shortdesc>
		 Destroys a reserved room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A short description of why the room is being destroyed
		 </apiDesc></apiParam><apiParam><apiItemName>alternateJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>A JID for current members to use as an alternate room to join
		 after the room has been destroyed. Like a postal forwarding address.
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
		 Destroys a reserved room.	If the room has been configured to be persistent,
		 then it is optional that the server will permanently remove the room.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:getMessage"><apiName>getMessage</apiName><shortdesc>
		 Gets an instance of the Message class that has been pre-configured to be
		 sent from this room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A <codeph>Message</codeph> class instance
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body
		 </apiDesc></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body with HTML formatting
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets an instance of the <codeph>Message</codeph> class that has been pre-configured to be
		 sent from this room. Use this method to get a <codeph>Message</codeph> in order to add extensions
		 to outgoing room messages.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:getOccupantNamed"><apiName>getOccupantNamed</apiName><shortdesc>
		 Gets the RoomOccupant whose nickname matches the name passed in.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.conference:IRoomOccupant</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets the <codeph>RoomOccupant</codeph> whose nickname matches the name passed in.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:grant"><apiName>grant</apiName><shortdesc>
		 Grants permissions on a room to one or more JIDs by setting the
		 affiliation of a user based on their JID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiDesc>Use one of the
		 following affiliations: <codeph>Room.AFFILIATION_MEMBER</codeph>,
		 <codeph>Room.AFFILIATION_ADMIN</codeph>,
		 <codeph>Room.AFFILIATION_OWNER</codeph>
		 </apiDesc></apiParam><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An array of UnescapedJIDs to grant these permissions to
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Grants permissions on a room to one or more JIDs by setting the
		 affiliation of a user based on their JID.
		 		 <p>If the JID currently has an existing affiliation, then the existing
		 affiliation will be replaced with the one passed. If the process could not be
		 completed, the room will dispatch the event <codeph>RoomEvent.ADMIN_ERROR</codeph>.</p>
		 		 <p>XMPP spec states that the #admin schema should be used for affiliation changes.
		 Unfortunately to this date, Openfire does not match spec and requires the #owner schema.
		 Because of this, if granting privileges fails on the first attempt using the #admin schema,
		 we try again using the #owner schema.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/revoke"><linktext>revoke</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/allow"><linktext>allow</linktext></link><link href="http://xmpp.org/extensions/xep-0045.html#schemas-admin"><linktext>http://xmpp.org/extensions/xep-0045.html#schemas-admin</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:invite"><apiName>invite</apiName><shortdesc>
		 Invites a user that is not currently a member of this room to this room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>An unescaped JID of the user to invite.
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A string describing why you would like to invite the user.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Invites a user that is not currently a member of this room to this room.
		 		 <p>You must have joined the room and have appropriate permissions to invite
		 other memebers, because the server will format and send the invite message to
		 as if it came from the room rather that you sending the invite directly from you.</p>
		 		 <p>To listen to invite events, add an event listener on your XMPPConnection to the
		 <codeph>InviteEvent.INVITED</codeph> event.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:isThisRoom"><apiName>isThisRoom</apiName><shortdesc>
		 Determines if the sender parameter is the same
		 as the room's JID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the passed JID matches the getRoomJID
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>room JID to test
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the <codeph>sender</codeph> parameter is the same
		 as the room's JID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:isThisUser"><apiName>isThisUser</apiName><shortdesc>
		 Determines if the sender param is the
		 same as the user's JID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the passed JID matches the userJID
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>the room JID to test
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the <codeph>sender</codeph> param is the
		 same as the user's JID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:joinWithExplicitMUCExtension"><apiName>joinWithExplicitMUCExtension</apiName><shortdesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A boolean indicating whether the join attempt was successfully sent.
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/><apiDesc>Set to true if you wish to create and configure a reserved room
		 </apiDesc></apiParam><apiParam><apiItemName>mucExtension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.muc:IMUCExtension</apiOperationClassifier><apiDesc>The customized MUC extension to send with initial presence to the room.
		 </apiDesc></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>An array of additional extensions to send with the initial presence to the room.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.	This call will create an instant room based on a default
		 server configuration if the room doesn't exist.
		 		 <p>To create and begin the configuration process of a reserved room, pass
		 <codeph>true</codeph> to this method to begin the configuration process.	When
		 The configuration is complete, the room will be unlocked for others to join.
		 Listen for the <codeph>RoomEvent.CONFIGURE_ROOM</codeph> event to handle and
		 either return or cancel the configuration of the room.</p>
		 		 <p>This function adds an additional parameter to allow the caller to completely customize the MUC extension that
		 gets sent to the room.  For example, you can add a history element that specifies how much discussion
		 history you want sent when you join the room (http://xmpp.org/extensions/xep-0045.html#enter-managehistory):
		 <codeph>
		 var muc:MUCExtension = new MUCExtension();
		 muc.history = true;
		 muc.maxchars = 0;
		 _room.joinWithExplicitMUCExtension(false, mucExt);
		 </codeph>
		 </p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:join"><apiName>join</apiName><shortdesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A boolean indicating whether the join attempt was successfully sent.
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Set to true if you wish to create and configure a reserved room
		 </apiDesc></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>An array of additional extensions to send with the initial presence to the room.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.	This call will create an instant room based on a default
		 server configuration if the room doesn't exist.
		 		 <p>To create and begin the configuration process of a reserved room, pass
		 <codeph>true</codeph> to this method to begin the configuration process.	When
		 The configuration is complete, the room will be unlocked for others to join.
		 Listen for the <codeph>RoomEvent.CONFIGURE_ROOM</codeph> event to handle and
		 either return or cancel the configuration of the room.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:kickOccupant"><apiName>kickOccupant</apiName><shortdesc>
		 Kicks an occupant out of the room, assuming that the user has necessary
		 permissions in order to do so.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/><apiDesc>The nickname of the room occupant to kick
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>The reason for the kick
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Kicks an occupant out of the room, assuming that the user has necessary
		 permissions in order to do so. If the user does not, the server will return an error.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:leave"><apiName>leave</apiName><shortdesc>
		 Leaves the current conference room, assuming that the user has joined one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Leaves the current conference room, assuming that the user has joined one.
		 If the user is not currently in a room, this method does nothing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:requestAffiliations"><apiName>requestAffiliations</apiName><shortdesc>
		 Requests an affiliation list for a given affiliation with with room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiDesc>Use one of the following affiliations: <codeph>Room.AFFILIATION_NONE</codeph>,
		 <codeph>Room.AFFILIATION_OUTCAST</codeph>,
		 <codeph>Room.AFFILIATION_MEMBER</codeph>,
		 <codeph>Room.AFFILIATION_ADMIN</codeph>,
		 <codeph>Room.AFFILIATION_OWNER</codeph>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Requests an affiliation list for a given affiliation with with room.
		 This will either dispatch the event <codeph>RoomEvent.AFFILIATIONS</codeph> or
		 <codeph>RoomEvent.ADMIN_ERROR</codeph> depending on the result of the request.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/revoke"><linktext>revoke</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/grant"><linktext>grant</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/affiliations"><linktext>affiliations</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:requestConfiguration"><apiName>requestConfiguration</apiName><shortdesc>
		 Requests a configuration form from the room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Requests a configuration form from the room.	Listen to <codeph>configureRoom</codeph>
		 event to fill out the form then call either <codeph>configure</codeph> or
		 <codeph>cancelConfiguration</codeph> to complete the configuration process
		 		 You must be joined to the room and have the owner affiliation to request
		 a configuration form
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/configureRoom"><linktext>configureRoom</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/configure"><linktext>configure</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/cancelConfiguration"><linktext>cancelConfiguration</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:revoke"><apiName>revoke</apiName><shortdesc>
		 Revokes all affiliations from the JIDs.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An array of UnescapedJIDs to revoke affiliations from
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Revokes all affiliations from the JIDs. This is the same as:
		 <codeph>grant( Room.AFFILIATION_NONE, jids )</codeph>
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <codeph>RoomEvent.ADMIN_ERROR</codeph>. Note: if the JID is banned from this room,
		 then this will also revoke the banned status.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/grant"><linktext>grant</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/allow"><linktext>allow</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:sendMessageWithExtension"><apiName>sendMessageWithExtension</apiName><shortdesc>
		 Sends a message to the conference room with an extension attached.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier><apiDesc>The message to send
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a message to the conference room with an extension attached.
		 Use this method in conjunction with the <codeph>getMessage</codeph> method.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:sendMessage"><apiName>sendMessage</apiName><shortdesc>
		 Sends a message to the conference room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body
		 </apiDesc></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body with HTML formatting
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a message to the conference room.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:sendPrivateMessage"><apiName>sendPrivateMessage</apiName><shortdesc>
		 Sends a private message to a specific participant in the conference room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recipientNickname</apiItemName><apiType value="String"/><apiDesc>The conference room nickname of the recipient who should
		 receive the private message
		 </apiDesc></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body
		 </apiDesc></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body with HTML formatting
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a private message to a specific participant in the conference room.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:setOccupantVoice"><apiName>setOccupantVoice</apiName><shortdesc>
		 In a moderated room, sets voice status to a particular occupant, assuming the user
		 has the necessary permissions to do so.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/><apiDesc>The nickname of the occupant to give voice
		 </apiDesc></apiParam><apiParam><apiItemName>voice</apiItemName><apiType value="Boolean"/><apiDesc>Whether to add voice (true) or remove voice (false). Having voice means
		 that the user is actually able to talk. Without voice the user is effectively muted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 In a moderated room, sets voice status to a particular occupant, assuming the user
		 has the necessary permissions to do so.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.conference:Room:AFFILIATION_ADMIN"><apiName>AFFILIATION_ADMIN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>admin</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:AFFILIATION_MEMBER"><apiName>AFFILIATION_MEMBER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>member</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:AFFILIATION_NONE"><apiName>AFFILIATION_NONE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:AFFILIATION_OUTCAST"><apiName>AFFILIATION_OUTCAST</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>outcast</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:AFFILIATION_OWNER"><apiName>AFFILIATION_OWNER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>owner</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:ROLE_MODERATOR"><apiName>ROLE_MODERATOR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>moderator</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:ROLE_NONE"><apiName>ROLE_NONE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:ROLE_PARTICIPANT"><apiName>ROLE_PARTICIPANT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>participant</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:ROLE_VISITOR"><apiName>ROLE_VISITOR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>visitor</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:active:get"><apiName>active</apiName><shortdesc>
		 Determines whether the connection to the room is active - that is, the user
		 is connected and has joined the room.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Determines whether the connection to the room is active - that is, the user
		 is connected and has joined the room.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:affiliation:get"><apiName>affiliation</apiName><shortdesc>
		 Gets the user's affiliation for this room.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Gets the user's affiliation for this room.
		 Possible affiliations are "owner", "admin", "member", and "outcast".
		 It is also possible to have no defined affiliation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:anonymous:get"><apiName>anonymous</apiName><shortdesc>
		 Whether the room shows full JIDs or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Whether the room shows full JIDs or not.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:conferenceServer:get"><apiName>conferenceServer</apiName><shortdesc>
		 The conference server to use for this room.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The conference server to use for this room. Usually, this is a subdomain of
		 the primary XMPP server, like conference.myserver.com.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:connection:get"><apiName>connection</apiName><shortdesc>
		 A reference to the XMPPConnection being used for incoming/outgoing XMPP data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the XMPPConnection being used for incoming/outgoing XMPP data.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection"><linktext>org.igniterealtime.xiff.core.XMPPConnection</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:nickname:get"><apiName>nickname</apiName><shortdesc>
		 The nickname to use when joining.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The nickname to use when joining.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:password:get"><apiName>password</apiName><shortdesc>
		 The password.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The password.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:role:get"><apiName>role</apiName><shortdesc>
		 Gets the user's role in the conference room.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Gets the user's role in the conference room.
		 		 <p>Possible roles are "visitor", "participant", "moderator" or no defined role.</p>
		 <ul>
		 <li>ROLE_MODERATOR</li>
		 <li>ROLE_NONE</li>
		 <li>ROLE_PARTICIPANT</li>
		 <li>ROLE_VISITOR</li>
		 </ul>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:roomJID:get"><apiName>roomJID</apiName><shortdesc>
		 The unescaped JID of the room.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The unescaped JID of the room. <codeph>room@conference.server</codeph>
		 Set this after initiating a new Room.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:roomName:get"><apiName>roomName</apiName><shortdesc>
		 The room name that should be used when joining.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The room name that should be used when joining.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:subject:get"><apiName>subject</apiName><shortdesc>
		 The subject.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The subject.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:Room:userJID:get"><apiName>userJID</apiName><shortdesc>
		 Get the JID of the conference room user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 Get the JID of the conference room user.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:InviteListener"><apiName>InviteListener</apiName><shortdesc>
	 Manages the dispatching of events during invitations.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IListener</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Manages the dispatching of events during invitations. Add event
	 listeners to an instance of this class to monitor invite and decline
	 events.
	 	 <p>You only need a single instance of this class to listen for all invite
	 or decline events.</p>
	 </apiDesc></apiClassifierDetail><adobeApiEvent id="org.igniterealtime.xiff.conference:InviteListener_org.igniterealtime.xiff.InviteEvent.INVITED_invited"><apiName>invited</apiName><shortdesc>
	 Dispatched when an invitations has been received.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.InviteEvent.INVITED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.InviteEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when an invitations has been received.
	 	 </apiDesc></adobeApiEventDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room"><linktext>org.igniterealtime.xiff.conference.Room</linktext></link><link href="" invalidHref="org.igniterealtime.xiff.conference.Room.xml#/invite"><linktext>org.igniterealtime.xiff.conference.Room..invite</linktext></link></related-links></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.conference:InviteListener:InviteListener"><apiName>InviteListener</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiData>null</apiData><apiDesc>An XMPPConnection instance that is providing the primary server
		 connection.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.conference:InviteListener:connection:get"><apiName>connection</apiName><shortdesc>
		 A reference to the XMPPConnection being used for incoming/outgoing XMPP data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef><apiDesc>
		 A reference to the XMPPConnection being used for incoming/outgoing XMPP data.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection"><linktext>org.igniterealtime.xiff.core.XMPPConnection</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:RoomFile"><apiName>RoomFile</apiName><shortdesc>
	 ?
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 ?
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.conference:RoomFile:RoomFile"><apiName>RoomFile</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:RoomFileRepository"><apiName>RoomFileRepository</apiName><shortdesc>
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:IRoomOccupant"><apiName>IRoomOccupant</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IContact</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.conference:IRoomOccupant:org.igniterealtime.xiff.conference:IRoomOccupant:affiliation:get"><apiName>affiliation</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoomOccupant:org.igniterealtime.xiff.conference:IRoomOccupant:role:get"><apiName>role</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoomOccupant:org.igniterealtime.xiff.conference:IRoomOccupant:room:get"><apiName>room</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.conference:IRoom</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoomOccupant:org.igniterealtime.xiff.conference:IRoomOccupant:rosterItem:get"><apiName>rosterItem</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:IRoom"><apiName>IRoom</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.collections:ICollection</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:allow"><apiName>allow</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:ban"><apiName>ban</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:cancelConfiguration"><apiName>cancelConfiguration</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:changeSubject"><apiName>changeSubject</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newSubject</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:configure"><apiName>configure</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldmap</apiItemName><apiType value="Object"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:decline"><apiName>decline</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:destroy"><apiName>destroy</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>alternateJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiData>null</apiData></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:getMessage"><apiName>getMessage</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:getOccupantNamed"><apiName>getOccupantNamed</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.conference:IRoomOccupant</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:grant"><apiName>grant</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:invite"><apiName>invite</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:isThisRoom"><apiName>isThisRoom</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:isThisUser"><apiName>isThisUser</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:joinWithExplicitMUCExtension"><apiName>joinWithExplicitMUCExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>mucExtension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.muc:IMUCExtension</apiOperationClassifier></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:join"><apiName>join</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:kickOccupant"><apiName>kickOccupant</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:leave"><apiName>leave</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:requestAffiliations"><apiName>requestAffiliations</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:requestConfiguration"><apiName>requestConfiguration</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:revoke"><apiName>revoke</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:sendMessageWithExtension"><apiName>sendMessageWithExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:sendMessage"><apiName>sendMessage</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:sendPrivateMessage"><apiName>sendPrivateMessage</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recipientNickname</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:setOccupantVoice"><apiName>setOccupantVoice</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>voice</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:active:get"><apiName>active</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:affiliation:get"><apiName>affiliation</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:anonymous:get"><apiName>anonymous</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:conferenceServer:get"><apiName>conferenceServer</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:connection:get"><apiName>connection</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:nickname:get"><apiName>nickname</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:password:get"><apiName>password</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:role:get"><apiName>role</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:roomJID:get"><apiName>roomJID</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:roomName:get"><apiName>roomName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:subject:get"><apiName>subject</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:userJID:get"><apiName>userJID</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:RoomOccupant"><apiName>RoomOccupant</apiName><shortdesc>
	 A person in a room
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.conference:IRoomOccupant</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A person in a room
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html#user"><linktext>http://xmpp.org/extensions/xep-0045.html#user</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.conference:RoomOccupant:RoomOccupant"><apiName>RoomOccupant</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>show</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>role</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>room</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.conference:IRoom</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:affiliation:get"><apiName>affiliation</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:jid:get"><apiName>jid</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:nickname:get"><apiName>nickname</apiName><shortdesc>
		 Used to be 'displayName' before XML migration
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Used to be 'displayName' before XML migration
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:online:get"><apiName>online</apiName><shortdesc>
		 RoomOccupants can't exist unless they're online
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 RoomOccupants can't exist unless they're online
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:role:get"><apiName>role</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:room:get"><apiName>room</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.conference:IRoom</apiValueClassifier></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:rosterItem:get"><apiName>rosterItem</apiName><shortdesc>
		 If there isn't a roster item associated with this room occupant
		 (for example, if the room is anonymous), this will return null
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiValueClassifier></apiValueDef><apiDesc>
		 If there isn't a roster item associated with this room occupant
		 (for example, if the room is anonymous), this will return null
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:show:get"><apiName>show</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.conference:RoomOccupant:uid:get"><apiName>uid</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.core"><apiName>org.igniterealtime.xiff.core</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.core:XMPPConnection"><apiName>XMPPConnection</apiName><shortdesc>
	 This class is used to connect to and manage data coming from an XMPP server.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class is used to connect to and manage data coming from an XMPP server.
	 Use one instance of this class per connection.
	 </apiDesc></apiClassifierDetail><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.IQEvent_"><apiName/><shortdesc>
	 Dispatched on incoming IQ data that has an enabled extension.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.IQEvent</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.IQEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched on incoming IQ data that has an enabled extension.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.PresenceEvent.PRESENCE_presence"><apiName>presence</apiName><shortdesc>
	 Dispatched on incoming presence data.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.PresenceEvent.PRESENCE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.PresenceEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched on incoming presence data.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.OutgoingDataEvent.OUTGOING_DATA_outgoingData"><apiName>outgoingData</apiName><shortdesc>
	 Dispatched whenever data is sent to the server.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.OutgoingDataEvent.OUTGOING_DATA</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.OutgoingDataEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched whenever data is sent to the server.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.MessageEvent.MESSAGE_message"><apiName>message</apiName><shortdesc>
	 Dispatched on incoming messages.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.MessageEvent.MESSAGE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.MessageEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched on incoming messages.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.LoginEvent.LOGIN_login"><apiName>login</apiName><shortdesc>
	 Dispatched on successful authentication (login) with the server.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.LoginEvent.LOGIN</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.LoginEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched on successful authentication (login) with the server.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.IncomingDataEvent.INCOMING_DATA_incomingData"><apiName>incomingData</apiName><shortdesc>
	 Dispatched whenever there is incoming XML data.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.IncomingDataEvent.INCOMING_DATA</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.IncomingDataEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched whenever there is incoming XML data.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.XIFFErrorEvent.XIFF_ERROR_error"><apiName>error</apiName><shortdesc>
	 Dispatched when there is some type of XMPP error.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.XIFFErrorEvent.XIFF_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.XIFFErrorEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when there is some type of XMPP error.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.DisconnectionEvent.DISCONNECT_disconnection"><apiName>disconnection</apiName><shortdesc>
	 Dispatched when there is a disconnection from the server.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.DisconnectionEvent.DISCONNECT</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.DisconnectionEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when there is a disconnection from the server.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:XMPPConnection_org.igniterealtime.xiff.events.ConnectionSuccessEvent.CONNECT_SUCCESS_connection"><apiName>connection</apiName><shortdesc>
	 Dispatched when the connection is successfully made to the server.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.ConnectionSuccessEvent.CONNECT_SUCCESS</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.ConnectionSuccessEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the connection is successfully made to the server.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.core:XMPPConnection:XMPPConnection"><apiName>XMPPConnection</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor. By default will enable the following extensions:
		 		 <ul>
		 <li>AuthExtension, any kind of authentication</li>
		 <li>BindExtension, resource binding</li>
		 <li>SessionExtension</li>
		 <li>PingExtension, for keeping the connection alive</li>
		 <li>InfoDiscoExtension, for outgoing Service Discovery</li>
		 </ul>
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:beginAuthentication"><apiName>beginAuthentication</apiName><shortdesc>
		 SASL Authentication should been set up, begin the authentication
		 process by sending the initial request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 SASL Authentication should been set up, begin the authentication
		 process by sending the initial request.
		 		 <p>Make sure that the username and password are set, or the connection is using
		 anonymous authentication before calling this method.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:bindConnection"><apiName>bindConnection</apiName><shortdesc>
		 Upon being so informed that resource binding is required, the client
		 MUST bind a resource to the stream by sending to the server an IQ
		 stanza of type "set" (see IQ Semantics (Section 9.2.3)) containing
		 data qualified by the 'urn:ietf:params:xml:ns:xmpp-bind' namespace.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Upon being so informed that resource binding is required, the client
		 MUST bind a resource to the stream by sending to the server an IQ
		 stanza of type "set" (see IQ Semantics (Section 9.2.3)) containing
		 data qualified by the 'urn:ietf:params:xml:ns:xmpp-bind' namespace.
		 		 <p>If the client wishes to allow the server to generate the resource
		 identifier on its behalf, it sends an IQ stanza of type "set" that
		 contains an empty <b>bind</b> element.</p>
		 		 <p>Client asks server to bind a resource:
		 <pre>
		 <iq id="bind_1" type="set">
		  <bind xmlns="urn:ietf:params:xml:ns:xmpp-bind"/>
		 </iq>
		 </pre></p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:checkIncomingData"><apiName>checkIncomingData</apiName><shortdesc>
		 Check if the incoming data is complete once added to any existing
		 incoming data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiDesc>XML that is complete, or just null in case it is not complete
		 </apiDesc><apiType value="XML"/></apiReturn><apiParam><apiItemName>bytedata</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Check if the incoming data is complete once added to any existing
		 incoming data.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:chooseStreamTags"><apiName>chooseStreamTags</apiName><shortdesc>
		 Choose the stream start and ending tags based on the given type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="uint"/><apiDesc>One of the <codeph>STREAM_TYPE_...</codeph> constants of this class.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Choose the stream start and ending tags based on the given type.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:configureAuthMechanisms"><apiName>configureAuthMechanisms</apiName><shortdesc>
		 Use the authentication which is first in the list (saslMechanisms) if possible.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>mechanisms</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Use the authentication which is first in the list (<codeph>saslMechanisms</codeph>) if possible.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/saslMechanisms"><linktext>saslMechanisms</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:configureStreamCompression"><apiName>configureStreamCompression</apiName><shortdesc>
		 Zlib is the most common and the one which is required to be implemented in case
		 Stream Compression is used.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>method</apiItemName><apiType value="String"/><apiData>zlib</apiData></apiParam></apiOperationDef><apiDesc>
		 Zlib is the most common and the one which is required to be implemented in case
		 Stream Compression is used.
		 		 <p>Ask the server to enable Zlib compression of the stream.</p>
		 <p>Supported types in XMPP are <codeph>zlib</codeph> and <codeph>lzw</codeph>.</p>
		 <p>XIFF however only supports <codeph>zlib</codeph> and only after the Adler32 checksum is somehow implemented.</p>
		 		 <p>Flash Player 11.4, code named "Dolores" (second half of 2012) will have LZMA ByteArray compression available...</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://www.adobe.com/devnet/flashplatform/whitepapers/roadmap.html"><linktext>http://www.adobe.com/devnet/flashplatform/whitepapers/roadmap.html</linktext></link><link href="http://xmpp.org/registrar/compress.html"><linktext>http://xmpp.org/registrar/compress.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:connect"><apiName>connect</apiName><shortdesc>
		 Connects to the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Any of the STREAM_TYPE_.. constants.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Connects to the server. Use one of the STREAM_TYPE_.. constants.
		 Possible options are:
		 <ul>
		 <li>standard (default)</li>
		 <li>standard terminated</li>
		 <li>flash</li>
		 <li>flash terminated</li>
		 </ul>
		 Some servers, like Jabber, Inc.'s XCP and Jabberd 1.4 expect &lt;flash:stream&gt; from
		 a Flash client instead of the standard &lt;stream:stream&gt;.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:createConnection"><apiName>createConnection</apiName><shortdesc>
		 Set up the connection and listeners related to this class.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Set up the connection and listeners related to this class.
		 		 <p>This method should be overridden in any class that would extend this one
		 and provide alternative way for connectiong, such as BOSH or TLSSocket.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.net.Socket.xml"><linktext>flash.net.Socket</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:disableExtensions"><apiName>disableExtensions</apiName><shortdesc>
		 Disable the given extensions from the registery.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
		 Disable the given extensions from the registery.
		 This is mainly useful only at runtime.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:disableSASLMechanism"><apiName>disableSASLMechanism</apiName><shortdesc>
		 Remove a SASL mechanism from this connection
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove a SASL mechanism from this connection
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:disconnect"><apiName>disconnect</apiName><shortdesc>
		 Disconnects from the server if currently connected.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Disconnects from the server if currently connected. After disconnect,
		 a <codeph>DisconnectionEvent.DISCONNECT</codeph> event is broadcast.
		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.events.xml#DisconnectionEvent"><linktext>org.igniterealtime.xiff.events.DisconnectionEvent</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:dispatchError"><apiName>dispatchError</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><exampleText>dispatchError("bind-failed", "BindExtension came without a JID");
		 		 </exampleText></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>condition</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>code</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Legacy code, try not to use. Will be removed in XIFF 3.2.0
		 </apiDesc></apiParam><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:Extension</apiOperationClassifier><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:enableExtensions"><apiName>enableExtensions</apiName><shortdesc>
		 Enable the given extensions for interacting with the incoming data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
		 Enable the given extensions for interacting with the incoming data.
		 Once an extension is enabled, it can be listened by adding an event
		 listener to its namespace.
		 		 <p>Some extensions might responce to an incoming request, such as
		 SoftwareVersionExtension if enabled</p>
		 		 <p>Notes about extension dependencies:</p>
		 		 <ul>
		 <li>If you will need <codeph>Message.htmlBody</codeph>, use <codeph>XHTMLExtension</codeph>.</li>
		 <li><codeph>SearchExtension</codeph> will need <codeph>FormExtension</codeph> to be enabled.</li>
		 <li>Plan to use <codeph>Roster</codeph>? Enable <codeph>RosterExtension</codeph></li>
		 <li><codeph>BookmarkManager</codeph> needs <codeph>BookmarkPrivatePayload</codeph> to be enabled</li>
		 <li><codeph>Browser</codeph> needs <codeph>ItemDiscoExtension</codeph>, <codeph>InfoDiscoExtension</codeph> and <codeph>BrowseExtension</codeph></li>
		 <li><codeph>Room</codeph> will enable <codeph>MUC</codeph> and <codeph>FormExtension</codeph> by itself</li>
		 </ul>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:enableSASLMechanism"><apiName>enableSASLMechanism</apiName><shortdesc>
		 Add a SASL mechanism available for this connection
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>authClass</apiItemName><apiType value="Class"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add a SASL mechanism available for this connection
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:establishSession"><apiName>establishSession</apiName><shortdesc>
		 Runs after binding
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Runs after binding
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://tools.ietf.org/html/rfc3921#section-3"><linktext>http://tools.ietf.org/html/rfc3921#section-3</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:flushPresenceQueue"><apiName>flushPresenceQueue</apiName><shortdesc>
		 Dispatches a single PresenceEvent in case there are any in the
		 queue.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:TimerEvent"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Dispatches a single PresenceEvent in case there are any in the
		 queue. This event will contain all the presences available at this
		 given moment.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleAuthentication"><apiName>handleAuthentication</apiName><shortdesc>
		 Upon receiving a success indication within the SASL negotiation, the
		 client MUST send a new stream header to the server, to which the
		 server MUST respond with a stream header as well as a list of
		 available stream features.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Upon receiving a success indication within the SASL negotiation, the
		 client MUST send a new stream header to the server, to which the
		 server MUST respond with a stream header as well as a list of
		 available stream features.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleMessage"><apiName>handleMessage</apiName><shortdesc>
		 TODO: Add similar extension handling as in IQ,
		 after message specific extensions are separated from Message class, v3.2.0
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 TODO: Add similar extension handling as in IQ,
		 after message specific extensions are separated from Message class, v3.2.0
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleNodeType"><apiName>handleNodeType</apiName><shortdesc>
		 Calls a appropriate parser base on the nodeName.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Calls a appropriate parser base on the nodeName.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handlePresence"><apiName>handlePresence</apiName><shortdesc>
		 Handle the incoming Presence either with the queue timer or directly
		 dispatching the PresenceEvent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:Presence</apiOperationClassifier></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Handle the incoming <codeph>Presence</codeph> either with the queue timer or directly
		 dispatching the <codeph>PresenceEvent</codeph>. In both cases the event occurs right after
		 this method.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStreamError"><apiName>handleStreamError</apiName><shortdesc>
		 Handle stream error related element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>Error node
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Handle stream error related element.
		 		 <p>RFC 3920 (XMPP Core, published October 2004),
		 in chapters 4.7. defines Stream Errors:</p>
		 		 <p>MUST contain a child element corresponding to one of the defined
		 stanza error conditions defined below; this element MUST be
		 qualified by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace.</p>
		 		 <p>MAY contain a <b>text</b> child containing XML character data that
		 describes the error in more detail; this element MUST be qualified
		 by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace and SHOULD
		 possess an 'xml:lang' attribute specifying the natural language of
		 the XML character data.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/protocols/urn_ietf_params_xml_ns_xmpp-streams/"><linktext>http://xmpp.org/protocols/urn_ietf_params_xml_ns_xmpp-streams/</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-4.7"><linktext>http://tools.ietf.org/html/rfc3920#section-4.7</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStreamFeatures"><apiName>handleStreamFeatures</apiName><shortdesc>
		 Handle features that are available in the connected server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Handle features that are available in the connected server.
		 		 <adobetable>
		 
		 <tgroup cols="10"><thead><row><row>
		 <entry>Feature</entry>
		 <entry>XML Element</entry>
		 <entry>Description</entry>
		 <entry>Documentation</entry>
		 </row><row>
		 <entry>amp</entry>
		 <entry>&lt;amp xmlns='http://jabber.org/features/amp'&gt;</entry><entry>Support for Advanced Message Processing</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0079.html">XEP-0079: Advanced Message Processing</xref></entry>
		 </row><row>
		 <entry>compress</entry>
		 <entry>&lt;compression xmlns='http://jabber.org/features/compress'&gt;</entry>
		 <entry>Support for Stream Compression</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0138.html">XEP-0138: Stream Compression</xref></entry>
		 </row><row>
		 <entry>iq-auth</entry>
		 <entry>&lt;auth xmlns='http://jabber.org/features/iq-auth'&gt;</entry>
		 <entry>Support for Non-SASL Authentication</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0078.html">XEP-0078: Non-SASL Authentication</xref></entry>
		 </row><row>
		 <entry>iq-register</entry>
		 <entry>&lt;register xmlns='http://jabber.org/features/iq-register'&gt;</entry>
		 <entry>Support for In-Band Registration</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0077.html">XEP-0077: In-Band Registration</xref></entry>
		 </row><row>
		 <entry>bind</entry>
		 <entry>&lt;bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'&gt;</entry>
		 <entry>Support for Resource Binding</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</xref></entry>
		 </row><row>
		 <entry>mechanisms</entry>
		 <entry>&lt;mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'&gt;</entry>
		 <entry>Support for Simple Authentication and Security Layer (SASL)</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</xref></entry>
		 </row><row>
		 <entry>session</entry><entry>&lt;session xmlns='urn:ietf:params:xml:ns:xmpp-session'&gt;</entry>
		 <entry>Support for IM Session Establishment</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6121.txt">RFC 6121: XMPP IM</xref></entry>
		 </row><row>
		 <entry>starttls</entry>
		 <entry>&lt;starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'&gt;</entry>
		 <entry>Support for Transport Layer Security (TLS)</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</xref></entry>
		 </row><row>
		 <entry>sm</entry>
		 <entry>&lt;sm xmlns='urn:xmpp:sm:3'&gt;</entry><entry>Support for Stream Management</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0198.html">XEP-0198: Stream Management</xref></entry>
		 </row></row></thead><tbody/></tgroup></adobetable>
		 		 <p>The XMPP RFCs define an ordering for the features defined therein, namely:</p>
		 <ol>
		   <li>TLS, requires the use of <codeph>XMPPTLSConnection</codeph></li>
		   <li>In-band registration, if registration needed</li>
		   <li>SASL</li>
		   <li>Stream compression, if used</li>
		   <li>Resource binding</li>
		 </ol>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/registrar/stream-features.html"><linktext>http://xmpp.org/registrar/stream-features.html</linktext></link><link href="http://xmpp.org/extensions/xep-0170.html"><linktext>http://xmpp.org/extensions/xep-0170.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStreamTLS"><apiName>handleStreamTLS</apiName><shortdesc>
		 Checks if the TLS feature available is required or not and dispatches
		 an error in case it is.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>The feature containing starttls tag.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Checks if the TLS feature available is required or not and dispatches
		 an error in case it is.
		 		 <p>A connection class supporting TLS should override this handler.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPRTMPConnection/handleStreamTLS"><linktext>org.igniterealtime.xiff.core.XMPPRTMPConnection.handleStreamTLS</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStream"><apiName>handleStream</apiName><shortdesc>
		 Initial stream element has been received once this method is called.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initial stream element has been received once this method is called.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:onIOError"><apiName>onIOError</apiName><shortdesc>
		 This fires the standard dispatchError method
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:IOErrorEvent"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This fires the standard dispatchError method
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:parseDataReceived"><apiName>parseDataReceived</apiName><shortdesc>
		 Parses the data which the socket just received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>bytedata</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Parses the data which the socket just received.
		 Used to simplify the overrides from classes extending this one.
		 		 <p>Dispatches the <codeph>IncomingDataEvent</codeph>. Also takes care
		 of increasing the incoming bytes statistic.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:removeSocketEventListeners"><apiName>removeSocketEventListeners</apiName><shortdesc>
		 Remove those listeners that the createConnection method added.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove those listeners that the <codeph>createConnection</codeph> method added.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:sendDataToServer"><apiName>sendDataToServer</apiName><shortdesc>
		 Overwrite this method to use other kind of socket,
		 request or connection, if needed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef><apiDesc>
		 Overwrite this method to use other kind of socket,
		 request or connection, if needed.
		 <p>Then use the sendXML method when sending XML.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:sendData"><apiName>sendData</apiName><shortdesc>
		 Dispatches OutgoingDataEvent, handles possible Stream Compression and
		 calls sendDataToServer.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiDesc>XML that is not always complete for a reason, like sending the closing element
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Dispatches <codeph>OutgoingDataEvent</codeph>, handles possible Stream Compression and
		 calls <codeph>sendDataToServer</codeph>.
		 		 <p>Also takes care of increasing the outgoing bytes statistic.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc>
		 Sends ping to server in order to keep the connection alive, in case the server
		 has not indicated that it would not support it.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Sends ping to server in order to keep the connection alive, in case the server
		 has not indicated that it would not support it.
		 		 TODO: Whitespace keepalive if ping not supported...
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:sendXML"><apiName>sendXML</apiName><shortdesc>
		 Pass through to sendData which takes care of the common
		 data handling between all connection classes.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Pass through to <codeph>sendData</codeph> which takes care of the common
		 data handling between all connection classes.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:send"><apiName>send</apiName><shortdesc>
		 Sends data to the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IXMPPStanza</apiOperationClassifier><apiDesc>The data to send. This must be an instance of a class that implements the INodeProxy interface.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends data to the server. If the data to send cannot be serialized properly,
		 this method throws a <codeph>SerializeException</codeph>.
		 		 </apiDesc><example>The following example sends a basic chat message to the user with the
		 JID "sideshowbob@springfieldpenitentiary.gov".
		 <codeph>var message:Message = new Message( "sideshowbob@springfieldpenitentiary.gov", null, "Hi Bob.",
		 "<b>Hi Bob.</b>", Message.TYPE_CHAT );
		 myXMPPConnection.send( message );</codeph>
		 </example></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#INodeProxy"><linktext>org.igniterealtime.xiff.data.INodeProxy</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:serviceDiscoveryResponce"><apiName>serviceDiscoveryResponce</apiName><shortdesc>
		 Send a response to the Service Discovery query.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Send a response to the Service Discovery query.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links></apiOperation><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:STREAM_TYPE_FLASH_TERMINATED"><apiName>STREAM_TYPE_FLASH_TERMINATED</apiName><shortdesc>
		 Stream type lets user set opening/closing tag.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="uint"/></apiValueDef><apiDesc>
		 Stream type lets user set opening/closing tag.
		 <codeph>&lt;flash:stream /&gt;</codeph>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:STREAM_TYPE_FLASH"><apiName>STREAM_TYPE_FLASH</apiName><shortdesc>
		 Stream type lets user set opening/closing tag.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="uint"/></apiValueDef><apiDesc>
		 Stream type lets user set opening/closing tag.
		 <codeph>&lt;flash:stream&gt;</codeph>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:STREAM_TYPE_STANDARD_TERMINATED"><apiName>STREAM_TYPE_STANDARD_TERMINATED</apiName><shortdesc>
		 Stream type lets user set opening/closing tag.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="uint"/></apiValueDef><apiDesc>
		 Stream type lets user set opening/closing tag.
		 <codeph>&lt;stream:stream /&gt;</codeph>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:STREAM_TYPE_STANDARD"><apiName>STREAM_TYPE_STANDARD</apiName><shortdesc>
		 Stream type lets user set opening/closing tag.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="uint"/></apiValueDef><apiDesc>
		 Stream type lets user set opening/closing tag.
		 <codeph>&lt;stream:stream&gt;</codeph>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:_compressor"><apiName>_compressor</apiName><shortdesc>
		 Static class that is used to handle the compression
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>null</apiData><apiValueClassifier>org.igniterealtime.xiff.util:ICompressor</apiValueClassifier></apiValueDef><apiDesc>
		 Static class that is used to handle the compression
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:_registrationSupported"><apiName>_registrationSupported</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:_server"><apiName>_server</apiName><shortdesc>
		 Server to connect, could be different of the login domain.</shortdesc><prolog><asCustoms><exampleText>talk.google.com
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
		 Server to connect, could be different of the login domain.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:closingStreamTag"><apiName>closingStreamTag</apiName><shortdesc>
		 Depending of the STREAM_TYPE_used in the connect() method,
		 this variable will contain a matching closing element for it.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
		 Depending of the STREAM_TYPE_used in the <codeph>connect()</codeph> method,
		 this variable will contain a matching closing element for it.
		 <codeph>parseDataReceived()</codeph> method will use this value.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:expireTagSearch"><apiName>expireTagSearch</apiName><shortdesc>
		 Once received data from the socket, should the closing tag be seached?
		 Initially this should be true as for the first incoming data
		 there might be an error available.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Once received data from the socket, should the closing tag be seached?
		 Initially this should be <codeph>true</codeph> as for the first incoming data
		 there might be an error available.
		 		 TODO: Not used, not needed?
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:featuresAvailable"><apiName>featuresAvailable</apiName><shortdesc>
		 Features as provided by the server, in their original XML form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="XML"/></apiValueDef><apiDesc>
		 Features as provided by the server, in their original XML form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:openingStreamTag"><apiName>openingStreamTag</apiName><shortdesc>
		 Opening part of the stream tag, such as
		 &amp;lt;stream:stream or &amp;lt;flash:stream
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc>
		 Opening part of the stream tag, such as
		 <codeph>&lt;stream:stream</codeph> or <codeph>&lt;flash:stream</codeph>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:pendingIQs"><apiName>pendingIQs</apiName><shortdesc>
		 Hash to hold callbacks for IQs
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
		 Hash to hold callbacks for IQs
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:pingNotSupported"><apiName>pingNotSupported</apiName><shortdesc>
		 Server supports keeping the connection alive with Ping extension
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Server supports keeping the connection alive with Ping extension
		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0199.html"><linktext>http://xmpp.org/extensions/xep-0199.html</linktext></link><link href="org.igniterealtime.xiff.data.ping.xml#PingExtension"><linktext>org.igniterealtime.xiff.data.ping.PingExtension</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:presenceQueue"><apiName>presenceQueue</apiName><shortdesc>
		 List of incoming presences that are waiting to be dispatched
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef><apiDesc>
		 List of incoming presences that are waiting to be dispatched
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:saslMechanisms"><apiName>saslMechanisms</apiName><shortdesc>
		 The types of SASL mechanisms available.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Object"/></apiValueDef><apiDesc>
		 The types of SASL mechanisms available. Indexed by their MECHANISM constant.
		 		 <p>By default, only <codeph>Anonymous</codeph> and <codeph>DigestMD5</codeph> are enabled.</p>
		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.auth.xml#Anonymous"><linktext>org.igniterealtime.xiff.auth.Anonymous</linktext></link><link href="org.igniterealtime.xiff.auth.xml#DigestMD5"><linktext>org.igniterealtime.xiff.auth.DigestMD5</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:socket"><apiName>socket</apiName><shortdesc>
		 Binary socket used to connect to the XMPP server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="flash.net:Socket"/></apiValueDef><apiDesc>
		 Binary socket used to connect to the XMPP server.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:streamTagSearch"><apiName>streamTagSearch</apiName><shortdesc>
		 Depending of the STREAM_TYPE_used in the connect() method,
		 the name of the opening tag for stream is saved in this variable, such as
		 stream:stream or flash:stream.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>stream:stream</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Depending of the STREAM_TYPE_used in the <codeph>connect()</codeph> method,
		 the name of the opening tag for stream is saved in this variable, such as
		 <codeph>stream:stream</codeph> or <codeph>flash:stream</codeph>.
		 		 <p>Default value matches the default value of <codeph>connect()</codeph> method,
		 which is STREAM_TYPE_STANDARD.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:tlsEnabled"><apiName>tlsEnabled</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:protected:tlsRequired"><apiName>tlsRequired</apiName><shortdesc>
		 Even if this class is not implementing TLS, it needs to be aware
		 if it has been extended by XMPPTLSConnection that will
		 set this value to true.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Even if this class is not implementing TLS, it needs to be aware
		 if it has been extended by <codeph>XMPPTLSConnection</codeph> that will
		 set this value to <codeph>true</codeph>.
		 		 <p>For example <codeph>handleStreamFeatures</codeph> uses this value.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/handleStreamFeatures"><linktext>handleStreamFeatures</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:active:get"><apiName>active</apiName><shortdesc>
		 Determines whether the connection with the server is currently active.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Determines whether the connection with the server is currently active.
		 		 <p>Not necessarily logged in. For login status, use the
		 <codeph>loggedIn</codeph> method.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/loggedIn"><linktext>org.igniterealtime.xiff.core.XMPPConnection.loggedIn</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:compress:get"><apiName>compress</apiName><shortdesc>
		 Shall the Stream Compression be allowed if the server supports it.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Shall the Stream Compression be allowed if the server supports it.
		 		 <p><codeph>compressor</codeph> needs to be set too.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0138.html"><linktext>http://xmpp.org/extensions/xep-0138.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:compressor:get"><apiName>compressor</apiName><shortdesc>
		 The class that is to be used for Stream Compression if enabled.</shortdesc><prolog><asCustoms><exampleText>_connection.compressor = new Zlib();
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.util:ICompressor</apiValueClassifier><apiDefaultValue>null
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The class that is to be used for Stream Compression if enabled.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0138.html"><linktext>http://xmpp.org/extensions/xep-0138.html</linktext></link><link href="org.igniterealtime.xiff.util.xml#Zlib"><linktext>org.igniterealtime.xiff.util.Zlib</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:domain:get"><apiName>domain</apiName><shortdesc>
		 The XMPP domain to use with the server.</shortdesc><prolog><asCustoms><exampleText>gmail.com
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The XMPP domain to use with the server.
		 User domain. Used as the server unless <codeph>server</codeph> is specifically set to something different.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:incomingBytes:get"><apiName>incomingBytes</apiName><shortdesc>
		 Get the total count of the received bytes in the current session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Get the total count of the received bytes in the current session.
		 <p>Mainly useful for tracking network traffic.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:jid:get"><apiName>jid</apiName><shortdesc>
		 Gets the fully qualified unescaped JID of the user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 Gets the fully qualified unescaped JID of the user.
		 <p>A fully-qualified JID includes the resource. A bare JID does not.
		 To get the bare JID, use the <codeph>bareJID</codeph> property of the UnescapedJID.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#UnescapedJID/bareJID"><linktext>org.igniterealtime.xiff.core.UnescapedJID.bareJID</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:loggedIn:get"><apiName>loggedIn</apiName><shortdesc>
		 Determines whether the user is connected and logged into the server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Determines whether the user is connected and logged into the server.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/active"><linktext>org.igniterealtime.xiff.core.XMPPConnection.active</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:openConnections:get"><apiName>openConnections</apiName><shortdesc>
		 Reference to all active connections.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Reference to all active connections.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:outgoingBytes:get"><apiName>outgoingBytes</apiName><shortdesc>
		 Get the total count of the bytes sent in the current session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Get the total count of the bytes sent in the current session.
		 Mainly useful for tracking network traffic.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:password:get"><apiName>password</apiName><shortdesc>
		 The password to use when logging in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The password to use when logging in.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:port:get"><apiName>port</apiName><shortdesc>
		 The port to use when connecting.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/><apiDefaultValue>5222
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The port to use when connecting.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:queuePresences:get"><apiName>queuePresences</apiName><shortdesc>
		 Should the connection queue presence events for a small interval so that it can
		 send multiple in a batch?
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true To maintain original behavior -- has to be explicitly set to false to disable.
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Should the connection queue presence events for a small interval so that it can
		 send multiple in a batch?
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:registrationSupported:get"><apiName>registrationSupported</apiName><shortdesc>
		 Does the connection support registration.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Does the connection support registration.
		 Find out after initial features have arrived.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#InBandRegistrator"><linktext>org.igniterealtime.xiff.core.InBandRegistrator</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:resource:get"><apiName>resource</apiName><shortdesc>
		 The resource to use when logging in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The resource to use when logging in. A resource is required (defaults to "XIFF") and
		 allows a user to login using the same account simultaneously (most likely from multiple machines).
		 Typical examples of the resource include "Home" or "Office" to indicate the user's current location.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:server:get"><apiName>server</apiName><shortdesc>
		 The XMPP server to use for connection.</shortdesc><prolog><asCustoms><exampleText>talk.google.com
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The XMPP server to use for connection.
		 Server to connect, could be different of the login/user domain.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:useAnonymousLogin:get"><apiName>useAnonymousLogin</apiName><shortdesc>
		 Whether to use anonymous login or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Whether to use anonymous login or not.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPConnection:username:get"><apiName>username</apiName><shortdesc>
		 The username to use for connection.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The username to use for connection. If this property is null when <codeph>connect()</codeph> is called,
		 the class will fetch registration field data rather than attempt to login.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:XMPPRTMPConnection"><apiName>XMPPRTMPConnection</apiName><shortdesc>
	 A child of XMPPConnection, this class makes use of the
	 Flash RTMP connection instead of the Socket.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.core:XMPPConnection</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A child of <codeph>XMPPConnection</codeph>, this class makes use of the
	 Flash RTMP connection instead of the <codeph>Socket</codeph>.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection"><linktext>org.igniterealtime.xiff.core.XMPPConnection</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.core:XMPPRTMPConnection:XMPPRTMPConnection"><apiName>XMPPRTMPConnection</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>rtmp:/xmpp</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:connect"><apiName>connect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:protected:createConnection"><apiName>createConnection</apiName><shortdesc>
		 Called from XMPPConnection() constructor.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Called from <codeph>XMPPConnection()</codeph> constructor.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:disconnect"><apiName>disconnect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:protected:restartStream"><apiName>restartStream</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:protected:sendDataToServer"><apiName>sendDataToServer</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc>
		 No need for keepalive
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 No need for keepalive
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:xmppRecieve"><apiName>xmppRecieve</apiName><shortdesc>
		 Is the name of this method locked in the server side?
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rawXML</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Is the name of this method locked in the server side?
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:Browser"><apiName>Browser</apiName><shortdesc>
	 XEP-0030: Service Discovery
	 	 This class provides a means of querying for available services on an XMPP
	 server using the Disco protocol extension.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IBrowser</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0030: Service Discovery
	 	 <p>This class provides a means of querying for available services on an XMPP
	 server using the Disco protocol extension. For more information on Disco,
	 take a look at
	 <xref href="http://xmpp.org/extensions/xep-0030.html">XEP-0030</xref> and
	 <xref href="http://xmpp.org/extensions/xep-0011.html">XEP-0011 (obsolete)</xref> for the
	 protocol enhancement specifications.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link><link href="http://xmpp.org/extensions/xep-0011.html"><linktext>http://xmpp.org/extensions/xep-0011.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.core:Browser:Browser"><apiName>Browser</apiName><shortdesc>
		 Creates a new Browser object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the <codeph>XMPPConnection</codeph> instance to use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new Browser object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:Browser:browseItem"><apiName>browseItem</apiName><shortdesc>
		 Use the OBSOLETE BrowseExtension (jabber:iq:browse namespace)
		 to query a resource for supported features and children.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The full JabberID to query for service items
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>The callback function to call when results are retrieved
		 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The callback function to call when errors are received
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Use the <b>OBSOLETE</b> <codeph>BrowseExtension</codeph> (jabber:iq:browse namespace)
		 to query a resource for supported features and children.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0011.html"><linktext>http://xmpp.org/extensions/xep-0011.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getNodeInfo"><apiName>getNodeInfo</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#info-nodes"><linktext>http://xmpp.org/extensions/xep-0030.html#info-nodes</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getNodeItems"><apiName>getNodeItems</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#items-nodes"><linktext>http://xmpp.org/extensions/xep-0030.html#items-nodes</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getServiceInfo"><apiName>getServiceInfo</apiName><shortdesc>
		 Retrieves a list of available service information from the server specified.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The server to query for available service information
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>The callback function to call when results are retrieved
		 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The callback function to call when errors are received
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a list of available service information from the server specified. On successful query,
		 the callback specified will be called and passed a single parameter containing
		 a reference to an <codeph>IQ</codeph> containing the query results.
		 		 <pre>
		 <iq id="iq_4" to="192.168.1.37" type="get">
		  <query xmlns="http://jabber.org/protocol/disco#info"/>
		 </iq>
		 </pre>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#info"><linktext>http://xmpp.org/extensions/xep-0030.html#info</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getServiceItems"><apiName>getServiceItems</apiName><shortdesc>
		 Retrieves a list of available services items from the server specified.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The server to query for service items
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>The callback function to call when results are retrieved
		 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The callback function to call when errors are received
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a list of available services items from the server specified. Items include things such
		 as available transports and user directories. On successful query, the callback specified in the will be
		 called and passed a single parameter containing the query results.
		 		 <pre>
		 <iq id="iq_3" to="192.168.1.37" type="get">
		 <query xmlns="http://jabber.org/protocol/disco#items"/>
		 </iq>
		 </pre>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#items"><linktext>http://xmpp.org/extensions/xep-0030.html#items</linktext></link></related-links></apiOperation><apiValue id="org.igniterealtime.xiff.core:Browser:connection:get"><apiName>connection</apiName><shortdesc>
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef><apiDesc>
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:XMPPBOSHConnection"><apiName>XMPPBOSHConnection</apiName><shortdesc>
	 XEP-0124: Bidirectional-streams Over Synchronous HTTP (BOSH) and
	 XEP-0206: XMPP Over BOSH.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.core:XMPPConnection</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0124: Bidirectional-streams Over Synchronous HTTP (BOSH) and
	 XEP-0206: XMPP Over BOSH.
	 	 <p>Using BOSH does not prevent your application from respecting
	 Adobe Flash Player policy file issues. HTTP requests to your
	 server must be authorized with a <codeph>crossdomain.xml</codeph> file
	 in your webserver root.</p>
	 	 <p>Warning: if you are using BOSH through HTTPS, your crossdomain
	 policy file must also be served through HTTPS. Your application
	 (if online) must also be served through HTTPS else you will
	 have a crossdomain policy issue. This issue can be solved by
	 using the secure property of the allow-access-from node in the
	 crossdomain.xml file. But this is not recommended by Adobe.</p>
	 	 <p>If your crossdomain policy file cannot
	 be served by your server, this issue could be solved with an
	 Apache proxy redirect so that any automatic Flash/Flex calls
	 to an URL like <codeph>http://xmppserver:5280/crossdomain.xml</codeph> will be
	 redirected as an URL of your choice such as
	 <codeph>http://webserver/crossdomain.xml</codeph>.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0124.html"><linktext>http://xmpp.org/extensions/xep-0124.html</linktext></link><link href="http://xmpp.org/extensions/xep-0206.html"><linktext>http://xmpp.org/extensions/xep-0206.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.core:XMPPBOSHConnection:XMPPBOSHConnection"><apiName>XMPPBOSHConnection</apiName><shortdesc>
		 TLS compression (as defined in RFC 3920) and Stream Compression (as defined
		 in Stream Compression [XEP-0138]) are NOT RECOMMENDED in BOSH since compression
		 SHOULD be negotiated at the HTTP layer using the 'accept' attribute
		 of the BOSH session creation response.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>secure</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Determines which port is used
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 TLS compression (as defined in RFC 3920) and Stream Compression (as defined
		 in Stream Compression [XEP-0138]) are NOT RECOMMENDED in BOSH since compression
		 SHOULD be negotiated at the HTTP layer using the 'accept' attribute
		 of the BOSH session creation response.
		 		 <p>TLS compression and Stream Compression SHOULD NOT be used at
		 the same time as HTTP content encoding.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:connect"><apiName>connect</apiName><shortdesc>
		 The first request from the client to the connection manager requests a new session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Not used
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The first request from the client to the connection manager requests a new session.
		 		 <p>The <b>body</b> element of the first request SHOULD possess
		 the following attributes (they SHOULD NOT be included in any other requests
		 except as specified under Adding Streams To A Session):</p>
		 		 <ul>
		 <li>'to' -- This attribute specifies the target domain of the first stream.</li>
		 <li>'xml:lang' -- This attribute (as defined in Section 2.12 of XML 1.0 [17])
		   specifies the default language of any human-readable XML character data
		   sent or received during the session.</li>
		 <li>'ver' -- This attribute specifies the highest version of the BOSH protocol
		   that the client supports. The numbering scheme is "major.minor" (where
		   the minor number MAY be incremented higher than a single digit, so it
		   MUST be treated as a separate integer). Note: The 'ver' attribute should
		   not be confused with the version of any protocol being transported.</li>
		 <li>'wait' -- This attribute specifies the longest time (in seconds) that
		   the connection manager is allowed to wait before responding to any request
		   during the session. This enables the client to limit the delay before it
		   discovers any network failure, and to prevent its HTTP/TCP connection
		   from expiring due to inactivity.</li>
		 <li>'hold' -- This attribute specifies the maximum number of requests the
		   connection manager is allowed to keep waiting at any one time during the
		   session. If the client is not able to use HTTP Pipelining then this SHOULD
		   be set to "1".</li>
		 </ul>
		 		 <p>Note: Clients that only support Polling Sessions MAY prevent the connection
		 manager from waiting by setting 'wait' or 'hold' to "0". However, polling is
		 NOT RECOMMENDED since the associated increase in bandwidth consumption and
		 the decrease in responsiveness are both typically one or two orders of
		 magnitude!</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0206.html#initiate"><linktext>http://xmpp.org/extensions/xep-0206.html#initiate</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:disconnect"><apiName>disconnect</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0124.html#terminate"><linktext>http://xmpp.org/extensions/xep-0124.html#terminate</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:handleNodeType"><apiName>handleNodeType</apiName><shortdesc>
		 TODO: Is this somthing that could be safely removed?
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/></apiParam></apiOperationDef><apiDesc>
		 TODO: Is this somthing that could be safely removed?
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:pauseSession"><apiName>pauseSession</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if pause request is sent
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>seconds</apiItemName><apiType value="uint"/></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:processConnectionResponse"><apiName>processConnectionResponse</apiName><shortdesc>
		 Session Creation Response
		 		 After receiving a new session request, the connection manager MUST generate
		 an opaque, unpredictable session identifier (or SID).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>responseBody</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Session Creation Response
		 		 <p>After receiving a new session request, the connection manager MUST generate
		 an opaque, unpredictable session identifier (or SID). The SID MUST be unique
		 within the context of the connection manager application. The <b>body</b>
		 element of the connection manager's response to the client's session creation
		 request MUST possess the following attributes (they SHOULD NOT be included in
		 any other responses):</p>
		 		 <ul>
		 <li>'sid' -- This attribute specifies the SID</li>
		 <li>'wait' -- This is the longest time (in seconds) that the connection manager
		   will wait before responding to any request during the session. The time MUST be
		   less than or equal to the value specified in the session request.</li>
		 </ul>
		 		 <p>The <b>body</b> element SHOULD also include the following attributes
		 (they SHOULD NOT be included in any other responses):</p>
		 		 <ul>
		 <li>'ver' -- This attribute specifies the highest version of the BOSH protocol
		   that the connection manager supports, or the version specified by the client in
		   its request, whichever is lower.</li>
		 <li>'polling' -- This attribute specifies the shortest allowable polling
		   interval (in seconds). This enables the client to not send empty request
		   elements more often than desired (see Polling Sessions and Overactivity).</li>
		 <li>'inactivity' -- This attribute specifies the longest allowable inactivity
		   period (in seconds). This enables the client to ensure that the periods with
		   no requests pending are never too long (see Polling Sessions and Inactivity).</li>
		 <li>'requests' -- This attribute enables the connection manager to limit the
		   number of simultaneous requests the client makes (see Overactivity and
		   Polling Sessions). The RECOMMENDED values are either "2" or one more than
		   the value of the 'hold' attribute specified in the session request.</li>
		 <li>'hold' -- This attribute informs the client about the maximum number
		   of requests the connection manager will keep waiting at any one time during
		   the session. This value MUST NOT be greater than the value specified by the
		   client in the session request.</li>
		 <li>'to' -- This attribute communicates the identity of the backend server
		   to which the client is attempting to connect.</li>
		 </ul>
		 		 <p>The connection manager MAY include an 'accept' attribute in the session
		 creation response element, to specify a space-separated list of the content
		 encodings it can decompress. After receiving a session creation response
		 with an 'accept' attribute, clients MAY include an HTTP Content-Encoding
		 header in subsequent requests (indicating one of the encodings specified
		 in the 'accept' attribute) and compress the bodies of the requests
		 accordingly.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0124.html#session-response"><linktext>http://xmpp.org/extensions/xep-0124.html#session-response</linktext></link><link href="http://xmpp.org/extensions/xep-0206.html#create"><linktext>http://xmpp.org/extensions/xep-0206.html#create</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:restartStream"><apiName>restartStream</apiName><shortdesc>
		 Upon receiving the success element, the client
		 MUST then ask the connection manager to restart the stream by
		 sending a "restart request".</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Upon receiving the <b>success</b> element, the client
		 MUST then ask the connection manager to restart the stream by
		 sending a "restart request".
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:sendDataToServer"><apiName>sendDataToServer</apiName><shortdesc>
		 Connection to the server in BOSH is a simple URLRequest.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>ByteArray that might be compressed if enabled
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Connection to the server in BOSH is a simple URLRequest.
		 		 <p>All information is encoded in the body of standard HTTP POST
		 requests and responses. Each HTTP body contains a single
		 <b>body</b> wrapper which encapsulates the XML elements
		 being transferred.</p>
		 		 <p>BOSH requires all incoming and outgoing data to be wrapped in
		 <codeph>body</codeph> element. That should be taken care of before possible
		 Stream Compression.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0124.html#overview"><linktext>http://xmpp.org/extensions/xep-0124.html#overview</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc>
		 Does nothing, BOSH uses polling instead.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Does nothing, BOSH uses polling instead.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:sendXML"><apiName>sendXML</apiName><shortdesc>
		 Pass through to sendRequests method for having the
		 body wrapper around the given data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Pass through to <codeph>sendRequests</codeph> method for having the
		 <codeph>body</codeph> wrapper around the given data.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:BOSH_NS"><apiName>BOSH_NS</apiName><shortdesc>
		 Namespace used by BOSH body wrapper
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/httpbind</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Namespace used by BOSH body wrapper
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:BOSH_VERSION"><apiName>BOSH_VERSION</apiName><shortdesc>
		 Current version of the BOSH defined in the XEP and the
		 version which this class implements.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1.6</apiData><apiType value="String"/><apiDefaultValue>1.6
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Current version of the BOSH defined in the XEP and the
		 version which this class implements.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc>
		 BOSH body wrapper element name
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>body</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 BOSH body wrapper element name
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:HTTPS_PORT"><apiName>HTTPS_PORT</apiName><shortdesc>
		 The default secure port as per XMPP specification.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7443</apiData><apiType value="uint"/><apiDefaultValue>7443
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The default secure port as per XMPP specification.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:HTTP_PORT"><apiName>HTTP_PORT</apiName><shortdesc>
		 The default port as per XMPP specification.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7070</apiData><apiType value="uint"/><apiDefaultValue>7070
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The default port as per XMPP specification.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:boshPath:get"><apiName>boshPath</apiName><shortdesc>
		 Local part of the address in which the server responds.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>http-bind/
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Local part of the address in which the server responds.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:hold:get"><apiName>hold</apiName><shortdesc>
		 This attribute specifies the maximum number of requests the connection
		 manager is allowed to keep waiting at any one time during the session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 This attribute specifies the maximum number of requests the connection
		 manager is allowed to keep waiting at any one time during the session.
		 If the client is not able to use HTTP Pipelining then this SHOULD be set to "1".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:httpServer:get"><apiName>httpServer</apiName><shortdesc>
		 Server URI
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 Server URI
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:maxConcurrentRequests:get"><apiName>maxConcurrentRequests</apiName><shortdesc>
		 Defaults to 2.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Defaults to 2. Value retrieved from the server once stream is initiating.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:secure:get"><apiName>secure</apiName><shortdesc>
		 HTTP bind requests type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 HTTP bind requests type. If secure, the requests will be sent
		 through HTTPS. If not, through HTTP.
		 		 <p>Please note that the <codeph>port</codeph> needs to be set separately.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPBOSHConnection:wait:get"><apiName>wait</apiName><shortdesc>
		 This attribute specifies the longest time (in seconds) that the connection
		 manager is allowed to wait before responding to any request during the session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 This attribute specifies the longest time (in seconds) that the connection
		 manager is allowed to wait before responding to any request during the session.
		 This enables the client to limit the delay before it discovers any network
		 failure, and to prevent its HTTP/TCP connection from expiring due to inactivity.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:UnescapedJID"><apiName>UnescapedJID</apiName><shortdesc>
	 This class provides access to a JID (Jabber ID) in unescaped form.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.core:AbstractJID</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides access to a JID (Jabber ID) in unescaped form.
	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-3"><linktext>http://tools.ietf.org/html/rfc3920#section-3</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.core:UnescapedJID:UnescapedJID"><apiName>UnescapedJID</apiName><shortdesc>
		 Creates a new UnescapedJID object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>inJID</apiItemName><apiType value="String"/><apiDesc>The JID in String form.
		 </apiDesc></apiParam><apiParam><apiItemName>validate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Will validate the JID string if true. Invalid
		 JIDs will throw an error.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new UnescapedJID object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:UnescapedJID:equals"><apiName>equals</apiName><shortdesc>
		 Determines if two unescaped JIDs are equivalent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if the JIDs are equivalent.
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>testJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID with which to test equivalency.
		 		 </apiDesc></apiParam><apiParam><apiItemName>shouldTestBareJID</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
		 Determines if two unescaped JIDs are equivalent.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:UnescapedJID:escaped:get"><apiName>escaped</apiName><shortdesc>
		 The unescaped JID in escaped form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The unescaped JID in escaped form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:EscapedJID"><apiName>EscapedJID</apiName><shortdesc>
	 This class provides access to a JID (Jabber ID) in escaped form.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.core:AbstractJID</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides access to a JID (Jabber ID) in escaped form.
	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0106.html"><linktext>http://xmpp.org/extensions/xep-0106.html</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-3"><linktext>http://tools.ietf.org/html/rfc3920#section-3</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.core:EscapedJID:EscapedJID"><apiName>EscapedJID</apiName><shortdesc>
		 Creates a new EscapedJID object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>inJID</apiItemName><apiType value="String"/><apiDesc>The JID in String form.
		 </apiDesc></apiParam><apiParam><apiItemName>validate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Will validate the JID string if true. Invalid
		 JIDs will throw an error.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new EscapedJID object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:EscapedJID:equals"><apiName>equals</apiName><shortdesc>
		 Determines if two escaped JIDs are equivalent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if the JIDs are equivalent.
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>testJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The JID with which to test equivalency.
		 		 </apiDesc></apiParam><apiParam><apiItemName>shouldTestBareJID</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
		 Determines if two escaped JIDs are equivalent.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:EscapedJID:unescaped:get"><apiName>unescaped</apiName><shortdesc>
		 The escaped JID in unescaped form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The escaped JID in unescaped form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:XMPPTLSConnection"><apiName>XMPPTLSConnection</apiName><shortdesc>
	 This class is used to connect to and manage data coming from an XMPP server that supports TLS.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.core:XMPPConnection</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class is used to connect to and manage data coming from an XMPP server that supports TLS.
	 Use one instance of this class per connection.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-5"><linktext>http://tools.ietf.org/html/rfc3920#section-5</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.core:XMPPTLSConnection:XMPPTLSConnection"><apiName>XMPPTLSConnection</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor.
		 <p>The connection socket created in XMPPConnection is used until the server responds as "proceed".</p>
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:configureTLSSocket"><apiName>configureTLSSocket</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="com.hurlant.crypto.tls.TLSSocket.xml"><linktext>com.hurlant.crypto.tls.TLSSocket</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:connect"><apiName>connect</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:disconnect"><apiName>disconnect</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:handleNodeType"><apiName>handleNodeType</apiName><shortdesc>
		 
		 Calls a appropriate parser base on the nodeName.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Calls a appropriate parser base on the nodeName.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:handleStreamTLS"><apiName>handleStreamTLS</apiName><shortdesc>
		 In case the user or the server requires the use of TLS, this method
		 will initiate the handshake.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/></apiParam></apiOperationDef><apiDesc>
		 In case the user or the server requires the use of TLS, this method
		 will initiate the handshake.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:removeTLSSocketEventListeners"><apiName>removeTLSSocketEventListeners</apiName><shortdesc>
		 Remove those listeners that the configureTLSSocket method added.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove those listeners that the <codeph>configureTLSSocket</codeph> method added.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:XMPPTLSConnection:config:get"><apiName>config</apiName><shortdesc>
		 TLS configuration.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="com.hurlant.crypto.tls:TLSConfig"/></apiValueDef><apiDesc>
		 TLS configuration.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:XMPPTLSConnection:tls:get"><apiName>tls</apiName><shortdesc>
		 Specifies whether to enable TLS.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>false
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Specifies whether to enable TLS.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:IListener"><apiName>IListener</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.core:IListener:org.igniterealtime.xiff.core:IListener:connection:get"><apiName>connection</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:InBandRegistrator"><apiName>InBandRegistrator</apiName><shortdesc>
	 Manager for XEP-0077: In-Band Registration
	 	 Once the connection has been established and the server has provided feature
	 information, check XMPPConnection.registrationSupported before trying to use
	 the registration.
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Manager for XEP-0077: In-Band Registration
	 	 <p>Once the connection has been established and the server has provided feature
	 information, check <codeph>XMPPConnection.registrationSupported</codeph> before trying to use
	 the registration.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0077.html"><linktext>http://xmpp.org/extensions/xep-0077.html</linktext></link></related-links><adobeApiEvent id="org.igniterealtime.xiff.core:InBandRegistrator_org.igniterealtime.xiff.events.RegistrationFieldsEvent.REG_FIELDS_registrationFields"><apiName>registrationFields</apiName><shortdesc>
	 Dispatched on when new user account registration is successful.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RegistrationFieldsEvent.REG_FIELDS</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RegistrationFieldsEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched on when new user account registration is successful.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:InBandRegistrator_org.igniterealtime.xiff.events.RegistrationSuccessEvent.REGISTRATION_SUCCESS_registrationSuccess"><apiName>registrationSuccess</apiName><shortdesc>
	 Dispatched on when new user account registration is successful.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RegistrationSuccessEvent.REGISTRATION_SUCCESS</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RegistrationSuccessEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched on when new user account registration is successful.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.core:InBandRegistrator_org.igniterealtime.xiff.events.ChangePasswordSuccessEvent.PASSWORD_SUCCESS_changePasswordSuccess"><apiName>changePasswordSuccess</apiName><shortdesc>
	 Dispatched when a password change is successful.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.ChangePasswordSuccessEvent.PASSWORD_SUCCESS</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.ChangePasswordSuccessEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when a password change is successful.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.core:InBandRegistrator:InBandRegistrator"><apiName>InBandRegistrator</apiName><shortdesc>
		 Manage client registration and password changing.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiData>null</apiData><apiDesc>A reference to the <codeph>XMPPConnection</codeph> instance to use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Manage client registration and password changing.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:InBandRegistrator:changePassword"><apiName>changePassword</apiName><shortdesc>
		 Changes the user's account password on the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newPassword</apiItemName><apiType value="String"/><apiDesc>The new password
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Changes the user's account password on the server. If the password change is successful,
		 the class will broadcast a <codeph>ChangePasswordSuccessEvent.PASSWORD_SUCCESS</codeph> event.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:InBandRegistrator:getRegistrationFields"><apiName>getRegistrationFields</apiName><shortdesc>
		 Issues a request for the information that must be submitted for registration with the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Issues a request for the information that must be submitted for registration with the server.
		 When the data returns, a <codeph>RegistrationFieldsEvent.REG_FIELDS</codeph> event is dispatched
		 containing the requested data.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:InBandRegistrator:sendRegistrationFields"><apiName>sendRegistrationFields</apiName><shortdesc>
		 Registers a new account with the server, sending the registration data as specified in the fieldMap</shortdesc><prolog><asCustoms><paramter.>		 </paramter.></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldMap</apiItemName><apiType value="Object"/><apiDesc>An object map containing the data to use for registration. The map should be composed of
		 			attribute:value pairs for each registration data item.
		 </apiDesc></apiParam><apiParam><apiItemName>key</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>This element is obsolete, but is included here for historical completeness.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Registers a new account with the server, sending the registration data as specified in the fieldMap</apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:InBandRegistrator:connection:get"><apiName>connection</apiName><shortdesc>
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef><apiDesc>
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:AbstractJID"><apiName>AbstractJID</apiName><shortdesc>
	 This is a base class for the JID (Jabber Identifier) classes.</shortdesc><prolog><asMetadata/><asCustoms><exampleText>room@service/nick
	 </exampleText></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This is a base class for the JID (Jabber Identifier) classes.
	 	 <p>This class should not be instantiated directly, but should be subclassed
	 instead.</p>
	 	 <p>It provides functionality to determine if a JID is valid, as well as extract the
	 node, domain and resource from the JID.</p>
	 	 <p>The structure of JID is defined in RFC3920:</p>
	 <ul>
	 <li><codeph>jid = [ node "@" ] domain [ "/" resource ]</codeph></li>
	 <li><codeph>domain = fqdn / address-literal</codeph></li>
	 <li><codeph>fqdn = (sub-domain 1"." sub-domain))</codeph></li>
	 <li><codeph>sub-domain = (internationalized domain label)</codeph></li>
	 <li><codeph>address-literal = IPv4address / IPv6address</codeph></li>
	 </ul>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-3"><linktext>http://tools.ietf.org/html/rfc3920#section-3</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.core:AbstractJID:AbstractJID"><apiName>AbstractJID</apiName><shortdesc>
		 Creates a new AbstractJID object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>inJID</apiItemName><apiType value="String"/><apiDesc>The JID as a String.
		 </apiDesc></apiParam><apiParam><apiItemName>validate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>True if the JID should be validated.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new AbstractJID object. Used via EscapedJID or UnescapedJID.
		 		 <p>Each allowable portion of a JID (node identifier, domain identifier, and resource identifier)
		 MUST NOT be more than 1023 bytes in length, resulting in a maximum total size
		 (including the @ and / separators) of 3071 bytes.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.core:AbstractJID:escapedNode"><apiName>escapedNode</apiName><shortdesc>
		 Provides functionality to convert a JID to an escaped format.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>The escaped string.
		 		 TODO: simplify with native methods
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>n</apiItemName><apiType value="String"/><apiDesc>The string to escape.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Provides functionality to convert a JID to an escaped format.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/package.html#encodeURIComponent%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/package.html#encodeURIComponent%28%29</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:AbstractJID:toString"><apiName>toString</apiName><shortdesc>
		 Converts JID represented by this class to a String.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The JID as a String.
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Converts JID represented by this class to a String.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:AbstractJID:unescapedNode"><apiName>unescapedNode</apiName><shortdesc>
		 Provides functionality to return an escaped JID into a normal String.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>The unescaped string.
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>n</apiItemName><apiType value="String"/><apiDesc>The string to unescape.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Provides functionality to return an escaped JID into a normal String.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:AbstractJID:protected:_domain"><apiName>_domain</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:AbstractJID:protected:_node"><apiName>_node</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:AbstractJID:protected:_resource"><apiName>_resource</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:AbstractJID:protected:jidNodeValidator"><apiName>jidNodeValidator</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiStatic/><apiData>unknown</apiData><apiType value="RegExp"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:AbstractJID:bareJID:get"><apiName>bareJID</apiName><shortdesc>
		 The JID without the resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The JID without the resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:AbstractJID:domain:get"><apiName>domain</apiName><shortdesc>
		 The domain portion of the JID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The domain portion of the JID.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:AbstractJID:node:get"><apiName>node</apiName><shortdesc>
		 The node portion of the JID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The node portion of the JID.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:AbstractJID:resource:get"><apiName>resource</apiName><shortdesc>
		 The resource portion of the JID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The resource portion of the JID.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:IXMPPConnection"><apiName>IXMPPConnection</apiName><shortdesc>
	 Interface for the XMPP Connection classes
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Interface for the XMPP Connection classes
	 </apiDesc></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:connect"><apiName>connect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:disableExtensions"><apiName>disableExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:disconnect"><apiName>disconnect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:enableExtensions"><apiName>enableExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:send"><apiName>send</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IXMPPStanza</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:active:get"><apiName>active</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:compress:get"><apiName>compress</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:domain:get"><apiName>domain</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:incomingBytes:get"><apiName>incomingBytes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:jid:get"><apiName>jid</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:loggedIn:get"><apiName>loggedIn</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:outgoingBytes:get"><apiName>outgoingBytes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:password:get"><apiName>password</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:port:get"><apiName>port</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:queuePresences:get"><apiName>queuePresences</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:resource:get"><apiName>resource</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:server:get"><apiName>server</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:useAnonymousLogin:get"><apiName>useAnonymousLogin</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:username:get"><apiName>username</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:IBrowser"><apiName>IBrowser</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:browseItem"><apiName>browseItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getNodeInfo"><apiName>getNodeInfo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getNodeItems"><apiName>getNodeItems</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getServiceInfo"><apiName>getServiceInfo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getServiceItems"><apiName>getServiceItems</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:connection:get"><apiName>connection</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.auth"><apiName>org.igniterealtime.xiff.data.auth</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.auth:AuthExtension"><apiName>AuthExtension</apiName><shortdesc>
         XEP-0078: Non-SASL Authentication
                  OBSOLETE
         	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
         XEP-0078: Non-SASL Authentication
                  <p><b>OBSOLETE</b></p>
         	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0078.html"><linktext>http://xmpp.org/extensions/xep-0078.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.auth:AuthExtension:AuthExtension"><apiName>AuthExtension</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:computeDigest"><apiName>computeDigest</apiName><shortdesc>
		 Computes the SHA1 digest of the password and session ID for use when
		 authenticating with the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>sessionID</apiItemName><apiType value="String"/><apiDesc>The session ID provided by the server
		 </apiDesc></apiParam><apiParam><apiItemName>password</apiItemName><apiType value="String"/><apiDesc>The user's password
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Computes the SHA1 digest of the password and session ID for use when
		 authenticating with the server.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The element name
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The namespace
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the AuthExtension is "jabber:iq:auth".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:isDigest"><apiName>isDigest</apiName><shortdesc>
		 Determines whether this is a digest (SHA1) authentication.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>It is a digest (true); it is not a digest (false)
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Determines whether this is a digest (SHA1) authentication.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:isPassword"><apiName>isPassword</apiName><shortdesc>
		 Determines whether this is a plain-text password authentication.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>It is plain-text password (true); it is not plain-text
		 password (false)
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Determines whether this is a plain-text password authentication.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.auth:AuthExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.auth:AuthExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:auth</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.auth:AuthExtension:digest:get"><apiName>digest</apiName><shortdesc>
		 The SHA1 digest to use for authentication.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The SHA1 digest to use for authentication.
		 While assigned, password is removed.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.auth:AuthExtension:password:get"><apiName>password</apiName><shortdesc>
		 The password to use for authentication.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The password to use for authentication.
		 While assigned, digest is removed.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.auth:AuthExtension:resource:get"><apiName>resource</apiName><shortdesc>
		 The resource to use for authentication.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The resource to use for authentication.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/resource"><linktext>org.igniterealtime.xiff.core.XMPPConnection.resource</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.auth:AuthExtension:username:get"><apiName>username</apiName><shortdesc>
		 The username to use for authentication.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The username to use for authentication.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.bind"><apiName>org.igniterealtime.xiff.data.bind</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.bind:BindExtension"><apiName>BindExtension</apiName><shortdesc>
	 Resource Binding as defined in RFC 6120: Section 7.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Resource Binding as defined in RFC 6120: Section 7.
	 	 <p>After a client authenticates with a server, it MUST bind a specific
	 resource to the stream so that the server can properly address the
	 client.</p>
	 <p>That is, there MUST be an XMPP resource associated with the
	 bare JID (<b>localpart@domainpart</b>) of the client, so that the address
	 for use over that stream is a full JID of the form
	 <b>localpart@domainpart/resource</b> (including the resourcepart).  This
	 ensures that the server can deliver XML stanzas to and receive XML
	 stanzas from the client in relation to entities other than the server
	 itself or the client's account.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc6120#section-7"><linktext>http://tools.ietf.org/html/rfc6120#section-7</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.bind:BindExtension:BindExtension"><apiName>BindExtension</apiName><shortdesc>
		 Support for resource binding is REQUIRED in XMPP client and server
		 implementations.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Support for resource binding is REQUIRED in XMPP client and server
		 implementations.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.bind:BindExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.bind:BindExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.bind:BindExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bind</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.bind:BindExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:ietf:params:xml:ns:xmpp-bind</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.bind:BindExtension:jid:get"><apiName>jid</apiName><shortdesc>
		 JID that the server has accepted.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 JID that the server has accepted. Read-only.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.bind:BindExtension:resource:get"><apiName>resource</apiName><shortdesc>
		 Resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Resource.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 <p>Instead of asking the server to generate a resourcepart on its behalf,
		 a client MAY attempt to submit a resourcepart that it has generated or
		 that the controlling user has provided.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc6120#section-7.7"><linktext>http://tools.ietf.org/html/rfc6120#section-7.7</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.browse"><apiName>org.igniterealtime.xiff.data.browse</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.browse:BrowseExtension"><apiName>BrowseExtension</apiName><shortdesc>
	 XEP-0011: Jabber Browsing
	 	 Implements jabber:iq:browse namespace.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.browse:BrowseItem</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0011: Jabber Browsing
	 	 <p>Implements jabber:iq:browse namespace.  Use this extension to request the items
	 of an agent or service such as the rooms of a conference server or the members of
	 a room.</p>
	 	 <p><b>OBSOLETE</b></p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0011.html"><linktext>http://xmpp.org/extensions/xep-0011.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.browse:BrowseExtension:BrowseExtension"><apiName>BrowseExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 If you are generating a browse response to a browse request, then
		 fill out the items list with this method.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the item added
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data.browse:BrowseItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.browse:BrowseItem</apiOperationClassifier><apiDesc>BrowseItem which contains the info related to the browsed resource
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 If you are generating a browse response to a browse request, then
		 fill out the items list with this method.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.browse.xml#BrowseItem"><linktext>org.igniterealtime.xiff.data.browse.BrowseItem</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The namespace
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the BrowseExtension is "jabber:iq:browse".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.browse:BrowseExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:browse</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseExtension:items:get"><apiName>items</apiName><shortdesc>
		 An array of BrowseItems containing information about the browsed resource
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 An array of BrowseItems containing information about the browsed resource
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.browse.xml#BrowseItem"><linktext>org.igniterealtime.xiff.data.browse.BrowseItem</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.browse:BrowseItem"><apiName>BrowseItem</apiName><shortdesc>
	 XEP-0011: Jabber Browsing
	 	 Class that representes a child resource of a browsed resource.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0011: Jabber Browsing
	 	 Class that representes a child resource of a browsed resource.
	 	 <p><b>OBSOLETE</b></p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0011.html"><linktext>http://xmpp.org/extensions/xep-0011.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.browse:BrowseItem:BrowseItem"><apiName>BrowseItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseItem:addNamespace"><apiName>addNamespace</apiName><shortdesc>
		 Add new features that are supported if you are responding to a
		 browse request
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="XML"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Add new features that are supported if you are responding to a
		 browse request
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.browse:BrowseItem:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>item</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseItem:category:get"><apiName>category</apiName><shortdesc>
		 One of the categories from the list above, or a
		 non-standard category prefixed with the string "x-".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 One of the categories from the list above, or a
		 non-standard category prefixed with the string "x-".
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0011.html#sect-id2594870"><linktext>http://xmpp.org/extensions/xep-0011.html#sect-id2594870</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseItem:jid:get"><apiName>jid</apiName><shortdesc>
		 The full JabberID of the entity described
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The full JabberID of the entity described
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseItem:name:get"><apiName>name</apiName><shortdesc>
		 A friendly name that may be used in a user interface
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 A friendly name that may be used in a user interface
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseItem:namespaces:get"><apiName>namespaces</apiName><shortdesc>
		 On top of the browsing framework, a simple form of "feature
		 advertisement" can be built.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 On top of the browsing framework, a simple form of "feature
		 advertisement" can be built. This enables any entity to advertise
		 whichfeatures it supports, based on the namespaces associated with
		 those features. The <b>ns</b> element is allowed as a subelement of the
		 item. This element contains a single namespace that the entity
		 		 supports, and multiple <b>ns</b> elements can be included in any item.
		 <p>For a connected client this might be &gt;ns&lt;jabber:iq:oob&lt;/ns&gt;, or for a
		 service &gt;ns&lt;jabber:iq:search&lt;/ns&gt;. This list of namespaces should be
		 used to present available options for a user or to automatically
		 locate functionality for an application.</p>
		 		 <p>The children of a browse result may proactively contain a few
		 <b>ns</b> elements (such as the result of the service request to the home
		 server), which advertises the features that the particular service
		 supports. This list may not be complete (it is only for first-pass
		 filtering by simpler clients), and the JID should be browsed if a
		 complete list is required.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseItem:type:get"><apiName>type</apiName><shortdesc>
		 One of the official types from the specified category,
		 or a non-standard type prefixed with the string "x-".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 One of the official types from the specified category,
		 or a non-standard type prefixed with the string "x-".
		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0011.html#sect-id2594870"><linktext>http://xmpp.org/extensions/xep-0011.html#sect-id2594870</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.browse:BrowseItem:version:get"><apiName>version</apiName><shortdesc>
		 A string containing the version of the node, equivalent
		 to the response provided to a query in the 'jabber:iq:version'
		 namespace.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 A string containing the version of the node, equivalent
		 to the response provided to a query in the 'jabber:iq:version'
		 namespace. This is useful for servers, especially for lists of
		 services (see the 'service/serverlist' category/type above).
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.disco"><apiName>org.igniterealtime.xiff.data.disco</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoItem"><apiName>DiscoItem</apiName><shortdesc>
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoItem:DiscoItem"><apiName>DiscoItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.disco:DiscoItem:equals"><apiName>equals</apiName><shortdesc>
		 Does all three properties match the in the given DiscoItem to this one?
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoItem</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does all three properties match the in the given DiscoItem to this one?
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.disco:DiscoItem:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>item</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoItem:jid:get"><apiName>jid</apiName><shortdesc>
		 Attribute specifying the JID of the item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Attribute specifying the JID of the item.
		 		 <p>required</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoItem:name:get"><apiName>name</apiName><shortdesc>
		 A natural-language name for the item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 A natural-language name for the item.
		 		 <p>optional</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoItem:node:get"><apiName>node</apiName><shortdesc>
		 The value of the node attribute may or may not have semantic meaning;
		 from the perspective of Service Discovery, a node is merely
		 something that is associated with an entity.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The value of the node attribute may or may not have semantic meaning;
		 from the perspective of Service Discovery, a node is merely
		 something that is associated with an entity.
		 		 <p>optional</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:LastActivityExtension"><apiName>LastActivityExtension</apiName><shortdesc>
	 XEP-0012: Last Activity
	 	 It is often helpful to know the time of the last
	 activity associated with a entity.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0012: Last Activity
	 	 <p>It is often helpful to know the time of the last
	 activity associated with a entity. The canonical
	 usage is to discover when a disconnected user last
	 accessed its server. The 'jabber:iq:last' namespace
	 provides a method for retrieving that information.
	 The 'jabber:iq:last' namespace can also be used to
	 discover or publicize when a connected user was
	 last active on the server (i.e., the user's idle
	 time) or to query servers and components about
	 their current uptime.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0012.html"><linktext>http://xmpp.org/extensions/xep-0012.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.disco:LastActivityExtension:LastActivityExtension"><apiName>LastActivityExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.disco:LastActivityExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:LastActivityExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.disco:LastActivityExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:LastActivityExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:last</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:LastActivityExtension:seconds:get"><apiName>seconds</apiName><shortdesc>
		 Required address of the content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Required address of the content.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:LastActivityExtension:text:get"><apiName>text</apiName><shortdesc>
		 Optional message text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Optional message text.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension"><apiName>InfoDiscoExtension</apiName><shortdesc>
	 Implements XEP-0030: Service Discovery
	 for service info discovery.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.disco:DiscoExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements <xref href="http://xmpp.org/extensions/xep-0030.html">XEP-0030: Service Discovery</xref>
	 for service info discovery.
	 Also, take a look at <xref href="http://xmpp.org/extensions/xep-0020.html">XEP-0020</xref> and
	 <xref href="http://xmpp.org/extensions/xep-0060.html">XEP-0060</xref>.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:InfoDiscoExtension"><apiName>InfoDiscoExtension</apiName><shortdesc>
		 In case you enable the FormExtension, you might get the extended disco information...</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 In case you enable the FormExtension, you might get the extended disco information...
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:addFeature"><apiName>addFeature</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoFeature</apiOperationClassifier></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoFeature</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:addFeatures"><apiName>addFeatures</apiName><shortdesc>
		 Add features as a list of namespace strings.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>List of DiscoFeature elements created
		 </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>varNames</apiItemName><apiType value="Array"/></apiParam></apiOperationDef><apiDesc>
		 Add features as a list of namespace strings.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:addIdentity"><apiName>addIdentity</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoIdentity</apiOperationClassifier></apiReturn><apiParam><apiItemName>identity</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoIdentity</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/disco#info</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:features:get"><apiName>features</apiName><shortdesc>
		 An array of namespaces this service supports for feature negotiation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 An array of namespaces this service supports for feature negotiation.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.disco.xml#DiscoFeature"><linktext>org.igniterealtime.xiff.data.disco.DiscoFeature</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:identities:get"><apiName>identities</apiName><shortdesc>
         An array of objects that represent the identities of a resource discovered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
         An array of objects that represent the identities of a resource discovered.
		          <p>The DiscoIdentity objects in the array have the following possible attributes:</p>
		 <ul>
		 <li><codeph>category</codeph> - a category of the kind of identity</li>
		 <li><codeph>type</codeph> - a path to a resource that can be discovered without a JID</li>
		 <li><codeph>name</codeph> - the friendly name of the identity</li>
		 </ul>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://www.jabber.org/registrar/disco-categories.html"><linktext>http://www.jabber.org/registrar/disco-categories.html</linktext></link><link href="org.igniterealtime.xiff.data.disco.xml#DiscoIdentity"><linktext>org.igniterealtime.xiff.data.disco.DiscoIdentity</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoExtension"><apiName>DiscoExtension</apiName><shortdesc>
	 XEP-0030: Service Discovery
	 	 Base class for service discovery extensions.
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0030: Service Discovery
	 	 <p>Base class for service discovery extensions.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/protocols/disco/"><linktext>http://xmpp.org/protocols/disco/</linktext></link><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoExtension:DiscoExtension"><apiName>DiscoExtension</apiName><shortdesc>
		 The name of the resource of the service queried if the resource
		 doesn't have a JID.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/></apiParam></apiConstructorDef><apiDesc>
		 The name of the resource of the service queried if the resource
		 doesn't have a JID.
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://www.jabber.org/registrar/disco-nodes.html"><linktext>http://www.jabber.org/registrar/disco-nodes.html</linktext></link></related-links></apiConstructor><apiValue id="org.igniterealtime.xiff.data.disco:DiscoExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoExtension:node:get"><apiName>node</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension"><apiName>ItemDiscoExtension</apiName><shortdesc>
	 Implements XEP-0030
	 for service item discovery.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.disco:DiscoExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements <xref href="http://xmpp.org/extensions/xep-0030.html">XEP-0030</xref>
	 for service item discovery.
	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:ItemDiscoExtension"><apiName>ItemDiscoExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoItem</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/disco#items</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:items:get"><apiName>items</apiName><shortdesc>
		 An array of DiscoItems that represent the items discovered.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 An array of DiscoItems that represent the items discovered.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.disco.xml#DiscoItem"><linktext>org.igniterealtime.xiff.data.disco.DiscoItem</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoFeature"><apiName>DiscoFeature</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoFeature:DiscoFeature"><apiName>DiscoFeature</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.disco:DiscoFeature:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoFeature</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.disco:DiscoFeature:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>feature</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoFeature:varName:get"><apiName>varName</apiName><shortdesc>
                 The var of this feature used by the application or server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
                 The var of this feature used by the application or server.
                 In most cases this is the namespace of the given feature/extension.
		                  <p>Note: This serializes to the <codeph>var</codeph> attribute on the feature node.</p>
                                  <p>Since <codeph>var</codeph> is a reserved word in ActionScript,
                 this feature uses <codeph>varName</codeph> to describe the var of this feature.</p>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoIdentity"><apiName>DiscoIdentity</apiName><shortdesc>
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoIdentity:DiscoIdentity"><apiName>DiscoIdentity</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.disco:DiscoIdentity:equals"><apiName>equals</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoIdentity</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.disco:DiscoIdentity:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>identity</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoIdentity:category:get"><apiName>category</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoIdentity:lang:get"><apiName>lang</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoIdentity:name:get"><apiName>name</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.disco:DiscoIdentity:type:get"><apiName>type</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.feature"><apiName>org.igniterealtime.xiff.data.feature</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension"><apiName>FeatureNegotiationExtension</apiName><shortdesc>
	 XEP-0020: Feature Negotiation
	 	 Features are negotiated through the exchange of
	 iq or message stanzas
	 containing feature child elements qualified
	 by the 'http://jabber.org/protocol/feature-neg' namespace.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0020: Feature Negotiation
	 	 <p>Features are negotiated through the exchange of
	 <b>iq</b> or <b>message</b> stanzas
	 containing <b>feature</b> child elements qualified
	 by the 'http://jabber.org/protocol/feature-neg' namespace.
	 However, this <b>feature</b> element is simply a
	 wrapper for structured data encapsulated in the
	 Data Forms (<codeph>FormExtension</codeph>) protocol.</p>
	 <p>In order to begin a negotation, the initiator sends an
	 <b>iq</b> stanza of type "get" (or a
	 <b>message</b> stanza type "normal" - see Stanza
	 Session Negotiation for examples) to the recipient with a
	 single <b>feature</b> element containing a data form
	 of type "form" which defines the available options for one or
	 more features. Each feature is represented as an x-data "field".</p>
	 <p>The recipient SHOULD examine each feature and the values of
	 the options provided. In order to indicate preferred values,
	 the recipient then SHOULD specify one value for each feature
	 and return a data form of type "submit" to the initiator in an
	 <b>iq</b> stanza of type "result" (or a
	 <b>message</b> stanza type "normal").</p>
	 <p>The following examples show some likely scenarios for feature
	 negotiation between entities. Further examples can be found in
	 "using protocols", such as File Transfer
	 (<codeph>FileTransferExtension</codeph>).</p>
	 	 <p>Peter Millard, the primary author of this specification from version 0.1
	 through version 1.4, died on April 26, 2006. The remaining authors are
	 thankful for Peter's work on this specification.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0020.html"><linktext>http://xmpp.org/extensions/xep-0020.html</linktext></link><link href="org.igniterealtime.xiff.data.forms.xml#FormExtension"><linktext>org.igniterealtime.xiff.data.forms.FormExtension</linktext></link><link href="org.igniterealtime.xiff.data.si.xml#FileTransferExtension"><linktext>org.igniterealtime.xiff.data.si.FileTransferExtension</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:FeatureNegotiationExtension"><apiName>FeatureNegotiationExtension</apiName><shortdesc>
		 Use FormExtension as a child extension.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Use <codeph>FormExtension</codeph> as a child extension.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>feature</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/feature-neg</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.forms.enum"><apiName>org.igniterealtime.xiff.data.forms.enum</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.forms.enum:FormType"><apiName>FormType</apiName><shortdesc>
	 Four different types of form that can exist according to XEP-0004.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Four different types of form that can exist according to XEP-0004.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0004.html#protocol-formtypes"><linktext>http://xmpp.org/extensions/xep-0004.html#protocol-formtypes</linktext></link></related-links><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormType:CANCEL"><apiName>CANCEL</apiName><shortdesc>
		 The form-submitting entity has cancelled submission of data
		 to the form-processing entity.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancel</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The form-submitting entity has cancelled submission of data
		 to the form-processing entity.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormType:FORM"><apiName>FORM</apiName><shortdesc>
		 The form-processing entity is asking the form-submitting entity to complete a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>form</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The form-processing entity is asking the form-submitting entity to complete a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormType:RESULT"><apiName>RESULT</apiName><shortdesc>
		 The form-processing entity is returning data (e.g., search results) to
		 the form-submitting entity, or the data is a generic data set.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>result</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The form-processing entity is returning data (e.g., search results) to
		 the form-submitting entity, or the data is a generic data set.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormType:SUBMIT"><apiName>SUBMIT</apiName><shortdesc>
		 The form-submitting entity is submitting data to the form-processing entity.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>submit</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The form-submitting entity is submitting data to the form-processing entity.
		 The submission MAY include fields that were not provided in the empty form,
		 but the form-processing entity MUST ignore any fields that it does not understand.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms.enum:FormFieldType"><apiName>FormFieldType</apiName><shortdesc>
	 Different field types of form that can exist according to XEP-0004.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Different field types of form that can exist according to XEP-0004.
	 	 <p>The following field types represent data "types" that are commonly exchanged between
	 Jabber/XMPP entities. These field types are not intended to be as comprehensive as
	 the datatypes defined in, for example, XML Schema Part 2, nor do they define
	 user interface elements.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0004.html#protocol-fieldtypes"><linktext>http://xmpp.org/extensions/xep-0004.html#protocol-fieldtypes</linktext></link><link href="http://www.w3.org/TR/xmlschema-2/"><linktext>http://www.w3.org/TR/xmlschema-2/</linktext></link></related-links><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:BOOLEAN"><apiName>BOOLEAN</apiName><shortdesc>
		 The field enables an entity to gather or provide an either-or choice between two options.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>boolean</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide an either-or choice between two options.
		 The default value is "false".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:FIXED"><apiName>FIXED</apiName><shortdesc>
		 The field is intended for data description (e.g., human-readable text such as "section"
		 headers) rather than data gathering or provision.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fixed</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field is intended for data description (e.g., human-readable text such as "section"
		 headers) rather than data gathering or provision. The <codeph>value</codeph> child SHOULD NOT contain
		 newlines (the \\n and \\r characters); instead an application SHOULD generate multiple
		 fixed fields, each with one <codeph>value</codeph> child.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:HIDDEN"><apiName>HIDDEN</apiName><shortdesc>
		 The field is not shown to the form-submitting entity, but instead is returned with
		 the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>hidden</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field is not shown to the form-submitting entity, but instead is returned with
		 the form. The form-submitting entity SHOULD NOT modify the value of a hidden field,
		 but MAY do so if such behavior is defined for the "using protocol".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:JID_MULTI"><apiName>JID_MULTI</apiName><shortdesc>
		 The field enables an entity to gather or provide multiple Jabber IDs.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jid-multi</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide multiple Jabber IDs. Each provided JID
		 SHOULD be unique (as determined by comparison that includes application of the Nodeprep,
		 Nameprep, and Resourceprep profiles of Stringprep as specified in XMPP Core), and
		 duplicate JIDs MUST be ignored.
		 		 <p>Note: Data provided for fields of type "jid-single" or "jid-multi" MUST contain one
		 or more valid Jabber IDs, where validity is determined by the addressing rules
		 defined in XMPP Core.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:JID_SINGLE"><apiName>JID_SINGLE</apiName><shortdesc>
		 The field enables an entity to gather or provide a single Jabber ID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jid-single</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide a single Jabber ID.
		 		 <p>Note: Data provided for fields of type "jid-single" or "jid-multi" MUST contain
		 one or more valid Jabber IDs, where validity is determined by the addressing
		 rules defined in XMPP Core.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:LIST_MULTI"><apiName>LIST_MULTI</apiName><shortdesc>
		 The field enables an entity to gather or provide one or more options from among many.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>list-multi</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide one or more options from among many.
		 A form-submitting entity chooses one or more items from among the options presented
		 by the form-processing entity and MUST NOT insert new options. The form-submitting
		 entity MUST NOT modify the order of items as received from the form-processing entity,
		 since the order of items MAY be significant.
		 		 <p>Note: The <codeph>option</codeph> elements in list-multi and list-single fields MUST
		 be unique, where uniqueness is determined by the value of the 'label' attribute and
		 the XML character data of the <codeph>value</codeph> element (i.e., both must be unique).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:LIST_SINGLE"><apiName>LIST_SINGLE</apiName><shortdesc>
		 The field enables an entity to gather or provide one option from among many.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>list-single</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide one option from among many.
		 A form-submitting entity chooses one item from among the options presented by the
		 form-processing entity and MUST NOT insert new options.
		 		 <p>Note: The <codeph>option</codeph> elements in list-multi and list-single fields MUST
		 be unique, where uniqueness is determined by the value of the 'label' attribute and
		 the XML character data of the <codeph>value</codeph> element (i.e., both must be unique).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:TEXT_MULTI"><apiName>TEXT_MULTI</apiName><shortdesc>
		 The field enables an entity to gather or provide multiple lines of text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>text-multi</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide multiple lines of text.
		 		 <p>Note: Data provided for fields of type "text-multi" SHOULD NOT contain any newlines
		 (the \\n and \\r characters). Instead, the application SHOULD split the data into
		 multiple strings (based on the newlines inserted by the platform), then specify
		 each string as the XML character data of a distinct <codeph>value</codeph> element. Similarly,
		 an application that receives multiple <codeph>value</codeph> elements for a field of
		 type "text-multi" SHOULD merge the XML character data of the value elements into
		 one text block for presentation to a user, with each string separated by a
		 newline character as appropriate for that platform.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:TEXT_PRIVATE"><apiName>TEXT_PRIVATE</apiName><shortdesc>
		 The field enables an entity to gather or provide a single line or word of text,
		 which shall be obscured in an interface (e.g., with multiple instances of the
		 asterisk character).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>text-private</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide a single line or word of text,
		 which shall be obscured in an interface (e.g., with multiple instances of the
		 asterisk character).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms.enum:FormFieldType:TEXT_SINGLE"><apiName>TEXT_SINGLE</apiName><shortdesc>
		 The field enables an entity to gather or provide a single line or word of text,
		 which may be shown in an interface.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>text-single</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The field enables an entity to gather or provide a single line or word of text,
		 which may be shown in an interface. This field type is the default and MUST be
		 assumed if a form-submitting entity receives a field type it does not understand.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.forms"><apiName>org.igniterealtime.xiff.data.forms</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.forms:FormExtension"><apiName>FormExtension</apiName><shortdesc>
	 XEP-0004: Data Forms
	 	 Implements the base functionality of XEP-0004: Data Forms,
	 shared by all MUC extensions.
	 	 Also used by XEP-0128: Service Discovery Extensions
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0004: Data Forms
	 	 <p>Implements the base functionality of XEP-0004: Data Forms,
	 shared by all MUC extensions.</p>
	 	 <p>Also used by XEP-0128: Service Discovery Extensions</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0004.html"><linktext>http://xmpp.org/extensions/xep-0004.html</linktext></link><link href="http://xmpp.org/extensions/xep-0128.html"><linktext>http://xmpp.org/extensions/xep-0128.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.forms:FormExtension:FormExtension"><apiName>FormExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:getFormField"><apiName>getFormField</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>FormField the matching form field
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data.forms:FormField</apiOperationClassifier></apiReturn><apiParam><apiItemName>varName</apiItemName><apiType value="String"/><apiDesc>The varName of the form field to retrieve
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:setFieldMap"><apiName>setFieldMap</apiName><shortdesc>
		 Sets the fields given a fieldMap object containing keys of field vars
		 and values of value arrays.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldMap</apiItemName><apiType value="Object"/><apiDesc>Object
		 Format:
		 { "varName": [ value1, value2, ... ] }
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the fields given a fieldMap object containing keys of field vars
		 and values of value arrays.
		 		 <p>Shorthand for setting <codeph>fields</codeph> property.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>x</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:x:data</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:fields:get"><apiName>fields</apiName><shortdesc>
		 Interface to array of fields.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Interface to array of fields.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:formType:get"><apiName>formType</apiName><shortdesc>
		 This is an accessor to the hidden field type FORM_TYPE
		 easily check what kind of form this is.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 This is an accessor to the hidden field type <codeph>FORM_TYPE</codeph>
		 easily check what kind of form this is.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0068.html"><linktext>http://xmpp.org/extensions/xep-0068.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:instructions:get"><apiName>instructions</apiName><shortdesc>
		 Natural-language instructions to be followed by the form-submitting entity.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Natural-language instructions to be followed by the form-submitting entity.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:items:get"><apiName>items</apiName><shortdesc>
		 Interface to array of items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Interface to array of items.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.forms.xml#FormItem"><linktext>org.igniterealtime.xiff.data.forms.FormItem</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:reported:get"><apiName>reported</apiName><shortdesc>
		 An element defining the data format for the result items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data.forms:FormReported</apiValueClassifier></apiValueDef><apiDesc>
		 An element defining the data format for the result items.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:title:get"><apiName>title</apiName><shortdesc>
		 The title of this form
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The title of this form
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormExtension:type:get"><apiName>type</apiName><shortdesc>
		 The type of form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The type of form.
		 May be one of the following:
		 		 <codeph>FormType.FORM</codeph>
		 <codeph>FormType.SUBMIT</codeph>
		 <codeph>FormType.CANCEL</codeph>
		 <codeph>FormType.RESULT</codeph>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms:FormReported"><apiName>FormReported</apiName><shortdesc>
	 In some contexts (e.g., the results of a search request), it may be
	 necessary to communicate multiple items.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 In some contexts (e.g., the results of a search request), it may be
	 necessary to communicate multiple items. Therefore, a data form of
	 type "result" MAY contain two child elements not described in the basic syntax:
	 <ol>
	 <li>One and only <b>reported</b> element, which can be understood as a "table header"
	 describing the data to follow.</li>
	 <li>Zero or more <b>item</b> elements, which can be understood as "table cells"
	 containing data (if any) that matches the request.</li>
	 </ol>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0004.html#protocol-results"><linktext>http://xmpp.org/extensions/xep-0004.html#protocol-results</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.forms:FormReported:FormReported"><apiName>FormReported</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.forms:FormReported:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reported</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormReported:fields:get"><apiName>fields</apiName><shortdesc>
		 Item interface to array of fields if they are contained in a "field" element
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Item interface to array of fields if they are contained in a "field" element
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms:FormItem"><apiName>FormItem</apiName><shortdesc>
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0004.html"><linktext>http://xmpp.org/extensions/xep-0004.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.forms:FormItem:FormItem"><apiName>FormItem</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.forms:FormItem:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>item</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormItem:fields:get"><apiName>fields</apiName><shortdesc>
		 Item interface to array of fields if they are contained in a "field" element
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Item interface to array of fields if they are contained in a "field" element
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms:FormField"><apiName>FormField</apiName><shortdesc>
	 This class is used by the FormExtension class for managing fields
	 as fields have multiple behaviors depending on the type of the form
	 while containing different kinds of data, some optional some not.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class is used by the FormExtension class for managing fields
	 as fields have multiple behaviors depending on the type of the form
	 while containing different kinds of data, some optional some not.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="org.igniterealtime.xiff.data.forms.xml#FormExtension"><linktext>org.igniterealtime.xiff.data.forms.FormExtension</linktext></link><link href="http://xmpp.org/extensions/xep-0004.html"><linktext>http://xmpp.org/extensions/xep-0004.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.forms:FormField:FormField"><apiName>FormField</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>varName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>values</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>options</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>desc</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>required</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.forms:FormField:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>field</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:desc:get"><apiName>desc</apiName><shortdesc>
		 A natural-language description of the field, intended for presentation in a user-agent
		 (e.g., as a "tool-tip", help button, or explanatory text provided near the field).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 A natural-language description of the field, intended for presentation in a user-agent
		 (e.g., as a "tool-tip", help button, or explanatory text provided near the field).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:label:get"><apiName>label</apiName><shortdesc>
		 A human-readable name for the field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 A human-readable name for the field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:options:get"><apiName>options</apiName><shortdesc>
		 If options are provided for possible selections of the value they are listed here.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 If options are provided for possible selections of the value they are listed here.
		 		 <p>Applies to the following field types:</p>
		 		 <codeph>FormFieldType.LIST_MULTI</codeph>
		 <codeph>FormFieldType.LIST_SINGLE</codeph>
		 		 <p>Array of objects with the properties <codeph>label</codeph> and <codeph>value</codeph>, {label, value}.</p>
		 		 <p>The <b>option</b> element MUST contain one and only one
		 <b>value</b> child. If the field is not of type "list-single"
		 or "list-multi", it MUST NOT contain an <b>option</b> element.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:required:get"><apiName>required</apiName><shortdesc>
		 If true, flags the field as required in order for the form to be considered valid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If true, flags the field as required in order for the form to be considered valid.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:type:get"><apiName>type</apiName><shortdesc>
		 The type of this field used by user interfaces to render an approprite
		 control to represent this field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The type of this field used by user interfaces to render an approprite
		 control to represent this field.
		 		 May be one of the following:
		 		 <codeph>FormFieldType.BOOLEAN</codeph>
		 <codeph>FormFieldType.FIXED</codeph>
		 <codeph>FormFieldType.HIDDEN</codeph>
		 <codeph>FormFieldType.JID_MULTI</codeph>
		 <codeph>FormFieldType.JID_SINGLE</codeph>
		 <codeph>FormFieldType.LIST_MULTI</codeph>
		 <codeph>FormFieldType.LIST_SINGLE</codeph>
		 <codeph>FormFieldType.TEXT_MULTI</codeph>
		 <codeph>FormFieldType.TEXT_PRIVATE</codeph>
		 <codeph>FormFieldType.TEXT_SINGLE</codeph>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0004.html#protocol-fieldtypes"><linktext>http://xmpp.org/extensions/xep-0004.html#protocol-fieldtypes</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:value:get"><apiName>value</apiName><shortdesc>
		 The chosen value for this field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The chosen value for this field. In forms with a type
		 <codeph>FormType.FORM</codeph> this is typically the default
		 value of the field.
		 		 Applies to the following field types:
		 		 <codeph>FormFieldType.BOOLEAN</codeph>
		 <codeph>FormFieldType.FIXED</codeph>
		 <codeph>FormFieldType.HIDDEN</codeph>
		 <codeph>FormFieldType.JID_SINGLE</codeph>
		 <codeph>FormFieldType.LIST_SINGLE</codeph>
		 <codeph>FormFieldType.LIST_MULTI</codeph>
		 <codeph>FormFieldType.TEXT_PRIVATE</codeph>
		 <codeph>FormFieldType.TEXT_SINGLE</codeph>
		 		 <p>Suggested values can typically be retrieved in <codeph>getAllOptions</codeph></p>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:values:get"><apiName>values</apiName><shortdesc>
		 The values for this multiple field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 The values for this multiple field.  In forms with a type
		 <codeph>FormType.FORM</codeph> these are typically the existing
		 values of the field.
		 		 Applies to the following field types:
		 		 <codeph>FormFieldType.JID_MULTI</codeph>
		 <codeph>FormFieldType.LIST_MULTI</codeph>
		 <codeph>FormFieldType.TEXT_MULTI</codeph>
		 		 Array containing strings representing the values of this field
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.forms:FormField:varName:get"><apiName>varName</apiName><shortdesc>
		 The var of this field used to uniquely identify the field in the context of the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The var of this field used to uniquely identify the field in the context of the form.
		 		 Note: this serializes to the <codeph>var</codeph> attribute on the field node.
		 Since <codeph>var</codeph> is a reserved word in ActionScript
		 this field uses <codeph>varName</codeph> to describe the var of this field.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.id"><apiName>org.igniterealtime.xiff.data.id</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.id:UUIDGenerator"><apiName>UUIDGenerator</apiName><shortdesc>
	 Generates a universally unique identifier.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.id:IIDGenerator</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generates a universally unique identifier.
	 RFC4122 Version 4.
	 http://tools.ietf.org/html/rfc4122#section-4.4
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.id:UUIDGenerator:UUIDGenerator"><apiName>UUIDGenerator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.id:UUIDGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates the unique ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The generated ID
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Generates the unique ID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.id:UUIDGenerator:prefix:get"><apiName>prefix</apiName><shortdesc>
		 The prefix to use for the generated ID (for namespacing purposes).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The prefix to use for the generated ID (for namespacing purposes).
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.id:SOIncrementalGenerator"><apiName>SOIncrementalGenerator</apiName><shortdesc>
	 Generates an incrementing ID and saves the last value in a local shared object.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.id:IIDGenerator</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.id:IncrementalGenerator</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generates an incrementing ID and saves the last value in a local shared object.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.id:SOIncrementalGenerator:SOIncrementalGenerator"><apiName>SOIncrementalGenerator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.id:SOIncrementalGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc>The generated ID
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Generates a unique ID.
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.id:IncrementalGenerator"><apiName>IncrementalGenerator</apiName><shortdesc>
	 Uses a simple incrementation of a variable to generate new IDs.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.id:IIDGenerator</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Uses a simple incrementation of a variable to generate new IDs.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.id:IncrementalGenerator:IncrementalGenerator"><apiName>IncrementalGenerator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.id:IncrementalGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The generated ID
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Generates a unique ID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.id:IncrementalGenerator:protected:_prefix"><apiName>_prefix</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.id:IncrementalGenerator:protected:counter"><apiName>counter</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.id:IncrementalGenerator:prefix:get"><apiName>prefix</apiName><shortdesc>
		 The prefix to use for the generated ID (for namespacing purposes).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The prefix to use for the generated ID (for namespacing purposes).
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.id:IIDGenerator"><apiName>IIDGenerator</apiName><shortdesc>
	 To use custom ID generators call the static function on the
	 XMPPStanza class with an instance that implements IIDGenerator.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 To use custom ID generators call the static function on the
	 XMPPStanza class with an instance that implements IIDGenerator.
	 	 </apiDesc><example><codeph>XMPPStanza.idGenerator = new SOIncrementalGenerator();</codeph>
	 </example></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.id:IIDGenerator:org.igniterealtime.xiff.data.id:IIDGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates an ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The generated ID
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Generates an ID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.id:IIDGenerator:org.igniterealtime.xiff.data.id:IIDGenerator:prefix:get"><apiName>prefix</apiName><shortdesc>
		 The prefix to use for the generated ID (for namespacing purposes).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The prefix to use for the generated ID (for namespacing purposes).
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.im"><apiName>org.igniterealtime.xiff.data.im</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.im:RosterItem"><apiName>RosterItem</apiName><shortdesc>
	 This class is used internally by the RosterExtension class for managing items
	 received and sent as roster data.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class is used internally by the RosterExtension class for managing items
	 received and sent as roster data. Usually, each item in the roster represents a single
	 contact, and this class is used to represent, abstract, and serialize/deserialize
	 this data.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="org.igniterealtime.xiff.data.im.xml#RosterExtension"><linktext>org.igniterealtime.xiff.data.im.RosterExtension</linktext></link><link href="http://xmpp.org/extensions/xep-0144.html"><linktext>http://xmpp.org/extensions/xep-0144.html</linktext></link><link href="http://tools.ietf.org/html/rfc3921#section-8"><linktext>http://tools.ietf.org/html/rfc3921#section-8</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.im:RosterItem:RosterItem"><apiName>RosterItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>The parent XML
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.im:RosterItem:addGroupNamed"><apiName>addGroupNamed</apiName><shortdesc>
		 Adds a group to the roster item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiDesc>The name of the group to add
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a group to the roster item. Contacts in the roster can be associated
		 with multiple groups.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterItem:removeAllGroups"><apiName>removeAllGroups</apiName><shortdesc>
		 Remove all group elements
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove all group elements
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterItem:removeGroupByName"><apiName>removeGroupByName</apiName><shortdesc>
		 Remove a single group with the given name
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove a single group with the given name
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>item</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:askType:get"><apiName>askType</apiName><shortdesc>
		 The ask type for this roster item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The ask type for this roster item.  Ask types have
		 been enumerated by static variables in the RosterExtension:
		 <ul>
		 <li>RosterExtension.ASK_TYPE_NONE</li>
		 <li>RosterExtension.ASK_TYPE_SUBSCRIBE</li>
		 <li>RosterExtension.ASK_TYPE_UNSUBSCRIBE</li>
		 </ul>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:groupCount:get"><apiName>groupCount</apiName><shortdesc>
		 Get the number of group elements in this roster item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef><apiDesc>
		 Get the number of <codeph>group</codeph> elements in this roster item.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:groupNames:get"><apiName>groupNames</apiName><shortdesc>
		 Gets a list of all the groups associated with this roster item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Gets a list of all the groups associated with this roster item.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:jid:get"><apiName>jid</apiName><shortdesc>
		 The JID for this roster item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The JID for this roster item.
		 Required.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:name:get"><apiName>name</apiName><shortdesc>
		 The display name for this roster item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The display name for this roster item.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:pending:get"><apiName>pending</apiName><shortdesc>
		 Convenience routine to determine if a roster item is considered "pending" or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Convenience routine to determine if a roster item is considered "pending" or not.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItem:subscription:get"><apiName>subscription</apiName><shortdesc>
		 The subscription type for this roster item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The subscription type for this roster item. Subscription types
		 have been enumerated by static variables in the RosterExtension:
		 <ul>
		 <li>RosterExtension.SUBSCRIBE_TYPE_NONE</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_TO</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_FROM</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_BOTH</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_REMOVE</li>
		 </ul>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc3921#section-8.1"><linktext>http://tools.ietf.org/html/rfc3921#section-8.1</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:RosterItemVO"><apiName>RosterItemVO</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IRosterItemVO</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><adobeApiEvent id="org.igniterealtime.xiff.data.im:RosterItemVO_org.igniterealtime.xiff.events.PropertyChangeEvent.CHANGE_change"><apiName>change</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.PropertyChangeEvent.CHANGE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.PropertyChangeEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.data.im:RosterItemVO:RosterItemVO"><apiName>RosterItemVO</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>newJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.im:RosterItemVO:toString"><apiName>toString</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiDesc/><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterItemVO:get"><apiName>get</apiName><shortdesc>
		 Returns an Roster item value object if it exists,
		 use the "create" parameter to create one if it does not.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data.im:RosterItemVO</apiOperationClassifier></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>create</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns an Roster item value object if it exists,
		 use the "create" parameter to create one if it does not.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:askType:get"><apiName>askType</apiName><shortdesc>
		 Type of asking
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Type of asking
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:jid:get"><apiName>jid</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:nickname:get"><apiName>nickname</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:online:get"><apiName>online</apiName><shortdesc>
		 User online?
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 User online?
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:pending:get"><apiName>pending</apiName><shortdesc>
		 Pending
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Pending
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:priority:get"><apiName>priority</apiName><shortdesc>
		 Priority.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 Priority. The value MUST be an integer between -128 and +127
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:show:get"><apiName>show</apiName><shortdesc>
		 Show
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Show
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:status:get"><apiName>status</apiName><shortdesc>
		 Status
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Status
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:subscribeType:get"><apiName>subscribeType</apiName><shortdesc>
		 Type of subscription.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Type of subscription. One of "none", "both", "from", "to"...
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterItemVO:uid:get"><apiName>uid</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:IRosterGroup"><apiName>IRosterGroup</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:addItem"><apiName>addItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:contains"><apiName>contains</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:removeItem"><apiName>removeItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:items:get"><apiName>items</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.collections:ICollection</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:label:get"><apiName>label</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:shared:get"><apiName>shared</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:RosterGroup"><apiName>RosterGroup</apiName><shortdesc>
	 Represents the groups in users roster.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IRosterGroup</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Represents the groups in users roster.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.im:RosterGroup:RosterGroup"><apiName>RosterGroup</apiName><shortdesc>
		 Create a new group with the given name
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Create a new group with the given name
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.im:RosterGroup:addItem"><apiName>addItem</apiName><shortdesc>
		 Insert a new roster item if it does not already exist in this group
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Insert a new roster item if it does not already exist in this group
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterGroup:contains"><apiName>contains</apiName><shortdesc>
		 Does the given item exist in this group?
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does the given item exist in this group?
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterGroup:removeItem"><apiName>removeItem</apiName><shortdesc>
		 Remove the given roster item from this group.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove the given roster item from this group.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.im:RosterGroup:items:get"><apiName>items</apiName><shortdesc>
		 Roster items in this group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.collections:ICollection</apiValueClassifier></apiValueDef><apiDesc>
		 Roster items in this group.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterGroup:label:get"><apiName>label</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterGroup:shared:get"><apiName>shared</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:IRosterItemVO"><apiName>IRosterItemVO</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IContact</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.data.im:IRosterItemVO:org.igniterealtime.xiff.data.im:IRosterItemVO:askType:get"><apiName>askType</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IRosterItemVO:org.igniterealtime.xiff.data.im:IRosterItemVO:pending:get"><apiName>pending</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IRosterItemVO:org.igniterealtime.xiff.data.im:IRosterItemVO:priority:get"><apiName>priority</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IRosterItemVO:org.igniterealtime.xiff.data.im:IRosterItemVO:status:get"><apiName>status</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IRosterItemVO:org.igniterealtime.xiff.data.im:IRosterItemVO:subscribeType:get"><apiName>subscribeType</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:IContact"><apiName>IContact</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.data.im:IContact:org.igniterealtime.xiff.data.im:IContact:jid:get"><apiName>jid</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IContact:org.igniterealtime.xiff.data.im:IContact:nickname:get"><apiName>nickname</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IContact:org.igniterealtime.xiff.data.im:IContact:online:get"><apiName>online</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:IContact:org.igniterealtime.xiff.data.im:IContact:show:get"><apiName>show</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:RosterExtension"><apiName>RosterExtension</apiName><shortdesc>
	 An IQ extension for roster data.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An IQ extension for roster data. Roster data is typically any data
	 that is sent or received with the "jabber:iq:roster" namespace.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/rfcs/rfc3921.html#roster"><linktext>http://xmpp.org/rfcs/rfc3921.html#roster</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.im:RosterExtension:RosterExtension"><apiName>RosterExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 Adds a single roster item to the extension payload.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>The JID of the contact to add
		 </apiDesc></apiParam><apiParam><apiItemName>subscription</apiItemName><apiType value="String"/><apiData/><apiDesc>The subscription type of the roster item contact.
		 			There are pre-defined static variables for these string options in this class definition.
		 </apiDesc></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiData/><apiDesc>The display name or nickname of the contact.
		 </apiDesc></apiParam><apiParam><apiItemName>groups</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>An array of strings of the group names that this contact should be placed in.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a single roster item to the extension payload.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The element name
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:getItemByJID"><apiName>getItemByJID</apiName><shortdesc>
		 Gets one item from the roster query, returning the first item found with the JID specified.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A roster item object with the following attributes: "jid", "subscription", "nickname", and "groups".
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data.im:RosterItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Gets one item from the roster query, returning the first item found with the JID specified.
		 If none is found, then it returns null.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The namespace
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the RosterExtension is "jabber:iq:roster".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:ASK_TYPE_NONE"><apiName>ASK_TYPE_NONE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:ASK_TYPE_SUBSCRIBE"><apiName>ASK_TYPE_SUBSCRIBE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscribe</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:ASK_TYPE_UNSUBSCRIBE"><apiName>ASK_TYPE_UNSUBSCRIBE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unsubscribe</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:roster</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:SHOW_PENDING"><apiName>SHOW_PENDING</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>Pending</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:SHOW_UNAVAILABLE"><apiName>SHOW_UNAVAILABLE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unavailable</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:SUBSCRIBE_TYPE_BOTH"><apiName>SUBSCRIBE_TYPE_BOTH</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>both</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:SUBSCRIBE_TYPE_FROM"><apiName>SUBSCRIBE_TYPE_FROM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>from</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:SUBSCRIBE_TYPE_NONE"><apiName>SUBSCRIBE_TYPE_NONE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:SUBSCRIBE_TYPE_REMOVE"><apiName>SUBSCRIBE_TYPE_REMOVE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>remove</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:SUBSCRIBE_TYPE_TO"><apiName>SUBSCRIBE_TYPE_TO</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>to</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.im:RosterExtension:items:get"><apiName>items</apiName><shortdesc>
		 		 Array of RosterItem objects
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 		 Array of RosterItem objects
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.muc"><apiName>org.igniterealtime.xiff.data.muc</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCItem"><apiName>MUCItem</apiName><shortdesc>
	 This class is used by the MUCExtension for internal representation of
	 information pertaining to occupants in a multi-user conference room.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class is used by the MUCExtension for internal representation of
	 information pertaining to occupants in a multi-user conference room.
	 	 <p>The information given inside Precense of a given room user</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html#associations"><linktext>http://xmpp.org/extensions/xep-0045.html#associations</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCItem:MUCItem"><apiName>MUCItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>item</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:actorNick:get"><apiName>actorNick</apiName><shortdesc>
		 Optional.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Optional. Nickname of the room user or server that made changes to the given item.
		 Most likely when kicking someone from a room.
		 		 <p>This property was added to Version 1.25 (2012-02-08) of the specification.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html#kick"><linktext>http://xmpp.org/extensions/xep-0045.html#kick</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:actor:get"><apiName>actor</apiName><shortdesc>
		 Optional.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 Optional. JID of the room user or server that made changes to the given item.
		 Most likely when kicking someone from a room.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html#kick"><linktext>http://xmpp.org/extensions/xep-0045.html#kick</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:affiliation:get"><apiName>affiliation</apiName><shortdesc>
		 Can be one of the following: owner, admin, member, outcast, or none.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Can be one of the following: owner, admin, member, outcast, or none.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:jid:get"><apiName>jid</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:nick:get"><apiName>nick</apiName><shortdesc>
		 The nickname of the conference occupant.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The nickname of the conference occupant.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:reason:get"><apiName>reason</apiName><shortdesc>
		 Rason given by the actor for the action that was made for the given item.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Rason given by the actor for the action that was made for the given item.
		 Most likely the reson why someone was kicked out from a room.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html#kick"><linktext>http://xmpp.org/extensions/xep-0045.html#kick</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCItem:role:get"><apiName>role</apiName><shortdesc>
		 Can be one of the following: moderator, participant,
		 visitor, or none.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Can be one of the following: moderator, participant,
		 visitor, or none.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCBaseExtension"><apiName>MUCBaseExtension</apiName><shortdesc>
	 Implements the base functionality shared by all MUC extensions
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements the base functionality shared by all MUC extensions
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html"><linktext>http://xmpp.org/extensions/xep-0045.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCBaseExtension:MUCBaseExtension"><apiName>MUCBaseExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.muc:MUCBaseExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 Use this method to create a new item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created MUCItem
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data.muc:MUCItem</apiOperationClassifier></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>A predefined string defining the affiliation the JID or nick has in relation to the room
		 </apiDesc></apiParam><apiParam><apiItemName>role</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The role the jid or nick has in the room
		 </apiDesc></apiParam><apiParam><apiItemName>nick</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The nickname of the new item
		 </apiDesc></apiParam><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>The jid of the new item
		 </apiDesc></apiParam><apiParam><apiItemName>actor</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The user that is actually creating the request
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The reason why the action associated with this item is being preformed
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Use this method to create a new item.  Either the affiliation or role are requried.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.muc:MUCBaseExtension:items:get"><apiName>items</apiName><shortdesc>
		 Item interface to MUCItems if they are contained in this extension
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Item interface to MUCItems if they are contained in this extension
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCExtension"><apiName>MUCExtension</apiName><shortdesc>
	 Implements the base MUC protocol schema from XEP-0045 for multi-user chat.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.muc:IMUCExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements the base MUC protocol schema from <xref href="http://www.xmpp.org/extensions/xep-0045.html">XEP-0045</xref> for multi-user chat.
	 	 This extension is typically used to test for the presence of MUC enabled conferencing
	 service, or a MUC related error condition.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.xmpp.org/extensions/xep-0045.html"><linktext>http://www.xmpp.org/extensions/xep-0045.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCExtension:MUCExtension"><apiName>MUCExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.muc:MUCExtension:addChildNode"><apiName>addChildNode</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>childNode</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>x</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/muc</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:history:get"><apiName>history</apiName><shortdesc>
		 This is property allows a user to retrieve a server defined collection of previous messages.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This is property allows a user to retrieve a server defined collection of previous messages.
		 Set this property to "true" to retrieve a history of the dicussions.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:maxchars:get"><apiName>maxchars</apiName><shortdesc>
		 Size based condition to evaluate by the server for the maximum
		 characters to return during history retrieval
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 Size based condition to evaluate by the server for the maximum
		 characters to return during history retrieval
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:maxstanzas:get"><apiName>maxstanzas</apiName><shortdesc>
		 Protocol based condition for the number of stanzas to return during history retrieval
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 Protocol based condition for the number of stanzas to return during history retrieval
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:password:get"><apiName>password</apiName><shortdesc>
		 If a room is password protected, add this extension and set the password.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 If a room is password protected, add this extension and set the password.
		 Use <codeph>null</codeph> to remove.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:seconds:get"><apiName>seconds</apiName><shortdesc>
		 Time based condition to retrive all messages for the last N seconds.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Time based condition to retrive all messages for the last N seconds.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCExtension:since:get"><apiName>since</apiName><shortdesc>
		 Time base condition to retrieve all messages from a given time formatted in the format described in
		 XEP-0082.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Time base condition to retrieve all messages from a given time formatted in the format described in
		 <xref href="http://xmpp.org/extensions/xep-0082.html">XEP-0082</xref>.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0082.html"><linktext>http://xmpp.org/extensions/xep-0082.html</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUC"><apiName>MUC</apiName><shortdesc>
	 This class contains a series of static constants that are used throughout the
	 multi-user conferencing extensions.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class contains a series of static constants that are used throughout the
	 multi-user conferencing extensions.
	 	 <p>The constants include the following for
	 conference room affiliations:</p>
	 <ul>
	 <li>AFFILIATION_ADMIN</li>
	 <li>AFFILIATION_MEMBER</li>
	 <li>AFFILIATION_NONE</li>
	 <li>AFFILIATION_OUTCAST</li>
	 <li>AFFILIATION_OWNER</li>
	 </ul>
	 	 <p>And the following constants for room roles:</p>
	 <ul>
	 <li>ROLE_MODERATOR</li>
	 <li>ROLE_NONE</li>
	 <li>ROLE_PARTICIPANT</li>
	 <li>ROLE_VISITOR</li>
	 </ul>
	 	 <p>Support for the owner affiliation is REQUIRED. Support for the admin, member,
	 and outcast affiliations is RECOMMENDED. (The "None" affiliation is
	 the absence of an affiliation.)</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.xmpp.org/extensions/xep-0045.html"><linktext>http://www.xmpp.org/extensions/xep-0045.html</linktext></link></related-links><apiValue id="org.igniterealtime.xiff.data.muc:MUC:AFFILIATION_ADMIN"><apiName>AFFILIATION_ADMIN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>admin</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:AFFILIATION_MEMBER"><apiName>AFFILIATION_MEMBER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>member</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:AFFILIATION_NONE"><apiName>AFFILIATION_NONE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:AFFILIATION_OUTCAST"><apiName>AFFILIATION_OUTCAST</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>outcast</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:AFFILIATION_OWNER"><apiName>AFFILIATION_OWNER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>owner</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:ROLE_MODERATOR"><apiName>ROLE_MODERATOR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>moderator</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:ROLE_NONE"><apiName>ROLE_NONE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>none</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:ROLE_PARTICIPANT"><apiName>ROLE_PARTICIPANT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>participant</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUC:ROLE_VISITOR"><apiName>ROLE_VISITOR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>visitor</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCStatus"><apiName>MUCStatus</apiName><shortdesc>
	 XEP-0306: Extensible Status Conditions for Multi-User Chat
	 	 Traditionally, Multi-User Chat [1] has used numerical status codes similar to
	 those used in HTTP and SMTP.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0306: Extensible Status Conditions for Multi-User Chat
	 	 <p>Traditionally, Multi-User Chat [1] has used numerical status codes similar to
	 those used in HTTP and SMTP. Numerical codes were deprecated in the core of
	 XMPP by RFC 3920 [2] and are no longer even defined in the core schemas provided in
	 RFC 6120 [3] (see also Error Condition Mappings [4]). In an effort to modernize
	 the Multi-User Chat (MUC) protocol, this document defines an extensible
	 format for status conditions in MUC.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0306.html"><linktext>http://xmpp.org/extensions/xep-0306.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCStatus:MUCStatus"><apiName>MUCStatus</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.muc:MUCStatus:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>status</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCStatus:NS"><apiName>NS</apiName><shortdesc>
		 Note that this namespace is for the message element
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:xmpp:muc:conditions:1</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Note that this namespace is for the message element
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCStatus:code:get"><apiName>code</apiName><shortdesc>
		 Property used to add or retrieve a status code describing the condition that occurs.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 Property used to add or retrieve a status code describing the condition that occurs.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0306.html#mapping"><linktext>http://xmpp.org/extensions/xep-0306.html#mapping</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCStatus:message:get"><apiName>message</apiName><shortdesc>
		 Property that contains some text with a description of a condition.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Property that contains some text with a description of a condition.
		 		 <p> One of the following values:</p>
		 		 <ul>
		 <li>affiliation-changed</li>
		 <li>banned</li>
		 <li>configuration-changed</li>
		 <li>fully-anonymous</li>
		 <li>kicked</li>
		 <li>logging-disabled</li>
		 <li>logging-enabled</li>
		 <li>new-nick</li>
		 <li>nick-assigned</li>
		 <li>non-anonymous</li>
		 <li>realjid-public</li>
		 <li>removed-affiliation</li>
		 <li>removed-membership</li>
		 <li>removed-shutdown</li>
		 <li>room-created</li>
		 <li>self-presence</li>
		 <li>semi-anonymous</li>
		 <li>unavailable-not-shown</li>
		 <li>unavailable-shown</li>
		 </ul>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0306.html#mapping"><linktext>http://xmpp.org/extensions/xep-0306.html#mapping</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCAdminExtension"><apiName>MUCAdminExtension</apiName><shortdesc>
	 Implements the administration command data model in XEP-0045 for multi-user chat.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.muc:MUCBaseExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements the administration command data model in <xref href="http://xmpp.org/extensions/xep-0045.html">XEP-0045</xref> for multi-user chat.
	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html"><linktext>http://xmpp.org/extensions/xep-0045.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:MUCAdminExtension"><apiName>MUCAdminExtension</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/muc#admin</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCUserExtension"><apiName>MUCUserExtension</apiName><shortdesc>
	 Implements the base MUC user protocol schema from
	 XEP-0045 for multi-user chat.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.muc:MUCBaseExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements the base MUC user protocol schema from
	 <xref href="http://www.xmpp.org/extensions/xep-0045.html">XEP-0045</xref> for multi-user chat.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html"><linktext>http://xmpp.org/extensions/xep-0045.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCUserExtension:MUCUserExtension"><apiName>MUCUserExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:decline"><apiName>decline</apiName><shortdesc>
		 Use this extension to decline an invitation
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>from</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Use this extension to decline an invitation
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:destroy"><apiName>destroy</apiName><shortdesc>
		 Use this extension to destroy a room
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>room</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Use this extension to destroy a room
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:hasStatusCode"><apiName>hasStatusCode</apiName><shortdesc>
		 Does the given status code exist in the list of statuses saved in this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does the given status code exist in the list of statuses saved in this extension.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:invite"><apiName>invite</apiName><shortdesc>
		 Use this extension to invite another user
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>from</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Use this extension to invite another user
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>x</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/muc#user</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:TYPE_DECLINE"><apiName>TYPE_DECLINE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>decline</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:TYPE_DESTROY"><apiName>TYPE_DESTROY</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>destroy</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:TYPE_INVITE"><apiName>TYPE_INVITE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invite</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:TYPE_OTHER"><apiName>TYPE_OTHER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>other</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:from:get"><apiName>from</apiName><shortdesc>
		 The from property for invite and decline action types
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The from property for invite and decline action types
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:jid:get"><apiName>jid</apiName><shortdesc>
		 The jid property for destroy the action type
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The jid property for destroy the action type
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:password:get"><apiName>password</apiName><shortdesc>
		 Property to use if the concerned room is password protected
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Property to use if the concerned room is password protected
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:reason:get"><apiName>reason</apiName><shortdesc>
		 The reason for the invite/decline/destroy
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The reason for the invite/decline/destroy
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:statuses:get"><apiName>statuses</apiName><shortdesc>
		 List of MUCStatus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 List of MUCStatus.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.muc.xml#MUCStatus"><linktext>org.igniterealtime.xiff.data.muc.MUCStatus</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:to:get"><apiName>to</apiName><shortdesc>
		 The to property for invite and decline action types
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The to property for invite and decline action types
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCUserExtension:type:get"><apiName>type</apiName><shortdesc>
		 The type of user extension this is
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 The type of user extension this is
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension"><apiName>MUCOwnerExtension</apiName><shortdesc>
	 Implements the administration command data model in XEP-0045 for multi-user chat.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.muc:MUCBaseExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements the administration command data model in <xref href="http://xmpp.org/extensions/xep-0045.html">XEP-0045</xref> for multi-user chat.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html"><linktext>http://xmpp.org/extensions/xep-0045.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:MUCOwnerExtension"><apiName>MUCOwnerExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:destroy"><apiName>destroy</apiName><shortdesc>
	     Replaces the destroy node with a new node and sets
	     the reason element and jid attribute
	     	     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A string describing the reason for room destruction. Use <codeph>null</codeph> to remove.
	     </apiDesc></apiParam><apiParam><apiItemName>alternateJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>A string containing a JID that room members can use instead of this room
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
	     Replaces the <codeph>destroy</codeph> node with a new node and sets
	     the <codeph>reason</codeph> element and <codeph>jid</codeph> attribute
	     	     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/muc#owner</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:IMUCExtension"><apiName>IMUCExtension</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:addChildNode"><apiName>addChildNode</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>childNode</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:history:get"><apiName>history</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:maxchars:get"><apiName>maxchars</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:maxstanzas:get"><apiName>maxstanzas</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:password:get"><apiName>password</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:seconds:get"><apiName>seconds</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:since:get"><apiName>since</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.ping"><apiName>org.igniterealtime.xiff.data.ping</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.ping:PingExtension"><apiName>PingExtension</apiName><shortdesc>
	 XEP-0199: XMPP Ping
	 	 extension for sending application-level pings over XML streams.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0199: XMPP Ping
	 	 <p>extension for sending application-level pings over XML streams.
	 Such pings can be sent from a client to a server, from one
	 server to another, or end-to-end.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0199.html"><linktext>http://xmpp.org/extensions/xep-0199.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.ping:PingExtension:PingExtension"><apiName>PingExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.ping:PingExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.ping:PingExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.ping:PingExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>ping</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.ping:PingExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:xmpp:ping</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.privatedata"><apiName>org.igniterealtime.xiff.data.privatedata</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension"><apiName>PrivateDataExtension</apiName><shortdesc>
	 XEP-0049: Private XML Storage
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0049: Private XML Storage
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0049.html"><linktext>http://xmpp.org/extensions/xep-0049.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:PrivateDataExtension"><apiName>PrivateDataExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>privateName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>privateNamespace</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>payload</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.privatedata:IPrivatePayload</apiOperationClassifier><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:private</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:payload:get"><apiName>payload</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><exampleText>&gt;defaultnick&lt;Hamlet&gt;/defaultnick&lt;
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.privatedata:IPrivatePayload</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:privateName:get"><apiName>privateName</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><exampleText>exodus
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:privateNamespace:get"><apiName>privateNamespace</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><exampleText>exodus:prefs
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.register"><apiName>org.igniterealtime.xiff.data.register</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.register:RegisterExtension"><apiName>RegisterExtension</apiName><shortdesc>
	 XEP-0077: In-Band Registration
	 	 Implements jabber:iq:register namespace.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0077: In-Band Registration
	 	 <p>Implements jabber:iq:register namespace.  Use this to create new accounts on the jabber server.
	 Send an empty IQ.TYPE_GET packet with this extension and the return will either be a conflict,
	 or the fields you will need to fill out.</p>
	 	 <p>Send a IQ.TYPE_SET packet to the server and with the fields that are listed in
	 'getRequiredFieldNames()' set on this extension.
	 Check the result and re-establish the connection with the new account.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0077.html"><linktext>http://xmpp.org/extensions/xep-0077.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.register:RegisterExtension:RegisterExtension"><apiName>RegisterExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The parent node used to build the XML tree.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.register:RegisterExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.register:RegisterExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.register:RegisterExtension:getRequiredFieldNames"><apiName>getRequiredFieldNames</apiName><shortdesc>
		 In order to determine which fields are required for registration with a host,
		 an entity SHOULD first send an IQ get to the host.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Names of the required fields
		 </apiDesc><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 In order to determine which fields are required for registration with a host,
		 an entity SHOULD first send an IQ get to the host. The entity SHOULD NOT attempt
		 to guess at the required fields by first sending an IQ set, since the nature
		 of the required data is subject to service provisioning.
		 		 <p>All fields available in this XML, except "key" and "instructions" are required.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:register</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:address:get"><apiName>address</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:city:get"><apiName>city</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:date:get"><apiName>date</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:email:get"><apiName>email</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:first:get"><apiName>first</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:instructions:get"><apiName>instructions</apiName><shortdesc>
		 Use null to remove.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Use <codeph>null</codeph> to remove.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:key:get"><apiName>key</apiName><shortdesc>
		 This element is obsolete, but is included here for historical completeness.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 This element is obsolete, but is included here for historical completeness.
		 		 <p>The <b>key</b> element was used as a "transaction key" in certain
		 IQ interactions in order to verify the identity of the sender. In particular,
		 it was used by servers (but generally not services) during in-band registration,
		 since normally a user does not yet have a 'from' address before registering.</p>
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:last:get"><apiName>last</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:misc:get"><apiName>misc</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:nick:get"><apiName>nick</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:password:get"><apiName>password</apiName><shortdesc>
		 The 'jabber:iq:register' namespace enables a user to change his or her
		 password with a server or service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The 'jabber:iq:register' namespace enables a user to change his or her
		 password with a server or service. Once registered, the user can
		 change passwords by setting <codeph>username</codeph> and <codeph>password</codeph>.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0077.html#usecases-changepw"><linktext>http://xmpp.org/extensions/xep-0077.html#usecases-changepw</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:phone:get"><apiName>phone</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:state:get"><apiName>state</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:text:get"><apiName>text</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:unregister:get"><apiName>unregister</apiName><shortdesc>
		 The 'jabber:iq:register' namespace also makes it possible for an entity to cancel a
		 registration with a host by sending a remove element in an IQ set.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The 'jabber:iq:register' namespace also makes it possible for an entity to cancel a
		 registration with a host by sending a <b>remove</b> element in an IQ set.
		 The host MUST determine the identity of the requesting entity based on the 'from'
		 address of the IQ get.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:url:get"><apiName>url</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:username:get"><apiName>username</apiName><shortdesc>
		 The 'jabber:iq:register' namespace enables a user to change his or her
		 password with a server or service.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The 'jabber:iq:register' namespace enables a user to change his or her
		 password with a server or service. Once registered, the user can
		 change passwords by setting <codeph>username</codeph> and <codeph>password</codeph>.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0077.html#usecases-changepw"><linktext>http://xmpp.org/extensions/xep-0077.html#usecases-changepw</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.register:RegisterExtension:zip:get"><apiName>zip</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.rpc"><apiName>org.igniterealtime.xiff.data.rpc</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.rpc:XMLRPC"><apiName>XMLRPC</apiName><shortdesc>
	 Implements client side XML marshalling of methods and parameters into XMLRPC.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements client side XML marshalling of methods and parameters into XMLRPC.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0009.html"><linktext>http://xmpp.org/extensions/xep-0009.html</linktext></link><link href="http://www.xmlrpc.com/spec"><linktext>http://www.xmlrpc.com/spec</linktext></link></related-links><apiOperation id="org.igniterealtime.xiff.data.rpc:XMLRPC:fromXML"><apiName>fromXML</apiName><shortdesc>
		 Extract and marshall the XML-RPC response to Flash types.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Mixed object of either an array of results from the method call or a fault.
		 If the result is a fault, "result.isFault" will evaulate as true.
		 </apiDesc><apiType value="Array"/></apiReturn><apiParam><apiItemName>xml</apiItemName><apiType value="XML"/><apiDesc>The XML containing the message response
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Extract and marshall the XML-RPC response to Flash types.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.rpc:XMLRPC:toXML"><apiName>toXML</apiName><shortdesc>
		 The marshalling process, accepting a block of XML, a string description of the remote method,
		 and an array of flash type parameters.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>XML containing the XML marshalled result
		 </apiDesc><apiType value="XML"/></apiReturn><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/></apiParam><apiParam><apiItemName>method</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>params</apiItemName><apiType value="Array"/></apiParam></apiOperationDef><apiDesc>
		 The marshalling process, accepting a block of XML, a string description of the remote method,
		 and an array of flash type parameters.
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.rpc:RPCExtension"><apiName>RPCExtension</apiName><shortdesc>
	 Implements XEP-0009 for XML-RPC over XMPP.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Implements XEP-0009 for XML-RPC over XMPP.
	 	 <p>The protocol supports all syntax and semantics of XML-RPC except
	 that it uses XMPP instead of HTTP as the underlying transport.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0009.html"><linktext>http://xmpp.org/extensions/xep-0009.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.rpc:RPCExtension:RPCExtension"><apiName>RPCExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.rpc:RPCExtension:call"><apiName>call</apiName><shortdesc>
		 Place the remote call.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>methodName</apiItemName><apiType value="String"/><apiDesc>The name of the remote procedure to call
		 </apiDesc></apiParam><apiParam><apiItemName>params</apiItemName><apiType value="Array"/><apiDesc>A collection of parameters of any type
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Place the remote call.  This method serializes the remote procedure call to XML.
		 The call will be made on the remote machine when the stanza containing this extension is sent to the server.
		 		 If this extension is being returned, then check the result property instead.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.rpc.xml#RPCExtension/result"><linktext>result</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.rpc:RPCExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Interface method, returning the namespace for this extension
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Interface method, returning the namespace for this extension
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#IExtension"><linktext>org.igniterealtime.xiff.data.IExtension</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.rpc:RPCExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Interface method, returning the namespace for this extension
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Interface method, returning the namespace for this extension
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#IExtension"><linktext>org.igniterealtime.xiff.data.IExtension</linktext></link></related-links></apiOperation><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:rpc</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:faultCode:get"><apiName>faultCode</apiName><shortdesc>
		 A common result from most RPC servers to describe a fault
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 A common result from most RPC servers to describe a fault
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:faultString:get"><apiName>faultString</apiName><shortdesc>
		 A common result from most RPC servers to describe a fault
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef><apiDesc>
		 A common result from most RPC servers to describe a fault
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:fault:get"><apiName>fault</apiName><shortdesc>
		 The object containing the fault of the remote procedure call.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		 The object containing the fault of the remote procedure call.
		 This object could have any properties, as fault results are only structurally defined.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:isFault:get"><apiName>isFault</apiName><shortdesc>
		 Check this if property if you wish to determine the remote procedure call produced an error.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Check this if property if you wish to determine the remote procedure call produced an error.
		 If the XMPP stanza never made it to the RPC service, then the error would be on the
		 stanza object instead of this extension.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:result:get"><apiName>result</apiName><shortdesc>
		 The result of this remote procedure call.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 The result of this remote procedure call.  It can contain elements of any type.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.rpc:RPCExtension:xml:set"><apiName>xml</apiName><shortdesc>
		 Interface method, returning the namespace for this extension
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef><apiDesc>
		 Interface method, returning the namespace for this extension
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.xml#INodeProxy"><linktext>org.igniterealtime.xiff.data.INodeProxy</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.search"><apiName>org.igniterealtime.xiff.data.search</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.search:SearchItem"><apiName>SearchItem</apiName><shortdesc>
	 This class is used by the SearchExtension for internal representation of
	 information pertaining to items matching the search query.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class is used by the SearchExtension for internal representation of
	 information pertaining to items matching the search query.
	 	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.search:SearchItem:SearchItem"><apiName>SearchItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>item</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:email:get"><apiName>email</apiName><shortdesc>
		 E-mail
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 E-mail
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:first:get"><apiName>first</apiName><shortdesc>
		 First
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 First
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:jid:get"><apiName>jid</apiName><shortdesc>
		 JID
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 JID
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:last:get"><apiName>last</apiName><shortdesc>
		 Last
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Last
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:name:get"><apiName>name</apiName><shortdesc>
		 Name
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Name
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:nick:get"><apiName>nick</apiName><shortdesc>
		 Nick
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Nick
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchItem:username:get"><apiName>username</apiName><shortdesc>
		 Username
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Username
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.search:SearchExtension"><apiName>SearchExtension</apiName><shortdesc>
	 XEP-0055: Jabber Search
	 	 Implements jabber:iq:search namespace.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0055: Jabber Search
	 	 <p>Implements jabber:iq:search namespace. Use this to perform user searches.</p>
	 	 <p>Send an empty IQ.TYPE_GET packet with this extension and the return will either be
	 a conflict, or the fields you will need to fill out.</p>
	 	 <p>Send a IQ.TYPE_SET packet to the server and with the fields that are listed in
	 getRequiredFieldNames set on this extension.</p>
	 	 <p>Check the result and re-establish the connection with the new account.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0055.html"><linktext>http://xmpp.org/extensions/xep-0055.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.search:SearchExtension:SearchExtension"><apiName>SearchExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The parent node used to build the XML tree.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.search:SearchExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.search:SearchExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.search:SearchExtension:getRequiredFieldNames"><apiName>getRequiredFieldNames</apiName><shortdesc>
		 TODO rename to getter
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 TODO rename to getter
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.search:SearchExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:search</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchExtension:instructions:get"><apiName>instructions</apiName><shortdesc>
		 Use null to remove.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Use <codeph>null</codeph> to remove.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchExtension:items:get"><apiName>items</apiName><shortdesc>
		 List of SearchItem in this query.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 List of SearchItem in this query.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchExtension:fields:set"><apiName>fields</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="write"/><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.search:SearchExtension:xml:set"><apiName>xml</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.session"><apiName>org.igniterealtime.xiff.data.session</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.session:SessionExtension"><apiName>SessionExtension</apiName><shortdesc>
	 Session Establishment
	 	 Most instant messaging and presence applications based on XMPP are
	 implemented via a client-server architecture that requires a client
	 to establish a session on a server in order to engage in the expected
	 instant messaging and presence activities.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Session Establishment
	 	 <p>Most instant messaging and presence applications based on XMPP are
	 implemented via a client-server architecture that requires a client
	 to establish a session on a server in order to engage in the expected
	 instant messaging and presence activities.  However, there are
	 several pre-conditions that MUST be met before a client can establish
     an instant messaging and presence session.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3921#section-3"><linktext>http://tools.ietf.org/html/rfc3921#section-3</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.session:SessionExtension:SessionExtension"><apiName>SessionExtension</apiName><shortdesc>
		 Session Establishment as defined in RFC 3921
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Session Establishment as defined in RFC 3921
		 		 </apiDesc></apiConstructorDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/establishSession"><linktext>org.igniterealtime.xiff.core.XMPPConnection.establishSession</linktext></link></related-links></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.session:SessionExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.session:SessionExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.session:SessionExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>session</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.session:SessionExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:ietf:params:xml:ns:xmpp-session</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.sharedgroups"><apiName>org.igniterealtime.xiff.data.sharedgroups</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension"><apiName>SharedGroupsExtension</apiName><shortdesc>
	 Similar idea to XEP-0140 (http://xmpp.org/extensions/xep-0140.html) which was
	 retracted in favor of XEP-0144 (http://xmpp.org/extensions/xep-0144.html).</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Similar idea to XEP-0140 (http://xmpp.org/extensions/xep-0140.html) which was
	 retracted in favor of XEP-0144 (http://xmpp.org/extensions/xep-0144.html).
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0144.html"><linktext>http://xmpp.org/extensions/xep-0144.html</linktext></link><link href="http://xmpp.org/extensions/xep-0140.html"><linktext>http://xmpp.org/extensions/xep-0140.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:SharedGroupsExtension"><apiName>SharedGroupsExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>sharedgroup</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://www.jivesoftware.org/protocol/sharedgroup</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.si"><apiName>org.igniterealtime.xiff.data.si</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.si:FileTransferExtension"><apiName>FileTransferExtension</apiName><shortdesc>
	 XEP-0096: SI File Transfer.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0096: SI File Transfer.
	 	 <p>To be used within XEP-0095: Stream Initiation</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0096.html"><linktext>http://xmpp.org/extensions/xep-0096.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.si:FileTransferExtension:FileTransferExtension"><apiName>FileTransferExtension</apiName><shortdesc>
		 The size and name attributes MUST be present in the profile.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 The size and name attributes MUST be present in the profile.
		 The other attributes MAY be present.
		 		 <p>There are two possible child elements of the root: 'desc' and 'range'.
		 Both are OPTIONAL.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.si:FileTransferExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.si:FileTransferExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>file</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/si/profile/file-transfer</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:date:get"><apiName>date</apiName><shortdesc>
		 The last modification time of the file.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/></apiValueDef><apiDesc>
		 The last modification time of the file.
		 		 <p>This is specified using the DateTime profile as described in XMPP
		 Date and Time Profiles.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0082.html"><linktext>http://xmpp.org/extensions/xep-0082.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:desc:get"><apiName>desc</apiName><shortdesc>
		 Used to provide a sender-generated description of the file so the receiver
		 can better understand what is being sent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Used to provide a sender-generated description of the file so the receiver
		 can better understand what is being sent. It MUST NOT be sent in the result.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:hasRange:get"><apiName>hasRange</apiName><shortdesc>
		 When range is sent in the offer, it should have no attributes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When <codeph>range</codeph> is sent in the offer, it should have no attributes.
		 This signifies that the sender can do ranged transfers.
		 		 <p>Both <codeph>rangeOffset</codeph> and <codeph>rangeLength</codeph> attributes are OPTIONAL
		 on the <codeph>range</codeph> element. Sending no attributes is synonymous with not sending
		 the <codeph>range</codeph> element.</p>
		 		 <p>When no <codeph>range</codeph> element is sent in the Stream Initiation result, the Sender MUST send
		 the complete file starting at offset 0. More generally, data is sent over the stream
		 byte for byte starting at the offset position for the length specified.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:hash:get"><apiName>hash</apiName><shortdesc>
		 The MD5 sum of the file contents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The MD5 sum of the file contents.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:name:get"><apiName>name</apiName><shortdesc>
		 The name of the file that the Sender wishes to send.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The name of the file that the Sender wishes to send.
		 		 <p>REQUIRED</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:rangeLength:get"><apiName>rangeLength</apiName><shortdesc>
		 Specifies the number of bytes to retrieve starting at offset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Specifies the number of bytes to retrieve starting at offset.
		 This defaults to the length of the file from offset to the end.
		 		 <p>When a Stream Initiation result is sent with the <codeph>range</codeph> element, it uses this property.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:rangeOffset:get"><apiName>rangeOffset</apiName><shortdesc>
		 Specifies the position, in bytes, to start transferring the file data from.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Specifies the position, in bytes, to start transferring the file data from.
		 This defaults to zero (0) if not specified.
		 		 <p>When a Stream Initiation result is sent with the <codeph>range</codeph> element, it uses this property.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:FileTransferExtension:size:get"><apiName>size</apiName><shortdesc>
		 The size, in bytes, of the data to be sent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 The size, in bytes, of the data to be sent.
		 		 <p>REQUIRED</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.si:StreamInitiationExtension"><apiName>StreamInitiationExtension</apiName><shortdesc>
	 XEP-0095: Stream Initiation
	 	 To be used with XEP-0096: SI File Transfer
	 	 The si element is the root element for this
	 protocol.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0095: Stream Initiation
	 	 <p>To be used with XEP-0096: SI File Transfer</p>
	 	 <p>The <b>si</b> element is the root element for this
	 protocol. It is an identifiable container for all the information
	 necessary for negotiation and signalling. It contains attributes
	 for the identifier, intended MIME-type, and profile. The contents
	 convey stream-negotation and profile information.</p>
	 	 <p>When the Sender first negotiates a Stream Initiation, all of the
	 attributes SHOULD be present, and the id" and "profile" MUST be
	 present. The contents MUST contain one profile, in the namespace
	 declared in the "profile" attribute, and the feature negotiation
	 for the stream. The feature negotiation MUST contain at least one
	 option and use the field var "stream-method".</p>
	 	 <p>When the Receiver accepts a Stream Initiation, the
	 <b>si</b> element SHOULD NOT possess any attributes.
	 The selected stream MUST be in the feature negotiation for the
	 stream. There MUST only be one selected stream.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0095.html"><linktext>http://xmpp.org/extensions/xep-0095.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:StreamInitiationExtension"><apiName>StreamInitiationExtension</apiName><shortdesc>
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>si</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/si</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:PROFILE_PREFIX"><apiName>PROFILE_PREFIX</apiName><shortdesc>
		 The SUGGESTED format for profile namespaces is, followed by the profile name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/si/profile/</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The SUGGESTED format for profile namespaces is, followed by the profile name.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/registrar/si-profiles.html"><linktext>http://xmpp.org/registrar/si-profiles.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:id:get"><apiName>id</apiName><shortdesc>
		 The "id" attribute is an opaque identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The "id" attribute is an opaque identifier.
		 		 <p>This attribute MUST be present on type='set',
		 and MUST be a valid string. This SHOULD NOT be sent back on
		 type='result', since the <b>iq</b> "id" attribute
		 provides the only context needed. This value is generated
		 by the Sender, and the same value MUST be used throughout
		 a session when talking to the Receiver.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:mimeType:get"><apiName>mimeType</apiName><shortdesc>
		 The "mime-type" attribute identifies the MIME-type for
		 the data across the stream.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The "mime-type" attribute identifies the MIME-type for
		 the data across the stream.
		 		 <p>This attribute MUST be a valid MIME-type as registered
		 with the Internet Assigned Numbers Authority (IANA).</p>
		 		 <p>During negotiation, this attribute SHOULD be present, and is
		 otherwise not required. If not included during negotiation, its value
		 is assumed to be "application/octet-stream".</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://www.iana.org/assignments/media-types"><linktext>http://www.iana.org/assignments/media-types</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:profile:get"><apiName>profile</apiName><shortdesc>
		 The "profile" attribute defines the SI profile in use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The "profile" attribute defines the SI profile in use.
		 		 <p>This value MUST be present during negotiation,
		 and is the namespace of the profile to use.</p>
		 		 <p>TODO: Check validity against PROFILE_PREFIX.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.stream"><apiName>org.igniterealtime.xiff.data.stream</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBCloseExtension"><apiName>IBBCloseExtension</apiName><shortdesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 Close the communication once transfer is complete.
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.stream:IBBExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Close the communication once transfer is complete.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0047.html"><linktext>http://xmpp.org/extensions/xep-0047.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBCloseExtension:IBBCloseExtension"><apiName>IBBCloseExtension</apiName><shortdesc>
		 		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.stream:IBBCloseExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.stream:IBBCloseExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>close</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBOpenExtension"><apiName>IBBOpenExtension</apiName><shortdesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 Open the communication
	 	 It is RECOMMENDED to send IBB data using IQ stanzas
	 instead of message stanzas because IQ stanzas provide
	 feedback to the sender regarding delivery to the recipient).
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.stream:IBBExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Open the communication</p>
	 	 <p>It is RECOMMENDED to send IBB data using IQ stanzas
	 instead of message stanzas because IQ stanzas provide
	 feedback to the sender regarding delivery to the recipient).</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0047.html"><linktext>http://xmpp.org/extensions/xep-0047.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBOpenExtension:IBBOpenExtension"><apiName>IBBOpenExtension</apiName><shortdesc>
		 The recommended values for blockSize (4096) and
		 stanza ("iq") are set by default.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 The recommended values for <codeph>blockSize</codeph> (4096) and
		 <codeph>stanza</codeph> ("iq") are set by default.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.stream:IBBOpenExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.stream:IBBOpenExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>open</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.stream:IBBOpenExtension:blockSize:get"><apiName>blockSize</apiName><shortdesc>
		 The REQUIRED 'block-size' attribute defines the maximum
		 size in bytes of each data chunk (which MUST NOT be
		 greater than 65535).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/><apiDefaultValue>4096
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The REQUIRED 'block-size' attribute defines the maximum
		 size in bytes of each data chunk (which MUST NOT be
		 greater than 65535).
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.stream:IBBOpenExtension:stanza:get"><apiName>stanza</apiName><shortdesc>
		 The OPTIONAL 'stanza' attribute defines whether the
		 data will be sent using IQ stanzas or
		 Message stanzas.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/><apiDefaultValue>iq
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The OPTIONAL 'stanza' attribute defines whether the
		 data will be sent using <codeph>IQ</codeph> stanzas or
		 <codeph>Message</codeph> stanzas.
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBDataExtension"><apiName>IBBDataExtension</apiName><shortdesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 Each chunk of data is contained in a data
	 element qualified by the 'http://jabber.org/protocol/ibb'
	 namespace.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.stream:IBBExtension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Each chunk of data is contained in a <b>data</b>
	 element qualified by the 'http://jabber.org/protocol/ibb'
	 namespace. The data element SHOULD be sent in an IQ stanza
	 to enable proper tracking and throttling, but instead MAY be
	 sent in a message stanza. The data to be sent, prior to
	 base64-encoding and prior to any wrapping in XML, MUST NOT
	 be larger than the 'block-size' determined in the bytestream
	 negotiation.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0047.html"><linktext>http://xmpp.org/extensions/xep-0047.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBDataExtension:IBBDataExtension"><apiName>IBBDataExtension</apiName><shortdesc>
		 		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.stream:IBBDataExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.stream:IBBDataExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>data</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.stream:IBBDataExtension:data:get"><apiName>data</apiName><shortdesc>
		 Base64 encoded data
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Base64 encoded data
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.stream:IBBDataExtension:seq:get"><apiName>seq</apiName><shortdesc>
		 Required property 'seq'.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 Required property 'seq'.
		 		 <p>This is a 16-bit unsigned
		 integer that acts as a counter for data chunks sent
		 in a particular direction within this session.
		 The 'seq' value starts at 0 (zero) for each sender
		 and MUST be incremented for each packet sent by that
		 entity. Thus, the second chunk sent has a 'seq' value
		 of 1, the third chunk has a 'seq' value of 2, and so
		 on. The counter loops at maximum, so that after value
		 65535 (215 - 1) the 'seq' MUST start again at 0.</p>
		 		 <p>This value can be safely incremented, limit checking
		 and resetting is imlemented within the setter.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBExtension"><apiName>IBBExtension</apiName><shortdesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 Base class of all IBB classes that are using same namespace.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Base class of all IBB classes that are using same namespace.
	 Do not use this directly.</p>
	 	 <p>Generally, in-band bytestreams SHOULD be used only as a
	 last resort. SOCKS5 Bytestreams will almost always be preferable,
	 but are not implemented in XIFF...</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0047.html"><linktext>http://xmpp.org/extensions/xep-0047.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBExtension:IBBExtension"><apiName>IBBExtension</apiName><shortdesc>
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.stream:IBBExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.stream:IBBExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/ibb</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.stream:IBBExtension:sid:get"><apiName>sid</apiName><shortdesc>
		 The REQUIRED 'sid' attribute defines a unique session
		 ID for this IBB session (which MUST match the NMTOKEN
		 datatype).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The REQUIRED 'sid' attribute defines a unique session
		 ID for this IBB session (which MUST match the NMTOKEN
		 datatype).
		 		 <p>All of the extending classes require this property
		 to be set.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.vcard"><apiName>org.igniterealtime.xiff.data.vcard</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.vcard:VCardExtension"><apiName>VCardExtension</apiName><shortdesc>
	 XEP-0054: vcard-temp
	 	 The basic functionality is for a user to store and retrieve an XML
	 representation of his or her vCard using the data storage capabilities
	 native to all existing Jabber server implementations.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0054: vcard-temp
	 	 <p>The basic functionality is for a user to store and retrieve an XML
	 representation of his or her vCard using the data storage capabilities
	 native to all existing Jabber server implementations. This is done
	 by by sending an <b>iq</b> of type "set" (storage) or "get"
	 (retrieval) to one's Jabber server containing a <b>vCard</b>
	 child scoped by the 'vcard-temp' namespace, with the <b>vCard</b>
	 element containing the actual vCard-XML elements as defined by the
	 vCard-XML DTD. Other users may then view one's vCard information.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0054.html"><linktext>http://xmpp.org/extensions/xep-0054.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.vcard:VCardExtension:VCardExtension"><apiName>VCardExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.vcard:VCardExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.vcard:VCardExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.vcard:VCardExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vCard</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.vcard:VCardExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>vcard-temp</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.version"><apiName>org.igniterealtime.xiff.data.version</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension"><apiName>SoftwareVersionExtension</apiName><shortdesc>
	 XEP-0092: Software Version
	 	 The 'jabber:iq:version' namespace provides a standard way for Jabber entities
	 to exchange information about the software version used by the entities.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0092: Software Version
	 	 <p>The 'jabber:iq:version' namespace provides a standard way for Jabber entities
	 to exchange information about the software version used by the entities.
	 The information is communicated in a request/response pair using an <codeph>iq</codeph>
	 element that contains a <codeph>query</codeph> scoped by the 'jabber:iq:version' namespace.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0092.html"><linktext>http://xmpp.org/extensions/xep-0092.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:SoftwareVersionExtension"><apiName>SoftwareVersionExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>query</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:iq:version</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:name:get"><apiName>name</apiName><shortdesc>
		 The natural-language name of the software.</shortdesc><prolog><asCustoms><exampleText>XIFF
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The natural-language name of the software.
		 This element is REQUIRED in a result.
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:os:get"><apiName>os</apiName><shortdesc>
		 The operating system of the queried entity.</shortdesc><prolog><asCustoms><exampleText>Windows OS 3.11
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The operating system of the queried entity.
		 This element is OPTIONAL in a result, mind the
		 Security Considerations.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0092.html#security"><linktext>http://xmpp.org/extensions/xep-0092.html#security</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:version:get"><apiName>version</apiName><shortdesc>
		 The specific version of the software.</shortdesc><prolog><asCustoms><exampleText>3.1.0
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The specific version of the software.
		 This element is REQUIRED in a result.
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.whiteboard"><apiName>org.igniterealtime.xiff.data.whiteboard</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:Stroke"><apiName>Stroke</apiName><shortdesc>
	 A helper class that abstracts the serialization of strokes and
	 provides an interface to access the properties
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A helper class that abstracts the serialization of strokes and
	 provides an interface to access the properties
	 	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:Stroke:Stroke"><apiName>Stroke</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam><apiParam><apiItemName>opacity</apiItemName><apiType value="Number"/><apiData>100</apiData></apiParam><apiParam><apiItemName>thickness</apiItemName><apiType value="Number"/><apiData>unknown</apiData></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.whiteboard:Stroke:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>stroke</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Stroke:color:get"><apiName>color</apiName><shortdesc>
		 The value of the RGB color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 The value of the RGB color.  This is the same color format used by
		 Graphics.lineStyle
		 		 <p>XML attribute "stroke"</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Stroke:opacity:get"><apiName>opacity</apiName><shortdesc>
		 The opacity of the stroke, in percent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The opacity of the stroke, in percent. 100 is solid, 0 is transparent.
		 This property can be used as the alpha parameter of Graphics.lineStyle
		 		 <p>XML attribute "stroke-opacity"</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Stroke:thickness:get"><apiName>thickness</apiName><shortdesc>
		 The thickness of the stroke in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The thickness of the stroke in pixels.  This is in a format used by
		 Graphics.lineStyle
		 		 <p>XML attribute "stroke-width"</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:Fill"><apiName>Fill</apiName><shortdesc>
	 A helper class that abstracts the serialization of fills and
	 provides an interface to access the properties providing defaults
	 if no properties were defined in the XML.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A helper class that abstracts the serialization of fills and
	 provides an interface to access the properties providing defaults
	 if no properties were defined in the XML.
	 	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:Fill:Fill"><apiName>Fill</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>opacity</apiItemName><apiType value="Number"/><apiData>100</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data.whiteboard:Fill:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>fill</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Fill:color:get"><apiName>color</apiName><shortdesc>
		 The value of the RGB color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 The value of the RGB color.  This is the same color format used by
		 MovieClip.lineStyle
		 		 </apiDesc></apiValueDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Fill:opacity:get"><apiName>opacity</apiName><shortdesc>
		 The opacity of the fill, in percent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The opacity of the fill, in percent. 100 is solid, 0 is transparent.
		 This property can be used as the alpha parameter of MovieClip.lineStyle
		 		 </apiDesc></apiValueDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension"><apiName>WhiteboardExtension</apiName><shortdesc>
	 A message extension for whitboard exchange.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A message extension for whitboard exchange. This class is the base class
	 for other extension classes such as Path.
	 	 All child whiteboard objects are contained and serialized by this class
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0113.html"><linktext>http://xmpp.org/extensions/xep-0113.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:WhiteboardExtension"><apiName>WhiteboardExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The element name
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "x".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The namespace
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the WhiteboardExtension is "xiff:wb".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>x</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>xiff:wb</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:paths:get"><apiName>paths</apiName><shortdesc>
	     The paths available in this whiteboard message
	     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
	     The paths available in this whiteboard message
	     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:Path"><apiName>Path</apiName><shortdesc>
	 A message extension for whiteboard exchange.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A message extension for whiteboard exchange. This class is the base class
	 for other extension classes such as Path
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:Path:Path"><apiName>Path</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:addPoints"><apiName>addPoints</apiName><shortdesc>
	     Another interface to add segments to this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the segment object created from the parameters with the rounded values
	     from being modified in addSegment
	     </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>from_x</apiItemName><apiType value="Number"/><apiDesc>the start x coordinate
	     </apiDesc></apiParam><apiParam><apiItemName>from_y</apiItemName><apiType value="Number"/><apiDesc>the start y coordinate
	     </apiDesc></apiParam><apiParam><apiItemName>to_x</apiItemName><apiType value="Number"/><apiDesc>the destination x coordinate
	     </apiDesc></apiParam><apiParam><apiItemName>to_y</apiItemName><apiType value="Number"/><apiDesc>the destination y coordinate
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
	     Another interface to add segments to this extension.  Instead of passing
	     an object, you can pass parameters that will be converted into a segment
	     and passed to addSegment
	     	     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:addSegment"><apiName>addSegment</apiName><shortdesc>
	     Adds a start point and end point to this path.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>the segment parameter with the rounded values
	     </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>seg</apiItemName><apiType value="Object"/><apiDesc>An object containing the properties "from" and "to" which
	     are objects with the properties "x" and "y".  An example would
	     be { from: { x: 100, y: 200 }, to: { x: 200, y: 300 } }
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
	     Adds a start point and end point to this path.  The points will be rounded
	     to the nearest integer to save serialization space.  10.0000001 takes
	     4 times as much spaces as 10
	     	     </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.whiteboard.xml#Path/addPoints"><linktext>addPoints</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:serializeSegments"><apiName>serializeSegments</apiName><shortdesc>
		 Creates the compact form of the segments
		 in the fomrmat defined by SVG
		 Example: M100 200L14 -15 L 125 100L150 200 300 400M10 20L30 40 50 60 z
	     		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>String containging the compact version
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Creates the compact form of the segments
		 in the fomrmat defined by SVG
		 Example: M100 200L14 -15 L 125 100L150 200 300 400M10 20L30 40 50 60 z
	     		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:serialize"><apiName>serialize</apiName><shortdesc>
		 TODO: make as set xml
		 		 Serializes the Path data to XML for sending.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An indicator as to whether serialization was successful
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiDesc>The parent node that this extension should be serialized into
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 TODO: make as set xml
		 		 Serializes the Path data to XML for sending.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.whiteboard:Path:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>path</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Path:fill:get"><apiName>fill</apiName><shortdesc>
	     The Fill object that contains the properties describing the fill of this
	     path
	     	     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.data.whiteboard:Fill</apiValueClassifier></apiValueDef><apiDesc>
	     The Fill object that contains the properties describing the fill of this
	     path
	     	     </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.whiteboard.xml#Fill"><linktext>org.igniterealtime.xiff.data.whiteboard.Fill</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Path:segments:get"><apiName>segments</apiName><shortdesc>
	     The read-only list of start and end points encoded as an array of objects with the
	     format { from: { x: ###, y: ### }, to: { x: ###, y: ### } }
	     	     You should not modify this list.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
	     The read-only list of start and end points encoded as an array of objects with the
	     format { from: { x: ###, y: ### }, to: { x: ###, y: ### } }
	     	     You should not modify this list.  Segments should be added with addSegment
	     	     </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.whiteboard.xml#Path/addSegment"><linktext>addSegment</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Path:stroke:get"><apiName>stroke</apiName><shortdesc>
	     The Stroke object that contains the properties describing the stroke of this
	     path
	     	     </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.data.whiteboard:Stroke</apiValueClassifier></apiValueDef><apiDesc>
	     The Stroke object that contains the properties describing the stroke of this
	     path
	     	     </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.whiteboard.xml#Stroke"><linktext>org.igniterealtime.xiff.data.whiteboard.Stroke</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data.whiteboard:Path:xml:set"><apiName>xml</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.xhtml"><apiName>org.igniterealtime.xiff.data.xhtml</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension"><apiName>XHTMLExtension</apiName><shortdesc>
         XEP-0071: XHTML-IM
                  This class provides an extension for XHTML body text in messages.
	 html --&gt; http://jabber.org/protocol/xhtml-im
	 body --&gt; http://www.w3.org/1999/xhtml
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
         XEP-0071: XHTML-IM
                  <p>This class provides an extension for XHTML body text in messages.</p>
	 <p>html --&gt; http://jabber.org/protocol/xhtml-im</p>
	 <p>body --&gt; http://www.w3.org/1999/xhtml</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0071.html"><linktext>http://xmpp.org/extensions/xep-0071.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:XHTMLExtension"><apiName>XHTMLExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>The parent node for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The element name
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "html".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The namespace
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the XHTMLExtension is "http://www.w3.org/1999/xhtml".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:ELEMENT_NAME"><apiName>ELEMENT_NAME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>html</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:NS"><apiName>NS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/xhtml-im</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:body:get"><apiName>body</apiName><shortdesc>
		 The XHTML body text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The XHTML body text. Valid XHTML is REQUIRED. Because XMPP operates using
		 valid XML, standard HTML, which is not necessarily XML-parser compliant, will
		 not work.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data"><apiName>org.igniterealtime.xiff.data</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.data:IMessage"><apiName>IMessage</apiName><shortdesc>
	 Interface for Message
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Interface for Message
	 </apiDesc></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.data:IMessage:org.igniterealtime.xiff.data:IMessage:body:get"><apiName>body</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IMessage:org.igniterealtime.xiff.data:IMessage:htmlBody:get"><apiName>htmlBody</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IMessage:org.igniterealtime.xiff.data:IMessage:state:get"><apiName>state</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IMessage:org.igniterealtime.xiff.data:IMessage:subject:get"><apiName>subject</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IMessage:org.igniterealtime.xiff.data:IMessage:thread:get"><apiName>thread</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IMessage:org.igniterealtime.xiff.data:IMessage:time:get"><apiName>time</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IIQ"><apiName>IIQ</apiName><shortdesc>
	 Interface for IQ
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Interface for IQ
	 </apiDesc></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.data:IIQ:org.igniterealtime.xiff.data:IIQ:callback:get"><apiName>callback</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IIQ:org.igniterealtime.xiff.data:IIQ:errorCallback:get"><apiName>errorCallback</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:ExtensionClassRegistry"><apiName>ExtensionClassRegistry</apiName><shortdesc>
	 This is a static class that contains class constructors for all
	 extensions that could come from the network.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This is a static class that contains class constructors for all
	 extensions that could come from the network.
	 </apiDesc></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:getNamespaces"><apiName>getNamespaces</apiName><shortdesc>
		 Get a list of namespaces of the currently enabled extensions.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 Get a list of namespaces of the currently enabled extensions.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:lookup"><apiName>lookup</apiName><shortdesc>
		 Find the extension with the given NS and ELEMENT_NAME if availale in the registery.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc/><apiType value="Class"/></apiReturn><apiParam><apiItemName>ns</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional ELEMENT_NAME, used if there are several extensions with the same NS
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Find the extension with the given NS and ELEMENT_NAME if availale in the registery.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:register"><apiName>register</apiName><shortdesc>
		 Registers the given extension with the extension registry for it to be used,
		 in case incoming data matches its ELEMENT_NAME and NS.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>In case the Extension was already added or it was not proper type, returns false.
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>extensionClass</apiItemName><apiType value="Class"/></apiParam></apiOperationDef><apiDesc>
		 Registers the given extension with the extension registry for it to be used,
		 in case incoming data matches its ELEMENT_NAME and NS.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:remove"><apiName>remove</apiName><shortdesc>
		 Remove the given extension from the registery.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>extensionClass</apiItemName><apiType value="Class"/></apiParam></apiOperationDef><apiDesc>
		 Remove the given extension from the registery.
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:Message"><apiName>Message</apiName><shortdesc>
	 Message, nuff said.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IMessage</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Message, nuff said.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3921#section-2.1.1"><linktext>http://tools.ietf.org/html/rfc3921#section-2.1.1</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data:Message:Message"><apiName>Message</apiName><shortdesc>
		 A class for abstraction and encapsulation of message data.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>The JID of the message recipient
		 </apiDesc></apiParam><apiParam><apiItemName>msgID</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The JID of the message sender - the server should report an error if this is falsified
		 </apiDesc></apiParam><apiParam><apiItemName>msgBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message ID
		 </apiDesc></apiParam><apiParam><apiItemName>msgHTMLBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body in plain-text format
		 </apiDesc></apiParam><apiParam><apiItemName>msgType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body in XHTML format
		 </apiDesc></apiParam><apiParam><apiItemName>msgSubject</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message type
		 </apiDesc></apiParam><apiParam><apiItemName>chatState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>(Optional) The message subject
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 A class for abstraction and encapsulation of message data.
		 		 <p>The <b>message</b> stanza kind can be seen as a "push" mechanism whereby
		 one entity pushes information to another entity, similar to the
		 communications that occur in a system such as email.  All message
		 stanzas SHOULD possess a 'to' attribute that specifies the intended
		 recipient of the message; upon receiving such a stanza, a server
		 SHOULD route or deliver it to the intended recipient (see Server
		 Rules for Handling XML Stanzas (Section 10) for general routing and
		 delivery rules related to XML stanzas).</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data:Message:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID for the stanza.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>The generated ID
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The prefix for the ID to be generated
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data:Message:NS_ATTENTION"><apiName>NS_ATTENTION</apiName><shortdesc>
		 The namespace used in the message delivery node.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:xmpp:attention:0</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The namespace used in the message delivery node.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0224.html"><linktext>http://xmpp.org/extensions/xep-0224.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:NS_CORRECTION"><apiName>NS_CORRECTION</apiName><shortdesc>
		 The namespace used in the XEP-0308: Last Message Correction.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:xmpp:message-correct:0</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The namespace used in the XEP-0308: Last Message Correction.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0308.html"><linktext>http://xmpp.org/extensions/xep-0308.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:NS_RECEIPT"><apiName>NS_RECEIPT</apiName><shortdesc>
		 The namespace used in the message delivery node.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:xmpp:receipts</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The namespace used in the message delivery node.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0184.html"><linktext>http://xmpp.org/extensions/xep-0184.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:NS_STATE"><apiName>NS_STATE</apiName><shortdesc>
		 The name space used in the Chat state node.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://jabber.org/protocol/chatstates</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The name space used in the Chat state node.
		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0085.html"><linktext>http://xmpp.org/extensions/xep-0085.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:RECEIPT_RECEIVED"><apiName>RECEIPT_RECEIVED</apiName><shortdesc>
		 Included by a receiving entity that wishes to inform the
		 sending entity that the message has been received.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>received</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Included by a receiving entity that wishes to inform the
		 sending entity that the message has been received.
		 		 <p>The <b>received</b> element SHOULD be the only child of
		 the <b>message</b> stanza and MUST mirror the 'id' of the sent message.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0184.html"><linktext>http://xmpp.org/extensions/xep-0184.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:RECEIPT_REQUEST"><apiName>RECEIPT_REQUEST</apiName><shortdesc>
		 Included by a sending entity that wishes to know if
		 the message has been received.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>request</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Included by a sending entity that wishes to know if
		 the message has been received.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0184.html"><linktext>http://xmpp.org/extensions/xep-0184.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:STATE_ACTIVE"><apiName>STATE_ACTIVE</apiName><shortdesc>
		 User is actively participating in the chat session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>active</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 User is actively participating in the chat session.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:STATE_COMPOSING"><apiName>STATE_COMPOSING</apiName><shortdesc>
		 User is composing a message.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>composing</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 User is composing a message.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:STATE_GONE"><apiName>STATE_GONE</apiName><shortdesc>
		 User has effectively ended their participation in the chat session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>gone</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 User has effectively ended their participation in the chat session.
		 Suggested delay after last activity some 10 minutes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:STATE_INACTIVE"><apiName>STATE_INACTIVE</apiName><shortdesc>
		 User has not been actively participating in the chat session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>inactive</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 User has not been actively participating in the chat session.
		 Suggested delay after last activity some 2 minutes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:STATE_PAUSED"><apiName>STATE_PAUSED</apiName><shortdesc>
		 User had been composing but now has stopped.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>paused</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 User had been composing but now has stopped.
		 Suggested delay after last activity some 30 seconds.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:TYPE_CHAT"><apiName>TYPE_CHAT</apiName><shortdesc>
		 The message is sent in the context of a one-to-one chat
		 session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>chat</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The message is sent in the context of a one-to-one chat
		 session. Typically a receiving client will present message of
		 type "chat" in an interface that enables one-to-one chat between
		 the two parties, including an appropriate conversation history.
		 Detailed recommendations regarding one-to-one chat sessions are
		 provided under Section 5.1. of RFC 3921 (draft version).
		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/draft-ietf-xmpp-3921bis-00#section-5.1"><linktext>http://tools.ietf.org/html/draft-ietf-xmpp-3921bis-00#section-5.1</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:TYPE_ERROR"><apiName>TYPE_ERROR</apiName><shortdesc>
		 The message is generated by an entity that experiences an
		 error in processing a message received from another entity (for
		 details regarding stanza error syntax, refer to [xmpp-core]).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The message is generated by an entity that experiences an
		 error in processing a message received from another entity (for
		 details regarding stanza error syntax, refer to [xmpp-core]).
		 A client that receives a message of type "error" SHOULD present an
		 appropriate interface informing the sender of the nature of the error.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:TYPE_GROUPCHAT"><apiName>TYPE_GROUPCHAT</apiName><shortdesc>
		 The message is sent in the context of a multi-user
		 chat environment (similar to that of [IRC]).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>groupchat</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The message is sent in the context of a multi-user
		 chat environment (similar to that of [IRC]). Typically a
		 receiving client will present a message of type "groupchat" in an
		 interface that enables many-to-many chat between the parties,
		 including a roster of parties in the chatroom and an appropriate
		 conversation history. For detailed information about XMPP-based
		 groupchat, refer to [XEP-0045].
		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0045.html"><linktext>http://xmpp.org/extensions/xep-0045.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:TYPE_HEADLINE"><apiName>TYPE_HEADLINE</apiName><shortdesc>
		 The message provides an alert, a notification, or
		 other information to which no reply is expected (e.g., news
		 headlines, sports updates, near-real-time market data, and
		 syndicated content).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>headline</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The message provides an alert, a notification, or
		 other information to which no reply is expected (e.g., news
		 headlines, sports updates, near-real-time market data, and
		 syndicated content). Because no reply to the message is expected,
		 typically a receiving client will present a message of type
		 "headline" in an interface that appropriately differentiates the
		 message from standalone messages, chat messages, or groupchat
		 messages (e.g., by not providing the recipient with the ability to
		 reply). The receiving server SHOULD deliver the message to all of
		 the recipient’s available resources.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:TYPE_NORMAL"><apiName>TYPE_NORMAL</apiName><shortdesc>
		 The message is a standalone message that is sent outside
		 the context of a one-to-one conversation or groupchat, and to
		 which it is expected that the recipient will reply.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>normal</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The message is a standalone message that is sent outside
		 the context of a one-to-one conversation or groupchat, and to
		 which it is expected that the recipient will reply. Typically a
		 receiving client will present a message of type "normal" in an
		 interface that enables the recipient to reply, but without a
		 conversation history. The default value of the ’type’ attribute
		 is "normal".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:attention:get"><apiName>attention</apiName><shortdesc>
		 Messages containing an attention extension SHOULD use the headline message
		 type to avoid offline storage.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Messages containing an attention extension SHOULD use the headline message
		 type to avoid offline storage. In case the <codeph>attention</codeph> property is used,
		 <codeph>type</codeph> is set to "headline" automatically.
		 		 <p>However there is no check for the type when removing the attention, by setting it to false.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0224.html"><linktext>http://xmpp.org/extensions/xep-0224.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:body:get"><apiName>body</apiName><shortdesc>
		 The message body in plain-text format.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The message body in plain-text format. If a client cannot render HTML-formatted
		 text, this text is typically used instead.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:correctionId:get"><apiName>correctionId</apiName><shortdesc>
		 Message ID of the message that is to be corrected.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Message ID of the message that is to be corrected.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0308.html"><linktext>http://xmpp.org/extensions/xep-0308.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:correction:get"><apiName>correction</apiName><shortdesc>
		 When sending a message, people often introduce typing errors and send a follow-up message to correct them.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When sending a message, people often introduce typing errors and send a follow-up message to correct them.
		 This property allows the sending client to flag the second message as correcting the first.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0308.html"><linktext>http://xmpp.org/extensions/xep-0308.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:htmlBody:get"><apiName>htmlBody</apiName><shortdesc>
		 The message body in XHTML format.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The message body in XHTML format. Internally, this uses the XHTML data extension.
		 		 TODO: Use extension registery to solve if the proper extension is enabled...
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0071.html"><linktext>http://xmpp.org/extensions/xep-0071.html</linktext></link><link href="org.igniterealtime.xiff.data.xhtml.xml#XHTMLExtension"><linktext>org.igniterealtime.xiff.data.xhtml.XHTMLExtension</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:idGenerator:get"><apiName>idGenerator</apiName><shortdesc>
		 The ID generator for this stanza type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data.id:IIDGenerator</apiValueClassifier></apiValueDef><apiDesc>
		 The ID generator for this stanza type. ID generators must implement
		 the IIDGenerator interface. The XIFF library comes with a few default
		 ID generators that have already been implemented (see org.igniterealtime.xiff.data.id..
		 		 Setting the ID generator by stanza type is useful if you'd like to use
		 different ID generation schemes for each type. For instance, messages could
		 use the incremental ID generation scheme provided by the IncrementalGenerator class, while
		 IQs could use the shared object ID generation scheme provided by the SOIncrementalGenerator class.
		 		 </apiDesc><example>The following sets the ID generator for the Message stanza type to an IncrementalGenerator
		 found in org.igniterealtime.xiff.data.id.IncrementalGenerator:
		 <pre>Message.idGenerator = new IncrementalGenerator();</pre>
		 </example></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:receiptId:get"><apiName>receiptId</apiName><shortdesc>
		 Message ID of the message that had receipt request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Message ID of the message that had receipt request.
		 Can be set only when the 'receipt' is Message.RECEIPT_RECEIVED.
		 		 <p>While sending 'received', this property must be set to
		 the message id that contained the 'request'.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0184.html"><linktext>http://xmpp.org/extensions/xep-0184.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:receipt:get"><apiName>receipt</apiName><shortdesc>
		 XEP-0184: Message Delivery Receipts
		 		 This XMPP protocol extension for message delivery receipts,
		 whereby the sender of a message can request notification that the
		 message has been delivered to a client controlled by the intended
		 recipient.
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 XEP-0184: Message Delivery Receipts
		 		 <p>This XMPP protocol extension for message delivery receipts,
		 whereby the sender of a message can request notification that the
		 message has been delivered to a client controlled by the intended
		 recipient.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0184.html"><linktext>http://xmpp.org/extensions/xep-0184.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:state:get"><apiName>state</apiName><shortdesc>
		 The chat state if any.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The chat state if any. Possible values are:
		 <ul>
		 <li>Message.STATE_ACTIVE</li>
		 <li>Message.STATE_COMPOSING</li>
		 <li>Message.STATE_PAUSED</li>
		 <li>Message.STATE_INACTIVE</li>
		 <li>Message.STATE_GONE</li>
		 </ul>
		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 <p>TODO: XEP states that this protocol SHOULD NOT be used
		 with message types other than "chat" or "groupchat".</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0085.html"><linktext>http://xmpp.org/extensions/xep-0085.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:subject:get"><apiName>subject</apiName><shortdesc>
		 The message subject.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The message subject. Typically chat and groupchat-type messages do not use
		 subjects. Rather, this is reserved for normal and headline-type messages.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:thread:get"><apiName>thread</apiName><shortdesc>
		 The message thread ID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The message thread ID. Threading is used to group messages of the same discussion together.
		 The library does not perform message grouping, rather it is up to any client authors to
		 properly perform this task.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Message:time:get"><apiName>time</apiName><shortdesc>
		 Time of the message in case of a delay.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef><apiDesc>
		 Time of the message in case of a delay. Used only for messages
		 which were sent while user was offline.
		 		 <p>Can be set only via XML as the value should come from the server.</p>
		 		 <p>There are two ways that might be possible coming from the server,
		 XEP-0203 or XEP-0091, of which the latter is legacy.</p>
		 		 <p>XEP-0203: <codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph></p>
		 <p>XEP-0091: <codeph>CCYYMMDDThh:mm:ss</codeph></p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0203.html"><linktext>http://xmpp.org/extensions/xep-0203.html</linktext></link><link href="http://xmpp.org/extensions/xep-0091.html"><linktext>http://xmpp.org/extensions/xep-0091.html</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IQ"><apiName>IQ</apiName><shortdesc>
	 A class for abstraction and encapsulation of IQ (info-query) data.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IIQ</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A class for abstraction and encapsulation of IQ (info-query) data.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-9.2.3"><linktext>http://tools.ietf.org/html/rfc3920#section-9.2.3</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data:IQ:IQ"><apiName>IQ</apiName><shortdesc>
		 A class for abstraction and encapsulation of IQ (info-query) data.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>The JID of the IQ recipient
		 </apiDesc></apiParam><apiParam><apiItemName>iqType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The type of the IQ - there are static variables declared for each type
		 </apiDesc></apiParam><apiParam><apiItemName>iqID</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The unique ID of the IQ, one of TYPE_constants
		 </apiDesc></apiParam><apiParam><apiItemName>iqCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The function to be called when the server responds to the IQ
		 </apiDesc></apiParam><apiParam><apiItemName>iqErrorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The function to be called when there is an error
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 A class for abstraction and encapsulation of IQ (info-query) data.
		 		 <p>Info/Query, or <b>IQ</b>, is a request-response mechanism, similar in some
		 ways to [HTTP].  The semantics of IQ enable an entity to make a
		 request of, and receive a response from, another entity.  The data
		 content of the request and response is defined by the namespace
		 declaration of a direct child element of the IQ element, and the
		 interaction is tracked by the requesting entity through use of the
		 'id' attribute.  Thus, IQ interactions follow a common pattern of
		 structured data exchange such as get/result or set/result (although
		 an error may be returned in reply to a request if appropriate):</p>
		 <pre>
		    Requesting                 Responding
		      Entity                     Entity
		    ----------                 ----------
		        |                           |
		        | &lt;iq type='get' id='1'&gt;    |
		        | ------------------------&gt; |
		        |                           |
		        | &lt;iq type='result' id='1'&gt; |
		        | &lt;------------------------ |
		        |                           |
		        | &lt;iq type='set' id='2'&gt;    |
		        | ------------------------&gt; |
		        |                           |
		        | &lt;iq type='error' id='2'&gt;  |
		        | &lt;------------------------ |
		        |                           |
	     </pre>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data:IQ:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID for the stanza.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>The generated ID
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The prefix for the ID to be generated
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data:IQ:TYPE_ERROR"><apiName>TYPE_ERROR</apiName><shortdesc>
		 The stanza reports an error that has occurred
		 regarding processing or delivery of a previously-sent get or
		 set request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The stanza reports an error that has occurred
		 regarding processing or delivery of a previously-sent get or
		 set request.
		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/draft-ietf-xmpp-3920bis-00#section-9.3"><linktext>http://tools.ietf.org/html/draft-ietf-xmpp-3920bis-00#section-9.3</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:IQ:TYPE_GET"><apiName>TYPE_GET</apiName><shortdesc>
		 The stanza requests information, inquires about what
		 data is needed in order to complete further operations, etc.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>get</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The stanza requests information, inquires about what
		 data is needed in order to complete further operations, etc.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IQ:TYPE_RESULT"><apiName>TYPE_RESULT</apiName><shortdesc>
		 The stanza is a response to a successful get or set request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>result</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The stanza is a response to a successful get or set request.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IQ:TYPE_SET"><apiName>TYPE_SET</apiName><shortdesc>
		 The stanza provides data that is needed for an
		 operation to be completed, sets new values, replaces existing
		 values, etc.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>set</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The stanza provides data that is needed for an
		 operation to be completed, sets new values, replaces existing
		 values, etc.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IQ:callback:get"><apiName>callback</apiName><shortdesc>
		 The function that will be called when an IQ result
		 is received with the same ID as one you send.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The function that will be called when an IQ result
		 is received with the same ID as one you send.
		 		 <p>Callback functions take one parameter which will be the IQ instance
		 received from the server.</p>
		 		 <p>This isn't a required property, but is useful if you
		 need to respond to server responses to an IQ.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IQ:errorCallback:get"><apiName>errorCallback</apiName><shortdesc>
		 The function that will be called when an IQ error
		 is received with the same ID as one you send.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The function that will be called when an IQ error
		 is received with the same ID as one you send.
		 		 <p>Callback functions take one parameter which will be the IQ instance
		 received from the server.</p>
		 		 <p>This isn't a required property, but is useful if you
		 need to respond to server responses to an IQ.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IQ:idGenerator:get"><apiName>idGenerator</apiName><shortdesc>
		 The ID generator for this stanza type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data.id:IIDGenerator</apiValueClassifier></apiValueDef><apiDesc>
		 The ID generator for this stanza type. ID generators must implement
		 the IIDGenerator interface. The XIFF library comes with a few default
		 ID generators that have already been implemented (see org.igniterealtime.xiff.data.id..
		 		 Setting the ID generator by stanza type is useful if you'd like to use
		 different ID generation schemes for each type. For instance, messages could
		 use the incremental ID generation scheme provided by the IncrementalGenerator class, while
		 IQs could use the shared object ID generation scheme provided by the SOIncrementalGenerator class.
		 		 </apiDesc><example>The following sets the ID generator for the Message stanza type to an IncrementalGenerator
		 found in org.igniterealtime.xiff.data.id.IncrementalGenerator:
		 <pre>Message.idGenerator = new IncrementalGenerator();</pre>
		 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:XMPPStanza"><apiName>XMPPStanza</apiName><shortdesc>
	 The base class for all XMPP stanza data classes.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The base class for all XMPP stanza data classes.
	 	 <p>Three types can exist:</p>
	 <ul>
	 <li>message</li>
	 <li>presence</li>
	 <li>iq</li>
	 </ul>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/rfcs/rfc3920.html#stanzas"><linktext>http://xmpp.org/rfcs/rfc3920.html#stanzas</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-9"><linktext>http://tools.ietf.org/html/rfc3920#section-9</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data:XMPPStanza:XMPPStanza"><apiName>XMPPStanza</apiName><shortdesc>
		 The following four first attributes are common to message, presence, and IQ stanzas.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>to
		 </apiDesc></apiParam><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>	from
		 </apiDesc></apiParam><apiParam><apiItemName>theType</apiItemName><apiType value="String"/><apiDesc>	type
		 </apiDesc></apiParam><apiParam><apiItemName>theID</apiItemName><apiType value="String"/><apiDesc>	id
		 </apiDesc></apiParam><apiParam><apiItemName>nodeName</apiItemName><apiType value="String"/><apiDesc>One of the four ELEMENT_constants
		 		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 The following four first attributes are common to message, presence, and IQ stanzas.
		 The fifth, xml:lang, is not included here.
		 		 <p>RFC 3920: 9.  XML Stanzas</p>
		 		 <p>After TLS negotiation (Section 5) if desired, SASL negotiation
		 (Section 6), and Resource Binding (Section 7) if necessary, XML
		 stanzas can be sent over the streams.  Three kinds of XML stanza are
		 defined for the 'jabber:client' and 'jabber:server' namespaces:
		 &gt;message/&lt;, &gt;presence/&lt;, and &gt;iq/&lt;.  In addition, there are five
		 common attributes for these kinds of stanza.  These common
		 attributes, as well as the basic semantics of the three stanza kinds,
		 are defined herein; more detailed information regarding the syntax of
		 XML stanzas in relation to instant messaging and presence
		 applications is provided in [XMPP-IM].</p>
		 		 <pre>
		           |  initiating to receiving  |  receiving to initiating
		  ---------+---------------------------+-----------------------
		  to       |  hostname of receiver     |  silently ignored
		  from     |  silently ignored         |  hostname of receiver
		  id       |  silently ignored         |  session key
		  xml:lang |  default language         |  default language
		  version  |  signals XMPP 1.0 support |  signals XMPP 1.0 support
		 </pre>
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-9"><linktext>http://tools.ietf.org/html/rfc3920#section-9</linktext></link></related-links></apiConstructor><apiOperation id="org.igniterealtime.xiff.data:XMPPStanza:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID for the stanza.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>The generated ID
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The prefix for the ID to be generated
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:CLIENT_NAMESPACE"><apiName>CLIENT_NAMESPACE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>jabber:client</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:CLIENT_VERSION"><apiName>CLIENT_VERSION</apiName><shortdesc>
		 The version of XMPP specified in RFC 3920 is "1.0"; in particular, this
		 encapsulates the stream-related protocols (Use of TLS (Section 5),
		 Use of SASL (Section 6), and Stream Errors (Section 4.7)), as well as
		 the semantics of the three defined XML stanza types (message,
		 presence, and iq).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1.0</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The version of XMPP specified in RFC 3920 is "1.0"; in particular, this
		 encapsulates the stream-related protocols (Use of TLS (Section 5),
		 Use of SASL (Section 6), and Stream Errors (Section 4.7)), as well as
		 the semantics of the three defined XML stanza types (<b>message</b>,
		 <b>presence</b>, and <b>iq</b>).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ELEMENT_IQ"><apiName>ELEMENT_IQ</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>iq</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ELEMENT_MESSAGE"><apiName>ELEMENT_MESSAGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>message</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ELEMENT_PRESENCE"><apiName>ELEMENT_PRESENCE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>presence</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ELEMENT_TEMP"><apiName>ELEMENT_TEMP</apiName><shortdesc>
		 Internal name in XIFF for incoming data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>temp</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Internal name in XIFF for incoming data.
		 The proper element name should be available after setting the XML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ERROR_AUTH"><apiName>ERROR_AUTH</apiName><shortdesc>
		 Retry after providing credentials
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>auth</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Retry after providing credentials
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ERROR_CANCEL"><apiName>ERROR_CANCEL</apiName><shortdesc>
		 Do not retry (the error is unrecoverable)
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>cancel</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Do not retry (the error is unrecoverable)
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ERROR_CONTINUE"><apiName>ERROR_CONTINUE</apiName><shortdesc>
		 Proceed (the condition was only a warning)
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>continue</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Proceed (the condition was only a warning)
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ERROR_MODIFY"><apiName>ERROR_MODIFY</apiName><shortdesc>
		 Retry after changing the data sent
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>modify</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Retry after changing the data sent
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:ERROR_WAIT"><apiName>ERROR_WAIT</apiName><shortdesc>
		 Retry after waiting (the error is temporary)
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>wait</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Retry after waiting (the error is temporary)
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:NAMESPACE_BOSH"><apiName>NAMESPACE_BOSH</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>urn:xmpp:xbosh</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:NAMESPACE_FLASH"><apiName>NAMESPACE_FLASH</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://www.jabber.com/streams/flash</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:NAMESPACE_STREAM"><apiName>NAMESPACE_STREAM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>http://etherx.jabber.org/streams</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:XML_LANG"><apiName>XML_LANG</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>en</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:protected:delayedDelivery:get"><apiName>delayedDelivery</apiName><shortdesc>
		 Time of the message/presence in case of a delay.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef><apiDesc>
		 Time of the message/presence in case of a delay. Used only for messages
		 which were sent while user was offline.
		 		 <p>Can be set only via XML as the value should come from the server.</p>
		 		 <p>There are two ways that might be possible coming from the server,
		 XEP-0203 or XEP-0091, of which the latter is legacy.</p>
		 		 <p>XEP-0203: <codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph></p>
		 <p>XEP-0091: <codeph>CCYYMMDDThh:mm:ss</codeph></p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0203.html"><linktext>http://xmpp.org/extensions/xep-0203.html</linktext></link><link href="http://xmpp.org/extensions/xep-0091.html"><linktext>http://xmpp.org/extensions/xep-0091.html</linktext></link><link href="http://xmpp.org/extensions/xep-0082.html"><linktext>http://xmpp.org/extensions/xep-0082.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:errorCode:get"><apiName>errorCode</apiName><shortdesc>
		 The error code, assuming this stanza contains error information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 The error code, assuming this stanza contains error information. Error codes are
		 deprecated in standard XMPP, but they are commonly used by older Jabber servers
		 like Jabberd 1.4.
		 		 <p>Use <codeph>NaN</codeph> to remove.</p>
		 		 <p>See the link for XEP-0086: Error Condition Mappings</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0086.html"><linktext>http://xmpp.org/extensions/xep-0086.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:errorCondition:get"><apiName>errorCondition</apiName><shortdesc>
		 The error condition, assuming this stanza contains error information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The error condition, assuming this stanza contains error information.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 <p>Error condition should be in lowercase and not contain any whitespace.</p>
		 		 <p>Error element must be qualified by urn:ietf:params:xml:ns:xmpp-stanzas namespace.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-9.3.3"><linktext>http://tools.ietf.org/html/rfc3920#section-9.3.3</linktext></link><link href="http://xmpp.org/extensions/xep-0182.html"><linktext>http://xmpp.org/extensions/xep-0182.html</linktext></link><link href="http://xmpp.org/extensions/xep-0086.html"><linktext>TODO: Conform spec... find examples</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:errorMessage:get"><apiName>errorMessage</apiName><shortdesc>
		 The error message, assuming this stanza contains error information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The error message, assuming this stanza contains error information.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 <p>This is the <b>text</b> element that is a child
		 of <b>error</b> element.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-9.3"><linktext>http://tools.ietf.org/html/rfc3920#section-9.3</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:errorType:get"><apiName>errorType</apiName><shortdesc>
		 The error type, assuming this stanza contains error information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The error type, assuming this stanza contains error information.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 <p>The value of the <b>error</b> element's 'type' attribute
		 MUST be one of the following:</p>
		 <ul>
		 <li>cancel -- do not retry (the error is unrecoverable)</li>
		 <li>continue -- proceed (the condition was only a warning)</li>
		 <li>modify -- retry after changing the data sent</li>
		 <li>auth -- retry after providing credentials</li>
		 <li>wait -- retry after waiting (the error is temporary)</li>
		 </ul>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-9.3"><linktext>http://tools.ietf.org/html/rfc3920#section-9.3</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:from:get"><apiName>from</apiName><shortdesc>
		 The JID of the sender.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The JID of the sender. Most, if not all, server implementations follow the specifications
		 that prevent this from being falsified. Thus, under normal circumstances, you don't
		 need to supply this information because the server will fill it in automatically.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:idGenerator:get"><apiName>idGenerator</apiName><shortdesc>
		 The ID generator for this stanza type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data.id:IIDGenerator</apiValueClassifier></apiValueDef><apiDesc>
		 The ID generator for this stanza type.
		 		 <p>ID generators must implement
		 the IIDGenerator interface. The XIFF library comes with a few default
		 ID generators that have already been implemented (see org.igniterealtime.xiff.data.id..</p>
		 		 <p>Setting the ID generator by stanza type is useful if you'd like to use
		 different ID generation schemes for each type. For instance, messages could
		 use the incremental ID generation scheme provided by the IncrementalGenerator class, while
		 IQs could use the shared object ID generation scheme provided by the SOIncrementalGenerator class.</p>
		 		 </apiDesc><example>The following sets the ID generator for the Message stanza type to an IncrementalGenerator
		 found in org.igniterealtime.xiff.data.id.IncrementalGenerator:
		 <pre>Message.idGenerator = new IncrementalGenerator();</pre>
		 </example></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.id.xml#IIDGenerator"><linktext>org.igniterealtime.xiff.data.id.IIDGenerator</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:id:get"><apiName>id</apiName><shortdesc>
		 The unique identifier of this stanza.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The unique identifier of this stanza. ID generation is accomplished using
		 the static <codeph>generateID</codeph> method of the particular stanza type.
		 		 <p>RFC: The optional 'id' attribute MAY be used by a sending entity for
		 internal tracking of stanzas that it sends and receives (especially
		 for tracking the request-response interaction inherent in the
		 semantics of IQ stanzas).  It is OPTIONAL for the value of the 'id'
		 attribute to be unique globally, within a domain, or within a stream.
		 The semantics of IQ stanzas impose additional restrictions; see IQ
		 Semantics (Section 9.2.3).</p>
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.xml#XMPPStanza/generateID"><linktext>generateID</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:to:get"><apiName>to</apiName><shortdesc>
		 The JID of the recipient.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 The JID of the recipient.
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:type:get"><apiName>type</apiName><shortdesc>
		 The stanza type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The stanza type. There are MANY types available, depending on what kind of stanza this is.
		 		 <p>The XIFF Library defines the types for IQ, Presence, and Message in each respective class
		 as static string variables. Below is a listing of each:</p>
		 		 <b>IQ</b>
		 <ul>
		 <li>IQ.TYPE_ERROR</li>
		 <li>IQ.TYPE_GET</li>
		 <li>IQ.TYPE_RESULT</li>
		 <li>IQ.TYPE_SET</li>
		 </ul>
		 		 <b>Presence</b>
		 <ul>
		 <li>Presence.TYPE_ERROR</li>
		 <li>Presence.TYPE_PROBE</li>
		 <li>Presence.TYPE_SUBSCRIBE</li>
		 <li>Presence.TYPE_SUBSCRIBED</li>
		 <li>Presence.TYPE_UNAVAILABLE</li>
		 <li>Presence.TYPE_UNSUBSCRIBE</li>
		 <li>Presence.TYPE_UNSUBSCRIBED</li>
		 </ul>
		 		 <b>Message</b>
		 <ul>
		 <li>Message.TYPE_CHAT</li>
		 <li>Message.TYPE_ERROR</li>
		 <li>Message.TYPE_GROUPCHAT</li>
		 <li>Message.TYPE_HEADLINE</li>
		 <li>Message.TYPE_NORMAL</li>
		 </ul>
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 		 <p>RFC: The 'type' attribute specifies detailed information about the purpose
		 or context of the message, presence, or IQ stanza.  The particular
		 allowable values for the 'type' attribute vary depending on whether
		 the stanza is a message, presence, or IQ; the values for message and
		 presence stanzas are specific to instant messaging and presence
		 applications and therefore are defined in [XMPP-IM], whereas the
		 values for IQ stanzas specify the role of an IQ stanza in a
		 structured request-response "conversation" and thus are defined under
		 IQ Semantics (Section 9.2.3) below.  The only 'type' value common to
		 all three stanzas is "error"; see Stanza Errors (Section 9.3).</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-9.2.3"><linktext>http://tools.ietf.org/html/rfc3920#section-9.2.3</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMPPStanza:xml:set"><apiName>xml</apiName><shortdesc>
		 In addition to saving the XML, check for possible Extensions that are registered for listening this XML data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef><apiDesc>
		 In addition to saving the XML, check for possible Extensions that are registered for listening this XML data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:AbstractExtension"><apiName>AbstractExtension</apiName><shortdesc>
	 What is this?
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef><apiDesc>
	 What is this?
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data:AbstractExtension:AbstractExtension"><apiName>AbstractExtension</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data:AbstractExtension:xml:set"><apiName>xml</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:XMLStanza"><apiName>XMLStanza</apiName><shortdesc>
	 This is a base class for all classes that encapsulate XML stanza data.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMLStanza</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:ExtensionContainer</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This is a base class for all classes that encapsulate XML stanza data. It provides
	 a set of methods that faciliate easy manipulation of XML data.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data:XMLStanza:XMLStanza"><apiName>XMLStanza</apiName><shortdesc>
		 XMPP is based on communication with XML stanzas
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 XMPP is based on communication with XML stanzas
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getAttribute"><apiName>getAttribute</apiName><shortdesc>
		 Convinience method for getting element value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="String"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting element value from the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getChildAttribute"><apiName>getChildAttribute</apiName><shortdesc>
		 Convinience method for getting child element attribute value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="String"/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting child element attribute value from the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getChildField"><apiName>getChildField</apiName><shortdesc>
		 Convinience method for getting child element value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="String"/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting child element value from the XML.
		 		 <p>Might seem over complex, but AS3 seems to handle different kind of
		 XML differently, thus shorthands and even methods such as <codeph>localName()</codeph>
		 do not work as expected.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getField"><apiName>getField</apiName><shortdesc>
		 Convinience method for getting element value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="String"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting element value from the XML.
		 		 <p>Might seem over complex, but AS3 seems to handle different kind of
		 XML differently, thus shorthands and even methods such as <codeph>localName()</codeph>
		 do not work as expected.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:removeFields"><apiName>removeFields</apiName><shortdesc>
		 Helper method for removing all child elements that have the given name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Helper method for removing all child elements that have the given name.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setAttribute"><apiName>setAttribute</apiName><shortdesc>
		 Convinience method for setting a value to a element in the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting a value to a element in the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setChildAttribute"><apiName>setChildAttribute</apiName><shortdesc>
		 Convinience method for setting an attribute for a child element of the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting an attribute for a child element of the XML.
		 		 <p>In case the child element does not exist, it will be created.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setChildField"><apiName>setChildField</apiName><shortdesc>
		 Convinience method for setting a value for a child element of the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting a value for a child element of the XML.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setField"><apiName>setField</apiName><shortdesc>
		 Convinience method for setting a value to a element in the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting a value to a element in the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:toString"><apiName>toString</apiName><shortdesc>
		 Converts the base stanza XML to a string.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The base XML in string form, as in <codeph>toXMLString()</codeph>
		 </apiDesc><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Converts the base stanza XML to a string.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data:XMLStanza:DEFAULT_NS"><apiName>DEFAULT_NS</apiName><shortdesc>
		 Default XML namespace.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="Namespace"/></apiValueDef><apiDesc>
		 Default XML namespace. Must define in AS3.
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/XML/1998/namespace"><linktext>http://www.w3.org/XML/1998/namespace</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMLStanza:FLASH_NS"><apiName>FLASH_NS</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="Namespace"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.jabber.com/streams/flash"><linktext>http://www.jabber.com/streams/flash</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.data:XMLStanza:STREAM_NS"><apiName>STREAM_NS</apiName><shortdesc>
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="Namespace"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/protocols/streams/"><linktext>http://xmpp.org/protocols/streams/</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:Presence"><apiName>Presence</apiName><shortdesc>
	 This class provides encapsulation for manipulation of presence data for sending and receiving.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IPresence</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This class provides encapsulation for manipulation of presence data for sending and receiving.
	 	 <p>2.2.1.  Types of Presence</p>
	 	 <p>The 'type' attribute of a presence stanza is OPTIONAL.  A presence
	 stanza that does not possess a 'type' attribute is used to signal to
	 the server that the sender is online and available for communication.
	 If included, the 'type' attribute specifies a lack of availability, a
	 request to manage a subscription to another entity's presence, a
	 request for another entity's current presence, or an error related to
	 a previously-sent presence stanza.  If included, the 'type' attribute
	 MUST have one of the following values:</p>
	 <p>
	 o  unavailable -- Signals that the entity is no longer available for communication.
	 o  subscribe -- The sender wishes to subscribe to the recipient's presence.
	 o  subscribed -- The sender has allowed the recipient to receive their presence.
	 o  unsubscribe -- The sender is unsubscribing from another entity's presence.
	 o  unsubscribed -- The subscription request has been denied or a previously-granted subscription has been cancelled.
	 o  probe -- A request for an entity's current presence; SHOULD be generated only by a server on behalf of a user.
	 o  error -- An error has occurred regarding processing or delivery of a previously-sent presence stanza.</p>
	 	 <p>For detailed information regarding presence semantics and the
	 subscription model used in the context of XMPP-based instant
	 messaging and presence applications, refer to Exchanging Presence
	 Information (Section 5) and Managing Subscriptions (Section 6).</p>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3921"><linktext>http://tools.ietf.org/html/rfc3921</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data:Presence:Presence"><apiName>Presence</apiName><shortdesc>
		 According to Google Talk developers via their presentation [somewhere few years ago],
		 most of the XMPP related traffic in their service is made by Presence.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>The recipient of the presence, usually in the form of a JID.
		 </apiDesc></apiParam><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiData>null</apiData><apiDesc>The sender of the presence, usually in the form of a JID.
		 </apiDesc></apiParam><apiParam><apiItemName>presenceType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The type of presence as a string. There are predefined static variables for
		 </apiDesc></apiParam><apiParam><apiItemName>showVal</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>What to show for this presence (away, online, etc.) There are predefined static variables for
		 </apiDesc></apiParam><apiParam><apiItemName>statusVal</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The status; usually used for the "away message."
		 </apiDesc></apiParam><apiParam><apiItemName>priorityVal</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>The priority of this presence; usually on a scale of 1-5.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 According to Google Talk developers via their presentation [somewhere few years ago],
		 most of the XMPP related traffic in their service is made by Presence.
		 		 <p>The <b>presence</b> element can be seen as a basic broadcast or
		 "publish-subscribe" mechanism, whereby multiple entities receive
		 information about an entity to which they have subscribed (in this
		 case, network availability information).  In general, a publishing
		 entity SHOULD send a presence stanza with no 'to' attribute, in which
		 case the server to which the entity is connected SHOULD broadcast or
		 multiplex that stanza to all subscribing entities.  However, a
		 publishing entity MAY also send a presence stanza with a 'to'
		 attribute, in which case the server SHOULD route or deliver that
		 stanza to the intended recipient.  See Server Rules for Handling XML
		 Stanzas (Section 10) for general routing and delivery rules related
		 to XML stanzas, and [XMPP-IM] for presence-specific rules in the
		 context of an instant messaging and presence application.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.data:Presence:SHOW_AWAY"><apiName>SHOW_AWAY</apiName><shortdesc>
		 The entity or resource is temporarily away.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>away</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The entity or resource is temporarily away.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:SHOW_CHAT"><apiName>SHOW_CHAT</apiName><shortdesc>
		 The entity or resource is actively interested in chatting.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>chat</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The entity or resource is actively interested in chatting.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:SHOW_DND"><apiName>SHOW_DND</apiName><shortdesc>
		 The entity or resource is busy (dnd = "Do Not Disturb").</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dnd</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The entity or resource is busy (dnd = "Do Not Disturb").
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:SHOW_XA"><apiName>SHOW_XA</apiName><shortdesc>
		 The entity or resource is away for an extended period (xa = "eXtended Away").</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>xa</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The entity or resource is away for an extended period (xa = "eXtended Away").
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:TYPE_ERROR"><apiName>TYPE_ERROR</apiName><shortdesc>
		 An error has occurred regarding processing of a
		 previously-sent presence stanza; if the presence stanza is of type
		 "error", it MUST include an error child element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An error has occurred regarding processing of a
		 previously-sent presence stanza; if the presence stanza is of type
		 "error", it MUST include an error child element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:TYPE_PROBE"><apiName>TYPE_PROBE</apiName><shortdesc>
		 A request for an entity's current presence; SHOULD be
		 generated only by a server on behalf of a user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>probe</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A request for an entity's current presence; SHOULD be
		 generated only by a server on behalf of a user.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:TYPE_SUBSCRIBED"><apiName>TYPE_SUBSCRIBED</apiName><shortdesc>
		 The sender has allowed the recipient to receive their presence.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscribed</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The sender has allowed the recipient to receive their presence.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:TYPE_SUBSCRIBE"><apiName>TYPE_SUBSCRIBE</apiName><shortdesc>
		 The sender wishes to subscribe to the recipient's
		 presence.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscribe</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The sender wishes to subscribe to the recipient's
		 presence.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:TYPE_UNAVAILABLE"><apiName>TYPE_UNAVAILABLE</apiName><shortdesc>
		 Signals that the entity is no longer available for communication.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unavailable</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Signals that the entity is no longer available for communication.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:TYPE_UNSUBSCRIBED"><apiName>TYPE_UNSUBSCRIBED</apiName><shortdesc>
		 The subscription request has been denied or a
		 previously-granted subscription has been cancelled.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unsubscribed</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The subscription request has been denied or a
		 previously-granted subscription has been cancelled.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:TYPE_UNSUBSCRIBE"><apiName>TYPE_UNSUBSCRIBE</apiName><shortdesc>
		  The sender is unsubscribing from the receiver's presence.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unsubscribe</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  The sender is unsubscribing from the receiver's presence.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:priority:get"><apiName>priority</apiName><shortdesc>
		 The priority of the presence, usually on a scale of 1-5.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 The priority of the presence, usually on a scale of 1-5.
		 		 <p>RFC: "The value MUST be an integer between -128 and +127".</p>
		 <p>If no priority is provided,
		 a server SHOULD consider the priority to be zero.</p>
		 		 <p>Use <codeph>NaN</codeph> or <codeph>0</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:show:get"><apiName>show</apiName><shortdesc>
		 The show value; away, online, etc.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The show value; away, online, etc. There are predefined static variables in the Presence
		 class for this:
		 <ul>
		 <li>Presence.SHOW_AWAY</li>
		 <li>Presence.SHOW_CHAT</li>
		 <li>Presence.SHOW_DND</li>
		 <li>Presence.SHOW_XA</li>
		 </ul>
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:status:get"><apiName>status</apiName><shortdesc>
		 The status; usually used for "away messages."
		 		 The OPTIONAL status element contains XML character data specifying
		 a natural-language description of availability status.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The status; usually used for "away messages."
		 		 <p>The OPTIONAL status element contains XML character data specifying
		 a natural-language description of availability status.  It is
		 normally used in conjunction with the show element to provide a
		 detailed description of an availability state (e.g., "In a meeting").
		 The <b>status</b> element MUST NOT possess any attributes, with the
		 exception of the 'xml:lang' attribute.  Multiple instances of the
		 <b>status</b> element MAY be included but only if each instance possesses
		 an 'xml:lang' attribute with a distinct language value.</p>
		 		 <p>Use <codeph>null</codeph> to remove.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:Presence:time:get"><apiName>time</apiName><shortdesc>
		 Time of the presence in case of a delay.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef><apiDesc>
		 Time of the presence in case of a delay. Used only for messages
		 which were sent while user was offline.
		 		 <p>Can be set only via XML as the value should come from the server.</p>
		 		 <p>There are two ways that might be possible coming from the server,
		 XEP-0203 or XEP-0091, of which the latter is legacy.</p>
		 		 <p>XEP-0203: <codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph></p>
		 <p>XEP-0091: <codeph>CCYYMMDDThh:mm:ss</codeph></p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0203.html"><linktext>http://xmpp.org/extensions/xep-0203.html</linktext></link><link href="http://xmpp.org/extensions/xep-0091.html"><linktext>http://xmpp.org/extensions/xep-0091.html</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IPresence"><apiName>IPresence</apiName><shortdesc>
	 Interface for Presence
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Interface for Presence
	 </apiDesc></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.data:IPresence:org.igniterealtime.xiff.data:IPresence:priority:get"><apiName>priority</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IPresence:org.igniterealtime.xiff.data:IPresence:show:get"><apiName>show</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IPresence:org.igniterealtime.xiff.data:IPresence:status:get"><apiName>status</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IPresence:org.igniterealtime.xiff.data:IPresence:time:get"><apiName>time</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Date"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:Extension"><apiName>Extension</apiName><shortdesc>
	 This is a base class for all data extensions.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This is a base class for all data extensions.
	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/registrar/namespaces.html"><linktext>http://xmpp.org/registrar/namespaces.html</linktext></link><link href="http://xmpp.org/extensions/"><linktext>http://xmpp.org/extensions/</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.data:Extension:Extension"><apiName>Extension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>The parent node that this extension should be appended to
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data:Extension:remove"><apiName>remove</apiName><shortdesc>
		 Removes the extension from its parent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes the extension from its parent.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data:Extension:xml:set"><apiName>xml</apiName><shortdesc>
		 Override in order to take care of setting the Namespace and
		 checking for containing extensions.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef><apiDesc>
		 Override in order to take care of setting the Namespace and
		 checking for containing extensions.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:ExtensionContainer"><apiName>ExtensionContainer</apiName><shortdesc>
	 Contains the implementation for a generic extension container.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains the implementation for a generic extension container.
	 Use the static method "decorate" to implement the IExtendable interface on a class.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data:ExtensionContainer:ExtensionContainer"><apiName>ExtensionContainer</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:addExtension"><apiName>addExtension</apiName><shortdesc>
		 Add extension to the list of the given namespace and insert to the XML element as a child.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The same IExtension that was passed via the parameter
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add extension to the list of the given namespace and insert to the XML element as a child.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:getAllExtensionsByNS"><apiName>getAllExtensionsByNS</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Array"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:getAllExtensions"><apiName>getAllExtensions</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:getExtension"><apiName>getExtension</apiName><shortdesc>
		 Get the extension having the given element name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get the extension having the given element name.
		 Unfortunetly only takes the oldest of the list...
		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html#filter%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html#filter%28%29</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:removeAllExtensions"><apiName>removeAllExtensions</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:removeExtension"><apiName>removeExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.data:ExtensionContainer:xml:get"><apiName>xml</apiName><shortdesc>
		 The XML node that should be used for this stanza's internal XML representation,
		 base of the XMLStanza, XML element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef><apiDesc>
		 The XML node that should be used for this stanza's internal XML representation,
		 base of the XMLStanza, XML element.
		 		 <p>Simply by setting this will take care of the required parsing and deserialisation.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/XML.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/XML.html</linktext></link><link href="http://www.w3.org/TR/xml/"><linktext>http://www.w3.org/TR/xml/</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IExtension"><apiName>IExtension</apiName><shortdesc>
	 The interface describing an extension.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The interface describing an extension.
	 All extensions must implement this interface.
	 </apiDesc></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:IExtension:org.igniterealtime.xiff.data:IExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Element name of the extension
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Element name of the extension
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtension:org.igniterealtime.xiff.data:IExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Namespace of the element
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Namespace of the element
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IXMPPStanza"><apiName>IXMPPStanza</apiName><shortdesc>
	 Interface for base XMPP stanza
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMLStanza</apiBaseInterface><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Interface for base XMPP stanza
	 </apiDesc></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:errorCode:get"><apiName>errorCode</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:errorCondition:get"><apiName>errorCondition</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:errorMessage:get"><apiName>errorMessage</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:errorType:get"><apiName>errorType</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:from:get"><apiName>from</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:to:get"><apiName>to</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:EscapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.data:IXMPPStanza:org.igniterealtime.xiff.data:IXMPPStanza:type:get"><apiName>type</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:INodeProxy"><apiName>INodeProxy</apiName><shortdesc>
	 An interface for objects that abstract XML data by providing accessors
	 to the original XML data stored within.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 An interface for objects that abstract XML data by providing accessors
	 to the original XML data stored within.
	 	 <p>Most XMPP stanzas that will interact with the library should implement this interface.</p>
	 </apiDesc></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.data:INodeProxy:org.igniterealtime.xiff.data:INodeProxy:xml:get"><apiName>xml</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="XML"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IXMLStanza"><apiName>IXMLStanza</apiName><shortdesc>
	 Since XML migration, the only job for this interace is to bring together two other
	 interfaces that it extends.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Since XML migration, the only job for this interace is to bring together two other
	 interfaces that it extends.
	 </apiDesc></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:getAttribute"><apiName>getAttribute</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:getField"><apiName>getField</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:setAttribute"><apiName>setAttribute</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:setField"><apiName>setField</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IExtendable"><apiName>IExtendable</apiName><shortdesc>
	 This interface provides access to contained extensions and methods to modify the contained extensions.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface provides access to contained extensions and methods to modify the contained extensions.
	 All XMPP stanzas that can be extended should implement this interface.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="org.igniterealtime.xiff.data.xml#ExtensionContainer"><linktext>org.igniterealtime.xiff.data.ExtensionContainer</linktext></link><link href="org.igniterealtime.xiff.data.xml#IExtension"><linktext>org.igniterealtime.xiff.data.IExtension</linktext></link></related-links><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:addExtension"><apiName>addExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:getAllExtensionsByNS"><apiName>getAllExtensionsByNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:getAllExtensions"><apiName>getAllExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:removeAllExtensions"><apiName>removeAllExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:removeExtension"><apiName>removeExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.events"><apiName>org.igniterealtime.xiff.events</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.events:RegistrationFieldsEvent"><apiName>RegistrationFieldsEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:RegistrationFieldsEvent"><apiName>RegistrationFieldsEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:REG_FIELDS"><apiName>REG_FIELDS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>registrationFields</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:data:get"><apiName>data</apiName><shortdesc>
		 Extension
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data.register:RegisterExtension</apiValueClassifier></apiValueDef><apiDesc>
		 Extension
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:fields:get"><apiName>fields</apiName><shortdesc>
		 Required registration fields
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Required registration fields
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:IncomingDataEvent"><apiName>IncomingDataEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:IncomingDataEvent:IncomingDataEvent"><apiName>IncomingDataEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:IncomingDataEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:IncomingDataEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:IncomingDataEvent:INCOMING_DATA"><apiName>INCOMING_DATA</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>incomingData</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:IncomingDataEvent:data:get"><apiName>data</apiName><shortdesc>
		 The uncompressed data received
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.utils:ByteArray"/></apiValueDef><apiDesc>
		 The uncompressed data received
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:ConnectionSuccessEvent"><apiName>ConnectionSuccessEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:ConnectionSuccessEvent:ConnectionSuccessEvent"><apiName>ConnectionSuccessEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:ConnectionSuccessEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:ConnectionSuccessEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:ConnectionSuccessEvent:CONNECT_SUCCESS"><apiName>CONNECT_SUCCESS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>connection</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:IQEvent"><apiName>IQEvent</apiName><shortdesc>
	 Event that occurs when an IQ has been received from the server.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Event that occurs when an IQ has been received from the server.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:IQEvent:IQEvent"><apiName>IQEvent</apiName><shortdesc>
		 Type should be the namespace of the extension that is related to this IQ
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Type should be the namespace of the extension that is related to this IQ
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:IQEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:IQEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:IQEvent:data:get"><apiName>data</apiName><shortdesc>
		 Extension related to this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data:IExtension</apiValueClassifier></apiValueDef><apiDesc>
		 Extension related to this event.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.xml#Extension"><linktext>org.igniterealtime.xiff.data.Extension</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.events:IQEvent:iq:get"><apiName>iq</apiName><shortdesc>
		 The IQ element related to this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data:IQ</apiValueClassifier></apiValueDef><apiDesc>
		 The IQ element related to this event.
		 		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.xml#IQ"><linktext>org.igniterealtime.xiff.data.IQ</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:InviteEvent"><apiName>InviteEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:InviteEvent:InviteEvent"><apiName>InviteEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:InviteEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:InviteEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:InviteEvent:INVITED"><apiName>INVITED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>invited</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:InviteEvent:data:get"><apiName>data</apiName><shortdesc>
		 Message that is possibly included in the invitation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data:Message</apiValueClassifier></apiValueDef><apiDesc>
		 Message that is possibly included in the invitation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:InviteEvent:from:get"><apiName>from</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:InviteEvent:reason:get"><apiName>reason</apiName><shortdesc>
		 A possible reason given by the inviting party
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 A possible reason given by the inviting party
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:InviteEvent:room:get"><apiName>room</apiName><shortdesc>
		 The room in which the invitation is targeted.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.conference:Room</apiValueClassifier></apiValueDef><apiDesc>
		 The room in which the invitation is targeted.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent"><apiName>ChangePasswordSuccessEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent:ChangePasswordSuccessEvent"><apiName>ChangePasswordSuccessEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent:PASSWORD_SUCCESS"><apiName>PASSWORD_SUCCESS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>changePasswordSuccess</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:ModelChangedEvent"><apiName>ModelChangedEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:ModelChangedEvent:ModelChangedEvent"><apiName>ModelChangedEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:ModelChangedEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:ModelChangedEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:ModelChangedEvent:MODEL_CHANGED"><apiName>MODEL_CHANGED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>modelChanged</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:ModelChangedEvent:fieldName:get"><apiName>fieldName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:ModelChangedEvent:firstItem:get"><apiName>firstItem</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:ModelChangedEvent:lastItem:get"><apiName>lastItem</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:ModelChangedEvent:removedIDs:get"><apiName>removedIDs</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:PresenceEvent"><apiName>PresenceEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:PresenceEvent:PresenceEvent"><apiName>PresenceEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:PresenceEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:PresenceEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:PresenceEvent:PRESENCE"><apiName>PRESENCE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>presence</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:PresenceEvent:data:get"><apiName>data</apiName><shortdesc>
		 Array of Presences.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Array"/></apiValueDef><apiDesc>
		 Array of Presences.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:MessageEvent"><apiName>MessageEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:MessageEvent:MessageEvent"><apiName>MessageEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:MessageEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:MessageEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:MessageEvent:MESSAGE"><apiName>MESSAGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>message</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:MessageEvent:data:get"><apiName>data</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data:Message</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:RosterEvent"><apiName>RosterEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:RosterEvent:RosterEvent"><apiName>RosterEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:RosterEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RosterEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:RosterEvent:ROSTER_LOADED"><apiName>ROSTER_LOADED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>rosterLoaded</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:SUBSCRIPTION_DENIAL"><apiName>SUBSCRIPTION_DENIAL</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscriptionDenial</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:SUBSCRIPTION_REQUEST"><apiName>SUBSCRIPTION_REQUEST</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscriptionRequest</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:SUBSCRIPTION_REVOCATION"><apiName>SUBSCRIPTION_REVOCATION</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subscriptionRevocation</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:USER_ADDED"><apiName>USER_ADDED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userAdded</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:USER_AVAILABLE"><apiName>USER_AVAILABLE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userAvailable</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:USER_PRESENCE_UPDATED"><apiName>USER_PRESENCE_UPDATED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userPresenceUpdated</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:USER_REMOVED"><apiName>USER_REMOVED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userRemoved</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:USER_SUBSCRIPTION_UPDATED"><apiName>USER_SUBSCRIPTION_UPDATED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userSubscriptionUpdated</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:USER_UNAVAILABLE"><apiName>USER_UNAVAILABLE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userUnavailable</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:data:get"><apiName>data</apiName><shortdesc>
		 Data can be of type:
		 
		 Presence
		 RosterItemVO
		 ...
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc>
		 Data can be of type:
		 <ul>
		 <li><codeph>Presence</codeph></li>
		 <li><codeph>RosterItemVO</codeph></li>
		 <li>...</li>
		 </ul>
		 </apiDesc></apiValueDetail><related-links><link href="org.igniterealtime.xiff.data.xml#Presence"><linktext>org.igniterealtime.xiff.data.Presence</linktext></link><link href="org.igniterealtime.xiff.data.im.xml#RosterItemVO"><linktext>org.igniterealtime.xiff.data.im.RosterItemVO</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.events:RosterEvent:jid:get"><apiName>jid</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent"><apiName>BookmarkRetrievedEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent:BookmarkRetrievedEvent"><apiName>BookmarkRetrievedEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent:BOOKMARK_RETRIEVED"><apiName>BOOKMARK_RETRIEVED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bookmarkRetrieved</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:VCardEvent"><apiName>VCardEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:VCardEvent:VCardEvent"><apiName>VCardEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>vcard</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.vcard:VCard</apiOperationClassifier></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:VCardEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:VCardEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:VCardEvent:LOADED"><apiName>LOADED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>loaded</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:VCardEvent:SAVED"><apiName>SAVED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>saved</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:VCardEvent:SAVE_ERROR"><apiName>SAVE_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>saveError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:VCardEvent:vcard:get"><apiName>vcard</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>org.igniterealtime.xiff.vcard:VCard</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:RoomEvent"><apiName>RoomEvent</apiName><shortdesc>
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:RoomEvent:RoomEvent"><apiName>RoomEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:RoomEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RoomEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:RoomEvent:ADMIN_ERROR"><apiName>ADMIN_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>adminError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:AFFILIATIONS"><apiName>AFFILIATIONS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>affiliations</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:AFFILIATION_CHANGE_COMPLETE"><apiName>AFFILIATION_CHANGE_COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>affiliationChangeComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:BANNED_ERROR"><apiName>BANNED_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>bannedError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:CONFIGURE_ROOM_COMPLETE"><apiName>CONFIGURE_ROOM_COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>configureRoomComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:CONFIGURE_ROOM"><apiName>CONFIGURE_ROOM</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>configureRoom</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:DECLINED"><apiName>DECLINED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>declined</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:GROUP_MESSAGE"><apiName>GROUP_MESSAGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>groupMessage</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:LOCKED_ERROR"><apiName>LOCKED_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>lockedError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:MAX_USERS_ERROR"><apiName>MAX_USERS_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>maxUsersError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:NICK_CONFLICT"><apiName>NICK_CONFLICT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>nickConflict</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:PASSWORD_ERROR"><apiName>PASSWORD_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>passwordError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:PRIVATE_MESSAGE"><apiName>PRIVATE_MESSAGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>privateMessage</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:REGISTRATION_REQ_ERROR"><apiName>REGISTRATION_REQ_ERROR</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>registrationReqError</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:ROOM_DESTROYED"><apiName>ROOM_DESTROYED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>roomDestroyed</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:ROOM_JOIN"><apiName>ROOM_JOIN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>roomJoin</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:ROOM_LEAVE"><apiName>ROOM_LEAVE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>roomLeave</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:SUBJECT_CHANGE"><apiName>SUBJECT_CHANGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>subjectChange</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:USER_BANNED"><apiName>USER_BANNED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userBanned</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:USER_DEPARTURE"><apiName>USER_DEPARTURE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userDeparture</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:USER_JOIN"><apiName>USER_JOIN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userJoin</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:USER_KICKED"><apiName>USER_KICKED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userKicked</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:USER_PRESENCE_CHANGE"><apiName>USER_PRESENCE_CHANGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>userPresenceChange</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:data:get"><apiName>data</apiName><shortdesc>
		 Data type can be Message, Array, or Presence
		 depending of the context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc>
		 Data type can be <codeph>Message</codeph>, <codeph>Array</codeph>, or <codeph>Presence</codeph>
		 depending of the context.
		 		 </apiDesc></apiValueDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html</linktext></link><link href="org.igniterealtime.xiff.data.xml#Message"><linktext>org.igniterealtime.xiff.data.Message</linktext></link><link href="org.igniterealtime.xiff.data.xml#Presence"><linktext>org.igniterealtime.xiff.data.Presence</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:errorCode:get"><apiName>errorCode</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="uint"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:errorCondition:get"><apiName>errorCondition</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:errorMessage:get"><apiName>errorMessage</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:errorType:get"><apiName>errorType</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:from:get"><apiName>from</apiName><shortdesc>
		 TODO: EscapedJID ?
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 TODO: EscapedJID ?
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:nickname:get"><apiName>nickname</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:reason:get"><apiName>reason</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:RoomEvent:subject:get"><apiName>subject</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:FileTransferEvent"><apiName>FileTransferEvent</apiName><shortdesc>
	 Events from the FileTransferManager
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Events from the FileTransferManager
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:FileTransferEvent:FileTransferEvent"><apiName>FileTransferEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:FileTransferEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:FileTransferEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:INCOMING_CLOSE"><apiName>INCOMING_CLOSE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>incomingClose</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:INCOMING_FEATURE"><apiName>INCOMING_FEATURE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>incomingFeature</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:INCOMING_OPEN"><apiName>INCOMING_OPEN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>incomingOpen</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:OUTGOING_CLOSE"><apiName>OUTGOING_CLOSE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>outgoingClose</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:OUTGOING_FEATURE"><apiName>OUTGOING_FEATURE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>outgoingFeature</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:OUTGOING_OPEN"><apiName>OUTGOING_OPEN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>outgoingOpen</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:extensions"><apiName>extensions</apiName><shortdesc>
		 Extensions that might be related to the event type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Array"/></apiValueDef><apiDesc>
		 Extensions that might be related to the event type.
		 FeatureNegotiationExtension, FileTransferExtension
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:FileTransferEvent:iq"><apiName>iq</apiName><shortdesc>
		 The original IQ that contained the extension that might have triggered this event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>org.igniterealtime.xiff.data:IQ</apiValueClassifier></apiValueDef><apiDesc>
		 The original IQ that contained the extension that might have triggered this event.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:SearchPrepEvent"><apiName>SearchPrepEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:SearchPrepEvent:SearchPrepEvent"><apiName>SearchPrepEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:SearchPrepEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:SearchPrepEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:SearchPrepEvent:SEARCH_PREP_COMPLETE"><apiName>SEARCH_PREP_COMPLETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>searchPrepComplete</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:SearchPrepEvent:server:get"><apiName>server</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:LoginEvent"><apiName>LoginEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:LoginEvent:LoginEvent"><apiName>LoginEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:LoginEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:LoginEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:LoginEvent:LOGIN"><apiName>LOGIN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>login</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:RegistrationSuccessEvent"><apiName>RegistrationSuccessEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:RegistrationSuccessEvent:RegistrationSuccessEvent"><apiName>RegistrationSuccessEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:RegistrationSuccessEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RegistrationSuccessEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:RegistrationSuccessEvent:REGISTRATION_SUCCESS"><apiName>REGISTRATION_SUCCESS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>registrationSuccess</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:BookmarkChangedEvent"><apiName>BookmarkChangedEvent</apiName><shortdesc>
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:BookmarkChangedEvent:BookmarkChangedEvent"><apiName>BookmarkChangedEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>bookmark</apiItemName><apiType value="any"/><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:BookmarkChangedEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:BookmarkChangedEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:BookmarkChangedEvent:GROUPCHAT_BOOKMARK_ADDED"><apiName>GROUPCHAT_BOOKMARK_ADDED</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>groupchatBookmarkAdded</apiData><apiType value="String"/><apiDefaultValue/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:BookmarkChangedEvent:GROUPCHAT_BOOKMARK_REMOVED"><apiName>GROUPCHAT_BOOKMARK_REMOVED</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>groupchatBookmarkRemoved</apiData><apiType value="String"/><apiDefaultValue/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:BookmarkChangedEvent:groupchatBookmark"><apiName>groupchatBookmark</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>null</apiData><apiValueClassifier>org.igniterealtime.xiff.bookmark:GroupChatBookmark</apiValueClassifier><apiDefaultValue/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:BookmarkChangedEvent:urlBookmark"><apiName>urlBookmark</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>null</apiData><apiValueClassifier>org.igniterealtime.xiff.bookmark:UrlBookmark</apiValueClassifier><apiDefaultValue/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:DisconnectionEvent"><apiName>DisconnectionEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:DisconnectionEvent:DisconnectionEvent"><apiName>DisconnectionEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:DisconnectionEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:DisconnectionEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:DisconnectionEvent:DISCONNECT"><apiName>DISCONNECT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>disconnection</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:XIFFErrorEvent"><apiName>XIFFErrorEvent</apiName><shortdesc>
	 RFC 3920 (XMPP Core, published October 2004),
	 in chapters 4.7.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 RFC 3920 (XMPP Core, published October 2004),
	 in chapters 4.7. defines Stream Errors.
	 	 <p>The following rules apply to stream-level errors:</p>
	 	 <p>It is assumed that all stream-level errors are unrecoverable;
	 therefore, if an error occurs at the level of the stream, the
	 entity that detects the error MUST send a stream error to the
	 other entity, send a closing <b>stream</b> tag, and terminate the
	 underlying TCP connection.</p>
	 	 <p>If the error occurs while the stream is being set up, the
	 receiving entity MUST still send the opening <b>stream</b> tag, include
	 the <b>error</b> element as a child of the stream element, send the
	 closing <b>stream</b> tag, and terminate the underlying TCP
	 connection.  In this case, if the initiating entity provides an
	 unknown host in the 'to' attribute (or provides no 'to' attribute
	 at all), the server SHOULD provide the server's authoritative
	 hostname in the 'from' attribute of the stream header sent before
	 termination.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-4.7"><linktext>http://tools.ietf.org/html/rfc3920#section-4.7</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.events:XIFFErrorEvent:XIFFErrorEvent"><apiName>XIFFErrorEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:XIFFErrorEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:XIFFErrorEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:XIFFErrorEvent:XIFF_ERROR"><apiName>XIFF_ERROR</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/><apiDefaultValue/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:XIFFErrorEvent:errorCode:get"><apiName>errorCode</apiName><shortdesc>
		 Legacy error code
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="int"/></apiValueDef><apiDesc>
		 Legacy error code
		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0086.html"><linktext>http://xmpp.org/extensions/xep-0086.html</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.events:XIFFErrorEvent:errorCondition:get"><apiName>errorCondition</apiName><shortdesc>
		 The following stream-level error conditions are defined:
		 		 
		 bad-format - the entity has sent XML that cannot be processed;
		 this error MAY be used instead of the more specific XML-related
		 errors, such as bad-namespace-prefix, invalid-xml,
		 restricted-xml, unsupported-encoding, and
		 xml-not-well-formed, although the more specific errors are
		 preferred.
		 		 bad-namespace-prefix - the entity has sent a namespace prefix
		 that is unsupported, or has sent no namespace prefix on an element
		 that requires such a prefix (see XML Namespace Names and Prefixes
		 (Section 11.2)).
		 		 conflict - the server is closing the active stream for this
		 entity because a new stream has been initiated that conflicts with
		 the existing stream.
		 		 connection-timeout - the entity has not generated any traffic
		 over the stream for some period of time (configurable according to
		 a local service policy).
		 		 host-gone - the value of the 'to' attribute provided by the
		 initiating entity in the stream header corresponds to a hostname
		 that is no longer hosted by the server.
		 		 host-unknown - the value of the 'to' attribute provided by the
		 initiating entity in the stream header does not correspond to a
		 hostname that is hosted by the server.
		 		 improper-addressing - a stanza sent between two servers lacks
		 a 'to' or 'from' attribute (or the attribute has no value).
		 		 internal-server-error - the server has experienced a
		 misconfiguration or an otherwise-undefined internal error that
		 prevents it from servicing the stream.
		 		 invalid-from - the JID or hostname provided in a 'from'
		 address does not match an authorized JID or validated domain
		 negotiated between servers via SASL or dialback, or between a
		 client and a server via authentication and resource binding.
		 		 invalid-id - the stream ID or dialback ID is invalid or does
		 not match an ID previously provided.
		 		 invalid-namespace - the streams namespace name is something
		 other than "http://etherx.jabber.org/streams" or the dialback
		 namespace name is something other than "jabber:server:dialback"
		 (see XML Namespace Names and Prefixes (Section 11.2)).
		 		 invalid-xml - the entity has sent invalid XML over the stream
		 to a server that performs validation (see Validation (Section
		 11.3)).
		 		 not-authorized - the entity has attempted to send data before
		 the stream has been authenticated, or otherwise is not authorized
		 to perform an action related to stream negotiation; the receiving
		 entity MUST NOT process the offending stanza before sending the
		 stream error.
		 		 policy-violation - the entity has violated some local service
		 policy; the server MAY choose to specify the policy in the text
		 element or an application-specific condition element.
		 		 remote-connection-failed - the server is unable to properly
		 connect to a remote entity that is required for authentication or
		 authorization.
		 		 resource-constraint - the server lacks the system resources
		 necessary to service the stream.
		 		 restricted-xml - the entity has attempted to send restricted
		 XML features such as a comment, processing instruction, DTD,
		 entity reference, or unescaped character (see Restrictions
		 (Section 11.1)).
		 		 see-other-host - the server will not provide service to the
		 initiating entity but is redirecting traffic to another host; the
		 server SHOULD specify the alternate hostname or IP address (which
		 MUST be a valid domain identifier) as the XML character data of
		 the see-other-host element.
		 		 system-shutdown - the server is being shut down and all active
		 streams are being closed.
		 		 undefined-condition - the error condition is not one of those
		 defined by the other conditions in this list; this error condition
		 SHOULD be used only in conjunction with an application-specific
		 condition.
		 		 unsupported-encoding - the initiating entity has encoded the
		 stream in an encoding that is not supported by the server (see
		 Character Encoding (Section 11.5)).
		 		 unsupported-stanza-type - the initiating entity has sent a
		 first-level child of the stream that is not supported by the
		 server.
		 		 unsupported-version - the value of the 'version' attribute
		 provided by the initiating entity in the stream header specifies a
		 version of XMPP that is not supported by the server; the server
		 MAY specify the version(s) it supports in the text element.
		 		 xml-not-well-formed - the initiating entity has sent XML that
		 is not well-formed as defined by [XML].
		 
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 <p>The following stream-level error conditions are defined:</p>
		 		 <ul>
		 <li><b>bad-format</b> - the entity has sent XML that cannot be processed;
		 this error MAY be used instead of the more specific XML-related
		 errors, such as <b>bad-namespace-prefix</b>, <b>invalid-xml</b>,
		 <b>restricted-xml</b>, <b>unsupported-encoding</b>, and
		 <b>xml-not-well-formed</b>, although the more specific errors are
		 preferred.</li>
		 		 <li><b>bad-namespace-prefix</b> - the entity has sent a namespace prefix
		 that is unsupported, or has sent no namespace prefix on an element
		 that requires such a prefix (see XML Namespace Names and Prefixes
		 (Section 11.2)).</li>
		 		 <li><b>conflict</b> - the server is closing the active stream for this
		 entity because a new stream has been initiated that conflicts with
		 the existing stream.</li>
		 		 <li><b>connection-timeout</b> - the entity has not generated any traffic
		 over the stream for some period of time (configurable according to
		 a local service policy).</li>
		 		 <li><b>host-gone</b> - the value of the 'to' attribute provided by the
		 initiating entity in the stream header corresponds to a hostname
		 that is no longer hosted by the server.</li>
		 		 <li><b>host-unknown</b> - the value of the 'to' attribute provided by the
		 initiating entity in the stream header does not correspond to a
		 hostname that is hosted by the server.</li>
		 		 <li><b>improper-addressing</b> - a stanza sent between two servers lacks
		 a 'to' or 'from' attribute (or the attribute has no value).</li>
		 		 <li><b>internal-server-error</b> - the server has experienced a
		 misconfiguration or an otherwise-undefined internal error that
		 prevents it from servicing the stream.</li>
		 		 <li><b>invalid-from</b> - the JID or hostname provided in a 'from'
		 address does not match an authorized JID or validated domain
		 negotiated between servers via SASL or dialback, or between a
		 client and a server via authentication and resource binding.</li>
		 		 <li><b>invalid-id</b> - the stream ID or dialback ID is invalid or does
		 not match an ID previously provided.</li>
		 		 <li><b>invalid-namespace</b> - the streams namespace name is something
		 other than "http://etherx.jabber.org/streams" or the dialback
		 namespace name is something other than "jabber:server:dialback"
		 (see XML Namespace Names and Prefixes (Section 11.2)).</li>
		 		 <li><b>invalid-xml</b> - the entity has sent invalid XML over the stream
		 to a server that performs validation (see Validation (Section
		 11.3)).</li>
		 		 <li><b>not-authorized</b> - the entity has attempted to send data before
		 the stream has been authenticated, or otherwise is not authorized
		 to perform an action related to stream negotiation; the receiving
		 entity MUST NOT process the offending stanza before sending the
		 stream error.</li>
		 		 <li><b>policy-violation</b> - the entity has violated some local service
		 policy; the server MAY choose to specify the policy in the <b>text</b>
		 element or an application-specific condition element.</li>
		 		 <li><b>remote-connection-failed</b> - the server is unable to properly
		 connect to a remote entity that is required for authentication or
		 authorization.</li>
		 		 <li><b>resource-constraint</b> - the server lacks the system resources
		 necessary to service the stream.</li>
		 		 <li><b>restricted-xml</b> - the entity has attempted to send restricted
		 XML features such as a comment, processing instruction, DTD,
		 entity reference, or unescaped character (see Restrictions
		 (Section 11.1)).</li>
		 		 <li><b>see-other-host</b> - the server will not provide service to the
		 initiating entity but is redirecting traffic to another host; the
		 server SHOULD specify the alternate hostname or IP address (which
		 MUST be a valid domain identifier) as the XML character data of
		 the <b>see-other-host</b> element.</li>
		 		 <li><b>system-shutdown</b> - the server is being shut down and all active
		 streams are being closed.</li>
		 		 <li><b>undefined-condition</b> - the error condition is not one of those
		 defined by the other conditions in this list; this error condition
		 SHOULD be used only in conjunction with an application-specific
		 condition.</li>
		 		 <li><b>unsupported-encoding</b> - the initiating entity has encoded the
		 stream in an encoding that is not supported by the server (see
		 Character Encoding (Section 11.5)).</li>
		 		 <li><b>unsupported-stanza-type</b> - the initiating entity has sent a
		 first-level child of the stream that is not supported by the
		 server.</li>
		 		 <li><b>unsupported-version</b> - the value of the 'version' attribute
		 provided by the initiating entity in the stream header specifies a
		 version of XMPP that is not supported by the server; the server
		 MAY specify the version(s) it supports in the <b>text</b> element.</li>
		 		 <li><b>xml-not-well-formed</b> - the initiating entity has sent XML that
		 is not well-formed as defined by [XML].</li>
		 </ul>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-4.7.3"><linktext>http://tools.ietf.org/html/rfc3920#section-4.7.3</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.events:XIFFErrorEvent:errorExt:get"><apiName>errorExt</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.data:Extension</apiValueClassifier></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:XIFFErrorEvent:errorMessage:get"><apiName>errorMessage</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:XIFFErrorEvent:errorType:get"><apiName>errorType</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc>
	 When a property is changed somewhere, someone might be interested to listen its
	 current and previous values.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 When a property is changed somewhere, someone might be interested to listen its
	 current and previous values. Currently this is only used in RosterItemVO
	 in order to replace the Flex counterpart.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:PropertyChangeEvent:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:PropertyChangeEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:PropertyChangeEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:PropertyChangeEvent:CHANGE"><apiName>CHANGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:PropertyChangeEvent:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:PropertyChangeEvent:newValue:get"><apiName>newValue</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:PropertyChangeEvent:oldValue:get"><apiName>oldValue</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:OutgoingDataEvent"><apiName>OutgoingDataEvent</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.events:OutgoingDataEvent:OutgoingDataEvent"><apiName>OutgoingDataEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.events:OutgoingDataEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:OutgoingDataEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.events:OutgoingDataEvent:OUTGOING_DATA"><apiName>OUTGOING_DATA</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>outgoingData</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.events:OutgoingDataEvent:data:get"><apiName>data</apiName><shortdesc>
		 Outgoing uncompressed data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.utils:ByteArray"/></apiValueDef><apiDesc>
		 Outgoing uncompressed data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.exception"><apiName>org.igniterealtime.xiff.exception</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.exception:SerializationException"><apiName>SerializationException</apiName><shortdesc>
	 This exception is thrown whenever there is a problem serializing or
	 deserializing data for sending to the server.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This exception is thrown whenever there is a problem serializing or
	 deserializing data for sending to the server.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.exception:SerializationException:SerializationException"><apiName>SerializationException</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.filter"><apiName>org.igniterealtime.xiff.filter</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.filter:IPacketFilter"><apiName>IPacketFilter</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.filter:IPacketFilter:org.igniterealtime.xiff.filter:IPacketFilter:accept"><apiName>accept</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>packet</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.filter:CallbackPacketFilter"><apiName>CallbackPacketFilter</apiName><shortdesc>
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.filter:IPacketFilter</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.filter:CallbackPacketFilter:CallbackPacketFilter"><apiName>CallbackPacketFilter</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>callback</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.util:Callback</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>filterFunction</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>processFunction</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.filter:CallbackPacketFilter:accept"><apiName>accept</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>packet</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.im"><apiName>org.igniterealtime.xiff.im</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.im:Roster"><apiName>Roster</apiName><shortdesc>
	 Manages a user's server-side instant messaging roster (or "buddy list").</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.im:IRoster</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.collections:ArrayCollection</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Manages a user's server-side instant messaging roster (or "buddy list"). By default,
	 this class uses an internal data provider to keep track of roster data locally and
	 provides a "read-only" form of the Data Provider API for external use. Non-read operations
	 are performed using alternative, roster-specific methods.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc3921#section-7"><linktext>http://tools.ietf.org/html/rfc3921#section-7</linktext></link></related-links><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.USER_SUBSCRIPTION_UPDATED_userSubscriptionUpdated"><apiName>userSubscriptionUpdated</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.USER_SUBSCRIPTION_UPDATED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.USER_PRESENCE_UPDATED_userPresenceUpdated"><apiName>userPresenceUpdated</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.USER_PRESENCE_UPDATED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.USER_REMOVED_userRemoved"><apiName>userRemoved</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.USER_REMOVED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.ROSTER_LOADED_rosterLoaded"><apiName>rosterLoaded</apiName><shortdesc>
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.ROSTER_LOADED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.USER_AVAILABLE_userAvailable"><apiName>userAvailable</apiName><shortdesc>
	 Broadcast whenever a contact in the roster becomes available.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.USER_AVAILABLE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Broadcast whenever a contact in the roster becomes available. (Goes from offline to online.)
	 The event object contains an attribute <codeph>jid</codeph> with the JID of the user who
	 became available.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.USER_UNAVAILABLE_userAvailable"><apiName>userAvailable</apiName><shortdesc>
	 Broadcast whenever a contact in the roster becomes unavailable.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.USER_UNAVAILABLE</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Broadcast whenever a contact in the roster becomes unavailable. (Goes from online to offline.)
	 The event object contains an attribute <codeph>jid</codeph> with the JID of the user who
	 became unavailable.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_DENIAL_subscriptionDenial"><apiName>subscriptionDenial</apiName><shortdesc>
	 Broadcast whenever a subscription request that you make (via the addContact()
	 or requestSubscription() methods) is denied.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_DENIAL</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Broadcast whenever a subscription request that you make (via the <codeph>addContact()</codeph>
	 or <codeph>requestSubscription()</codeph> methods) is denied.
	 	 The event object contains an attribute <codeph>jid</codeph> with the JID of the user who
	 denied the request.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_REQUEST_subscriptionRequest"><apiName>subscriptionRequest</apiName><shortdesc>
	 Broadcast whenever someone requests to subscribe to your presence.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_REQUEST</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Broadcast whenever someone requests to subscribe to your presence. The event object
	 contains an attribute <codeph>jid</codeph> with the JID of the user who is requesting
	 a presence subscription.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.im:Roster_org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_REVOCATION_subscriptionRevocation"><apiName>subscriptionRevocation</apiName><shortdesc>
	 Broadcast whenever someone revokes your presence subscription.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_REVOCATION</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.RosterEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Broadcast whenever someone revokes your presence subscription. This is not
	 an event that is fired when you revoke a subscription, but rather when one of your
	 contacts decides that he/she/it no longer wants you to know about their presence
	 status.
	 	 The event object contains an attribute <codeph>jid</codeph> with the JID of
	 the user who revoked your subscription.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.im:Roster:Roster"><apiName>Roster</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiData>null</apiData><apiDesc>A reference to an XMPPConnection class instance
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.im:Roster:addContact_result"><apiName>addContact_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:addContact"><apiName>addContact</apiName><shortdesc>
		 Adds a contact to the roster.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the contact to add
		 </apiDesc></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiDesc>A friendly name for use when displaying this contact in the roster
		 </apiDesc></apiParam><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>(Optional) The name of the group that this contact should be added to. (Used for
		 organization in the roster listing.
		 </apiDesc></apiParam><apiParam><apiItemName>requestSubscription</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>(Optional) Determines whether a subscription request should be sent
		 to this user. Most of the time you will want this parameter to be true.
		 You will be unable to view the contacts presence status until a subscription request is granted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a contact to the roster. Remember: All roster data is managed on the server-side,
		 so this contact is added to the server-side roster first, and upon successful addition,
		 reflected in the local client-side copy of the roster.
		 		 </apiDesc><example>This example adds a contact to the roster and simultaneously requests a presence subscription
		 with the new contact.
		 <pre>myRoster.addContact( "homer@springfield.com", "Homer", "Drinking Buddies", true );</pre>
		 </example></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:denySubscription"><apiName>denySubscription</apiName><shortdesc>
		 Revokes an existing presence subscription or denies a subscription request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the user or service that you are denying subscription
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Revokes an existing presence subscription or denies a subscription request. If a user
		 has sent you a subscription request you can use this method to deny that request. Otherwise,
		 if a user already has a granted presence subscription, you can use this method to revoke that
		 subscription.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:fetchRoster_result"><apiName>fetchRoster_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:fetchRoster"><apiName>fetchRoster</apiName><shortdesc>
		 Fetches the roster data from the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Fetches the roster data from the server. Once the data has been fetched, the Roster's data
		 provider is populated appropriately. If the Roster-XMPPConnection class dependency has been
		 set up before logging in, then this method will be called automatically because the Roster
		 listens for "login" events from the XMPPConnection.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:getContainingGroups"><apiName>getContainingGroups</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Array"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:getGroup"><apiName>getGroup</apiName><shortdesc>
		 Get a group by given name
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterGroup</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get a group by given name
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:getPresence"><apiName>getPresence</apiName><shortdesc>
		 Get the Presence of the given user if any.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data:IPresence</apiOperationClassifier></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get the Presence of the given user if any.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:grantSubscription"><apiName>grantSubscription</apiName><shortdesc>
		 Grants a user or service authorization for subscribing to your presence.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tojid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the user or service to grant subscription to
		 </apiDesc></apiParam><apiParam><apiItemName>requestAfterGrant</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Whether or not a reciprocal subscription request should be sent
		 to the grantee, so that you may, in turn, subscribe to his/her/its presence.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Grants a user or service authorization for subscribing to your presence. Once authorization
		 is granted, the user can see whether you are offline, online, away, etc. Subscriptions can
		 be revoked at any time using the <codeph>denySubscription()</codeph> method.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:removeContact"><apiName>removeContact</apiName><shortdesc>
		 Removes a contact from the roster and revokes all presence subscriptions for that contact.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>The value object which is to be removed
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes a contact from the roster and revokes all presence subscriptions for that contact.
		 This method will only attempt action if the contact you are trying to remove is currently on the
		 roster in the first place.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:requestSubscription"><apiName>requestSubscription</apiName><shortdesc>
		 Requests subscription authorization with a user or service.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the user or service that you wish to subscribe to
		 </apiDesc></apiParam><apiParam><apiItemName>isResponse</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Requests subscription authorization with a user or service. In the XMPP-world, you cannot receive
		 notifications on changes to a contact's presence until that contact has authorized you to subscribe
		 to his/her/its presence.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.im.xml#Roster/subscriptionDenial"><linktext>subscriptionDenial</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:setPresence"><apiName>setPresence</apiName><shortdesc>
		 Sets your current presence status.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>show</apiItemName><apiType value="String"/><apiDesc>The show type for your presence. This represents what others should see - whether
		 you are offline, online, away, etc.
		 </apiDesc></apiParam><apiParam><apiItemName>status</apiItemName><apiType value="String"/><apiDesc>The status message associated with the show value
		 </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiDesc>(Optional) A priority integer for the presence
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets your current presence status. Calling this method notifies others who
		 are subscribed to your presence of a presence change. You should use this to
		 change your status to away, extended-away, etc. There are static variables that
		 you can use defined in the presence class for the <codeph>show</codeph> parameter:
		 <ul>
		 <li><codeph>Presence.SHOW_AWAY</codeph></li>
		 <li><codeph>Presence.SHOW_CHAT</codeph></li>
		 <li><codeph>Presence.SHOW_DND</codeph></li>
		 <li><codeph>Presence.SHOW_NORMAL</codeph></li>
		 <li><codeph>Presence.SHOW_XA</codeph></li>
		 </ul>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#Presence"><linktext>org.igniterealtime.xiff.data.Presence</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:unsubscribe_result"><apiName>unsubscribe_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:updateContactGroups"><apiName>updateContactGroups</apiName><shortdesc>
		 Updates the groups associated with an existing contact.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>The value object of the contact to update
		 </apiDesc></apiParam><apiParam><apiItemName>newGroupNames</apiItemName><apiType value="Array"/><apiDesc>The new groups to associate the contact with
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Updates the groups associated with an existing contact.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:updateContactName"><apiName>updateContactName</apiName><shortdesc>
		 Updates the display name for an existing contact.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>The value object of the contact to update
		 </apiDesc></apiParam><apiParam><apiItemName>newName</apiItemName><apiType value="String"/><apiDesc>The new display name for this contact
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Updates the display name for an existing contact.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.im:Roster:connection:get"><apiName>connection</apiName><shortdesc>
		 The instance of the XMPPConnection class to use for the roster to use for
		 sending and receiving data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef><apiDesc>
		 The instance of the XMPPConnection class to use for the roster to use for
		 sending and receiving data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.im:IRoster"><apiName>IRoster</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.collections:ICollection</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:addContact"><apiName>addContact</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>requestSubscription</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:denySubscription"><apiName>denySubscription</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tojid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:fetchRoster"><apiName>fetchRoster</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:getContainingGroups"><apiName>getContainingGroups</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:getGroup"><apiName>getGroup</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterGroup</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:getPresence"><apiName>getPresence</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IPresence</apiOperationClassifier></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:grantSubscription"><apiName>grantSubscription</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tojid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>requestAfterGrant</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:removeContact"><apiName>removeContact</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:requestSubscription"><apiName>requestSubscription</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>isResponse</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:setPresence"><apiName>setPresence</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>show</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>status</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:updateContactGroups"><apiName>updateContactGroups</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam><apiParam><apiItemName>newGroupNames</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:updateContactName"><apiName>updateContactName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam><apiParam><apiItemName>newName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:connection:get"><apiName>connection</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.privatedata"><apiName>org.igniterealtime.xiff.privatedata</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.privatedata:IPrivatePayload"><apiName>IPrivatePayload</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.privatedata:PrivateDataManager"><apiName>PrivateDataManager</apiName><shortdesc>
	 XEP-0049: Private XML Storage
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 XEP-0049: Private XML Storage
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0049.html"><linktext>http://xmpp.org/extensions/xep-0049.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.privatedata:PrivateDataManager:PrivateDataManager"><apiName>PrivateDataManager</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.privatedata:PrivateDataManager:getPrivateData"><apiName>getPrivateData</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>elementNamespace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.util:Callback</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.privatedata:PrivateDataManager:setPrivateData"><apiName>setPrivateData</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>elementNamespace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>payload</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.privatedata:IPrivatePayload</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.privatedata:PrivateDataManager:connection:get"><apiName>connection</apiName><shortdesc>
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiValueClassifier></apiValueDef><apiDesc>
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.util"><apiName>org.igniterealtime.xiff.util</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.util:Hex"><apiName>Hex</apiName><shortdesc>
	 Utility for reading and writing Hex formatted data to/from ByteArray.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Utility for reading and writing Hex formatted data to/from ByteArray.
	 </apiDesc></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:Hex:readBytes"><apiName>readBytes</apiName><shortdesc>
		 Read the bytes of the given bytearray and convert to a hex string
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>String in hex format
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>ba</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Read the bytes of the given bytearray and convert to a hex string
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:Hex:writeBytes"><apiName>writeBytes</apiName><shortdesc>
		 Write the given hex string to the bytearray
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>ByteArray that has the hex written in it
		 </apiDesc><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>ba</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>hex</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Write the given hex string to the bytearray
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:ICompressor"><apiName>ICompressor</apiName><shortdesc>
	 Interface for implementing Stream Compression
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Interface for implementing Stream Compression
	 </apiDesc></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:ICompressor:org.igniterealtime.xiff.util:ICompressor:clear"><apiName>clear</apiName><shortdesc>
		 Finish compressing in this session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Finish compressing in this session.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ICompressor:org.igniterealtime.xiff.util:ICompressor:compress"><apiName>compress</apiName><shortdesc>
		 Compress the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef><apiDesc>
		 Compress the given ByteArray.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ICompressor:org.igniterealtime.xiff.util:ICompressor:uncompress"><apiName>uncompress</apiName><shortdesc>
		 Uncompress the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef><apiDesc>
		 Uncompress the given ByteArray.
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:Zlib"><apiName>Zlib</apiName><shortdesc>
	 Compress the given ByteArrays by using the as3zlib library.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.util:ICompressor</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Compress the given ByteArrays by using the as3zlib library.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://code.google.com/p/as3zlib/"><linktext>http://code.google.com/p/as3zlib/</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.util:Zlib:Zlib"><apiName>Zlib</apiName><shortdesc>
		 Stream Compression - Zlib
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Stream Compression - Zlib
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.util:Zlib:clear"><apiName>clear</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:Zlib:compress"><apiName>compress</apiName><shortdesc>
		 Compress (deflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Compressed data
		 </apiDesc><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Compress (deflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:Zlib:uncompress"><apiName>uncompress</apiName><shortdesc>
		 Uncompress (inflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Uncompressed data
		 </apiDesc><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Uncompress (inflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:SHA1"><apiName>SHA1</apiName><shortdesc>
	 A static class for SHA1 hash creation.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A static class for SHA1 hash creation. Original ActionScript 1.0 version
	 by Branden Hall. Original ActionScript 2.0 translation by Ron Haberle.
	 </apiDesc></apiClassifierDetail><related-links><link href="http://csrc.nist.gov/groups/ST/hash/statement.html"><linktext>http://csrc.nist.gov/groups/ST/hash/statement.html</linktext></link><link href="http://tools.ietf.org/html/rfc3174"><linktext>http://tools.ietf.org/html/rfc3174</linktext></link></related-links><apiOperation id="org.igniterealtime.xiff.util:SHA1:calcSHA1"><apiName>calcSHA1</apiName><shortdesc>
		 Takes a string and returns the hex representation of its SHA1 hash.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>The SHA1 hash of the string passed to the function
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>str</apiItemName><apiType value="String"/><apiDesc>The string to use for calculating the hash
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Takes a string and returns the hex representation of its SHA1 hash.
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:Callback"><apiName>Callback</apiName><shortdesc>
	 Sets an callback function
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Sets an callback function
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.util:Callback:Callback"><apiName>Callback</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scope</apiItemName><apiType value="Object"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>args
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.util:Callback:call"><apiName>call</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiType value="Object"/></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>args
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:DateTimeParser"><apiName>DateTimeParser</apiName><shortdesc>
	 A set of static functions to parse the time and date values.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A set of static functions to parse the time and date values.
	 All date related methods are the UTC versions.
	 	 <p>Also methods for handling legacy format are available</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0082.html"><linktext>http://xmpp.org/extensions/xep-0082.html</linktext></link><link href="http://xmpp.org/extensions/xep-0090.html"><linktext>http://xmpp.org/extensions/xep-0090.html</linktext></link></related-links><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:date2legacyString"><apiName>date2legacyString</apiName><shortdesc>
		 Convert a Date object to a string, CCYYMMDD, using UTC timezone.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc><codeph>CCYYMMDD</codeph>
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>date</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string, <codeph>CCYYMMDD</codeph>, using UTC timezone.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:date2string"><apiName>date2string</apiName><shortdesc>
		 Convert a Date object to a string, CCYY-MM-DD
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc><codeph>CCYY-MM-DD</codeph>
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>date</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string, <codeph>CCYY-MM-DD</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:dateTime2string"><apiName>dateTime2string</apiName><shortdesc>
		 Convert a Date object to a string CCYY-MM-DDThh:mm:ss[.sss]TZD
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc><codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph>
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>dateTime</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>ms</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Include milliseconds in the resulting string
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string <codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:legacyString2dateTime"><apiName>legacyString2dateTime</apiName><shortdesc>
		 Convert a legacy string CCYYMMDDThh:mm:ss to a Date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Date object
		 </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a legacy string <codeph>CCYYMMDDThh:mm:ss</codeph> to a Date object
		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0090.html"><linktext>http://xmpp.org/extensions/xep-0090.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:legacyString2date"><apiName>legacyString2date</apiName><shortdesc>
		 Convert a lecagy string CCYYMMDD to a Date object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Date object
		 </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a lecagy string <codeph>CCYYMMDD</codeph> to a Date object.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:string2dateTime"><apiName>string2dateTime</apiName><shortdesc>
		 Convert a string CCYY-MM-DDThh:mm:ss[.sss]TZD to a Date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Date object
		 </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a string <codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph> to a Date object
		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0082.html"><linktext>http://xmpp.org/extensions/xep-0082.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:string2date"><apiName>string2date</apiName><shortdesc>
		 Convert a string CCYY-MM-DD to a date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Date object
		 </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a string <codeph>CCYY-MM-DD</codeph> to a date object
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:string2time"><apiName>string2time</apiName><shortdesc>
		 Convert a string hh:mm:ss[.sss][TZD] to a Date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Date object
		 </apiDesc><apiType value="Date"/></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a string <codeph>hh:mm:ss[.sss][TZD]</codeph> to a Date object
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:time2string"><apiName>time2string</apiName><shortdesc>
		 Convert a Date object to a string hh:mm:ss[.sss][TZD]
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc><codeph>hh:mm:ss[.sss][TZD]</codeph>
		 </apiDesc><apiType value="String"/></apiReturn><apiParam><apiItemName>time</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>ms</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Include milliseconds in the resulting string
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string <codeph>hh:mm:ss[.sss][TZD]</codeph>
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:ZlibNative"><apiName>ZlibNative</apiName><shortdesc>
	 Compress the given ByteArrays by using the Flash
	 Player 10 native CompressionAlgorithm.ZLIB.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.util:ICompressor</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Compress the given ByteArrays by using the Flash
	 Player 10 native CompressionAlgorithm.ZLIB.
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/CompressionAlgorithm.html"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/CompressionAlgorithm.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.util:ZlibNative:ZlibNative"><apiName>ZlibNative</apiName><shortdesc>
		 Stream Compression - Native DEFLATE
		 		 All multi-byte numbers in the format described in RFC 1950 are stored with
		 the MOST-significant byte first (at the lower memory address).
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Stream Compression - Native DEFLATE
		 		 <p>All multi-byte numbers in the format described in RFC 1950 are stored with
		 the MOST-significant byte first (at the lower memory address).</p>
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://tools.ietf.org/html/rfc1950"><linktext>http://tools.ietf.org/html/rfc1950</linktext></link></related-links></apiConstructor><apiOperation id="org.igniterealtime.xiff.util:ZlibNative:clear"><apiName>clear</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ZlibNative:compress"><apiName>compress</apiName><shortdesc>
		 Compress (deflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Compressed data
		 </apiDesc><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Compress (deflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#deflate%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#deflate%28%29</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ZlibNative:uncompress"><apiName>uncompress</apiName><shortdesc>
		 Uncompress (inflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Uncompressed data
		 </apiDesc><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Uncompress (inflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#inflate%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#inflate%28%29</linktext></link></related-links></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.vcard"><apiName>org.igniterealtime.xiff.vcard</apiName><apiDetail/><apiClassifier id="org.igniterealtime.xiff.vcard:VCardPhoto"><apiName>VCardPhoto</apiName><shortdesc>
	 Photograph.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardPhoto</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Photograph.
	 	 <p>The image height and width SHOULD be between thirty-two (32) and ninety-six (96) pixels;
	 the recommended size is sixty-four (64) pixels high and sixty-four (64) pixels wide.</p>
	 	 <p>The image SHOULD be square.</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://xmpp.org/extensions/xep-0153.html"><linktext>http://xmpp.org/extensions/xep-0153.html</linktext></link></related-links><apiConstructor id="org.igniterealtime.xiff.vcard:VCardPhoto:VCardPhoto"><apiName>VCardPhoto</apiName><shortdesc>
		 To save a photo, either binaryValue or externalValue are required, but not both.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The image type of the photo. Required if binaryValue is passed in.
		 </apiDesc></apiParam><apiParam><apiItemName>binaryValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The BASE64 encoded binary value of the photo. Either binaryValue or externalValue are required, but not both.
		 </apiDesc></apiParam><apiParam><apiItemName>externalValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The URI to an external photo. Either binaryValue or externalValue are required, but not both.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 To save a photo, either binaryValue or externalValue are required, but not both.
		 If binaryValue is passed in, type is required.
		 If externalValue is passed in, type is not required.
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.vcard:VCardPhoto:binaryValue:get"><apiName>binaryValue</apiName><shortdesc>
		 Base64 encoded data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Base64 encoded data.
		 The image SHOULD use less than eight kilobytes (8k) of data; this
		 restriction is to be enforced by the publishing client.
		 		 <p>The image data MUST conform to the base64Binary datatype [7] and thus be encoded in accordance with
		 Section 6.8 of RFC 2045 [8], which recommends that base64 data should have lines limited to at most
		 76 characters in length. However, any whitespace characters (e.g., '\\r' and '\\n') MUST be ignored.</p>
		 		 </apiDesc></apiValueDetail><related-links><link href="http://tools.ietf.org/html/rfc2045#section-6.8"><linktext>http://tools.ietf.org/html/rfc2045#section-6.8</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardPhoto:bytes:get"><apiName>bytes</apiName><shortdesc>
		 Image data
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.utils:ByteArray"/></apiValueDef><apiDesc>
		 Image data
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardPhoto:externalValue:get"><apiName>externalValue</apiName><shortdesc>
		 The URI to an external photo
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 The URI to an external photo
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardPhoto:type:get"><apiName>type</apiName><shortdesc>
		 Mimetype of the given bytes value, if any.</shortdesc><prolog><asCustoms><exampleText>image/jpeg
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Mimetype of the given <codeph>bytes</codeph> value, if any.
		 Should be set by hand.
		 		 <p>The image content type [6] SHOULD be image/gif, image/jpeg, or image/png; support for the
		 "image/png" content type is REQUIRED, support for the "image/gif" and "image/jpeg" content
		 types is RECOMMENDED, and support for any other content type is OPTIONAL.</p>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardAddress"><apiName>VCardAddress</apiName><shortdesc>
	 Structured address.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardAddress</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Structured address.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardAddress:VCardAddress"><apiName>VCardAddress</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>street</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>locality</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>region</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>postalCode</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>country</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>extendedAddress</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>poBox</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.vcard:VCardAddress:country:get"><apiName>country</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardAddress:extendedAddress:get"><apiName>extendedAddress</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardAddress:locality:get"><apiName>locality</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardAddress:poBox:get"><apiName>poBox</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardAddress:postalCode:get"><apiName>postalCode</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardAddress:region:get"><apiName>region</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardAddress:street:get"><apiName>street</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardName"><apiName>IVCardName</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.vcard:IVCardName:org.igniterealtime.xiff.vcard:IVCardName:family:get"><apiName>family</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardName:org.igniterealtime.xiff.vcard:IVCardName:given:get"><apiName>given</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardName:org.igniterealtime.xiff.vcard:IVCardName:middle:get"><apiName>middle</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardName:org.igniterealtime.xiff.vcard:IVCardName:prefix:get"><apiName>prefix</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardName:org.igniterealtime.xiff.vcard:IVCardName:suffix:get"><apiName>suffix</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardOrganization"><apiName>VCardOrganization</apiName><shortdesc>
	 Organizational name and unit.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardOrganization</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Organizational name and unit.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardOrganization:VCardOrganization"><apiName>VCardOrganization</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>unit</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.vcard:VCardOrganization:name:get"><apiName>name</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardOrganization:unit:get"><apiName>unit</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCard"><apiName>IVCard</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:handleVCard"><apiName>handleVCard</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>iq</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:saveVCard"><apiName>saveVCard</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:birthday:get"><apiName>birthday</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:description:get"><apiName>description</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:email:get"><apiName>email</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:extensions:get"><apiName>extensions</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.utils:Dictionary"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:formattedName:get"><apiName>formattedName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:geographicalPosition:get"><apiName>geographicalPosition</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardGeographicalPosition</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:homeAddressLabel:get"><apiName>homeAddressLabel</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:homeAddress:get"><apiName>homeAddress</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardAddress</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:homeTelephone:get"><apiName>homeTelephone</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardTelephone</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:jid:get"><apiName>jid</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:loaded:get"><apiName>loaded</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:logo:get"><apiName>logo</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardPhoto</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:mailer:get"><apiName>mailer</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardName</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:nickname:get"><apiName>nickname</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:note:get"><apiName>note</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:organization:get"><apiName>organization</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardOrganization</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:photo:get"><apiName>photo</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardPhoto</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:privacyClass:get"><apiName>privacyClass</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:productID:get"><apiName>productID</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:revision:get"><apiName>revision</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:role:get"><apiName>role</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:sortString:get"><apiName>sortString</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:sound:get"><apiName>sound</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardSound</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:timezone:get"><apiName>timezone</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:title:get"><apiName>title</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:uid:get"><apiName>uid</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:url:get"><apiName>url</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:version:get"><apiName>version</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:workAddressLabel:get"><apiName>workAddressLabel</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:workAddress:get"><apiName>workAddress</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardAddress</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:workTelephone:get"><apiName>workTelephone</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardTelephone</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardTelephone"><apiName>IVCardTelephone</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.vcard:IVCardTelephone:org.igniterealtime.xiff.vcard:IVCardTelephone:cell:get"><apiName>cell</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardTelephone:org.igniterealtime.xiff.vcard:IVCardTelephone:fax:get"><apiName>fax</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardTelephone:org.igniterealtime.xiff.vcard:IVCardTelephone:msg:get"><apiName>msg</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardTelephone:org.igniterealtime.xiff.vcard:IVCardTelephone:pager:get"><apiName>pager</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardTelephone:org.igniterealtime.xiff.vcard:IVCardTelephone:video:get"><apiName>video</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardTelephone:org.igniterealtime.xiff.vcard:IVCardTelephone:voice:get"><apiName>voice</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardSound"><apiName>IVCardSound</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.vcard:IVCardSound:org.igniterealtime.xiff.vcard:IVCardSound:binaryValue:get"><apiName>binaryValue</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardSound:org.igniterealtime.xiff.vcard:IVCardSound:bytes:get"><apiName>bytes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.utils:ByteArray"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardSound:org.igniterealtime.xiff.vcard:IVCardSound:externalValue:get"><apiName>externalValue</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardSound:org.igniterealtime.xiff.vcard:IVCardSound:phonetic:get"><apiName>phonetic</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardSound"><apiName>VCardSound</apiName><shortdesc>
	 Formatted name pronunciation property.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardSound</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Formatted name pronunciation property.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardSound:VCardSound"><apiName>VCardSound</apiName><shortdesc>
		 To save a sound, either phonetic, binaryValue or externalValue are required.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>phonetic</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The textual phonetic pronunciation.
		 </apiDesc></apiParam><apiParam><apiItemName>binaryValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The BASE64 encoded binary value of the audio pronunciation.
		 </apiDesc></apiParam><apiParam><apiItemName>externalValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The URI to an external binary digital audio pronunciation.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 To save a sound, either phonetic, binaryValue or externalValue are required.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.vcard:VCardSound:binaryValue:get"><apiName>binaryValue</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardSound:bytes:get"><apiName>bytes</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.utils:ByteArray"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardSound:externalValue:get"><apiName>externalValue</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardSound:phonetic:get"><apiName>phonetic</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardName"><apiName>VCardName</apiName><shortdesc>
	 Structured name.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardName</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Structured name.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardName:VCardName"><apiName>VCardName</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>given</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>middle</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>family</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>suffix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.vcard:VCardName:family:get"><apiName>family</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardName:given:get"><apiName>given</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardName:middle:get"><apiName>middle</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardName:prefix:get"><apiName>prefix</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardName:suffix:get"><apiName>suffix</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCard"><apiName>VCard</apiName><shortdesc>
	 VCard updates in 2010:
	 	 New vCard data classes to encompass similar properties:
	 
	 VCardAddress (country, extendedAddress, locality, poBox, postalCode, region, street)
	 VCardGeographicalPosition (latitude, longitude)
	 VCardName (family, given, middle, prefix, suffix)
	 VCardOrganization (name, unit)
	 VCardPhoto (binaryValue, bytes, externalValue, type)
	 VCardSound (binaryValue, bytes, externalValue, phonetic)
	 VCardTelephone (cell, fax, msg, pager, video, voice)
	 
	 	 TODO: The only properties not yet implemented from the spec: agent, categories, key
	 	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCard</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc>
	 VCard updates in 2010:
	 	 <p>New vCard data classes to encompass similar properties:</p>
	 <ul>
	 <li>VCardAddress (country, extendedAddress, locality, poBox, postalCode, region, street)</li>
	 <li>VCardGeographicalPosition (latitude, longitude)</li>
	 <li>VCardName (family, given, middle, prefix, suffix)</li>
	 <li>VCardOrganization (name, unit)</li>
	 <li>VCardPhoto (binaryValue, bytes, externalValue, type)</li>
	 <li>VCardSound (binaryValue, bytes, externalValue, phonetic)</li>
	 <li>VCardTelephone (cell, fax, msg, pager, video, voice)</li>
	 </ul>
	 	 <p>TODO: The only properties not yet implemented from the spec: agent, categories, key</p>
	 	 </apiDesc></apiClassifierDetail><related-links><link href="http://tools.ietf.org/html/rfc2426"><linktext>http://tools.ietf.org/html/rfc2426</linktext></link></related-links><adobeApiEvent id="org.igniterealtime.xiff.vcard:VCard_org.igniterealtime.xiff.events.VCardEvent.SAVE_ERROR_saveError"><apiName>saveError</apiName><shortdesc>
	 Dispatched when saving the vCard fails.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.VCardEvent.SAVE_ERROR</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.VCardEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when saving the vCard fails.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.vcard:VCard_org.igniterealtime.xiff.events.VCardEvent.SAVED_saved"><apiName>saved</apiName><shortdesc>
	 Dispatched when the vCard has been saved.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.VCardEvent.SAVED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.VCardEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the vCard has been saved.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="org.igniterealtime.xiff.vcard:VCard_org.igniterealtime.xiff.events.VCardEvent.LOADED_loaded"><apiName>loaded</apiName><shortdesc>
	 Dispatched when the vCard has loaded.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>org.igniterealtime.xiff.events.VCardEvent.LOADED</apiEventType><adobeApiEventClassifier>org.igniterealtime.xiff.events.VCardEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Dispatched when the vCard has loaded.
	 	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="org.igniterealtime.xiff.vcard:VCard:VCard"><apiName>VCard</apiName><shortdesc>
		 Don't call directly, use the static method getVCard() and add a callback.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Don't call directly, use the static method getVCard() and add a callback.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="org.igniterealtime.xiff.vcard:VCard:clearCache"><apiName>clearCache</apiName><shortdesc>
		 Immediately clears the vCard cache.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Immediately clears the vCard cache.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:createExtension"><apiName>createExtension</apiName><shortdesc>
		 Create the XML needed to send the VCard within the Extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc/><apiOperationClassifier>org.igniterealtime.xiff.data.vcard:VCardExtension</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create the XML needed to send the VCard within the Extension.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:expireCache"><apiName>expireCache</apiName><shortdesc>
		 Immediately expires the vCard cache.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Immediately expires the vCard cache.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:getVCard"><apiName>getVCard</apiName><shortdesc>
		 The way a vCard is requested and then later referred to.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiDesc>Reference to the vCard which will be filled once the loaded event occurs.
		 </apiDesc><apiOperationClassifier>org.igniterealtime.xiff.vcard:VCard</apiOperationClassifier></apiReturn><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The way a vCard is requested and then later referred to.
		 <codeph>var vCard:VCard = VCard.getVCard( connection, jid );
		 vCard.addEventListener( VCardEvent.LOADED, onVCardLoaded );</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:handleVCard"><apiName>handleVCard</apiName><shortdesc>
		 Deserializes the incoming IQ to fill the values of this vCard.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>iq</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Deserializes the incoming IQ to fill the values of this vCard.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:saveVCard_result"><apiName>saveVCard_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:saveVCard"><apiName>saveVCard</apiName><shortdesc>
		 Saves a vCard.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Saves a vCard.
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="org.igniterealtime.xiff.vcard:VCard:cacheFlushInterval"><apiName>cacheFlushInterval</apiName><shortdesc>
		 The interval on which to flush the vCard cache.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiData>unknown</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The interval on which to flush the vCard cache.
		 The default value is 6 hours.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:birthday:get"><apiName>birthday</apiName><shortdesc>
		 Birthday.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/></apiValueDef><apiDesc>
		 Birthday.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:description:get"><apiName>description</apiName><shortdesc>
		 Free-form descriptive text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Free-form descriptive text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:email:get"><apiName>email</apiName><shortdesc>
		 Email address.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Email address.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:extensions:get"><apiName>extensions</apiName><shortdesc>
		 Map of the vCard's private extensions.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="flash.utils:Dictionary"/></apiValueDef><apiDesc>
		 Map of the vCard's private extensions.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:formattedName:get"><apiName>formattedName</apiName><shortdesc>
		 Formatted or display name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Formatted or display name.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:geographicalPosition:get"><apiName>geographicalPosition</apiName><shortdesc>
		 Geographical position.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardGeographicalPosition</apiValueClassifier></apiValueDef><apiDesc>
		 Geographical position.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:homeAddressLabel:get"><apiName>homeAddressLabel</apiName><shortdesc>
		 Home address label.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Home address label.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:homeAddress:get"><apiName>homeAddress</apiName><shortdesc>
		 Structured home address.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardAddress</apiValueClassifier></apiValueDef><apiDesc>
		 Structured home address.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:homeTelephone:get"><apiName>homeTelephone</apiName><shortdesc>
		 Home telephone number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardTelephone</apiValueClassifier></apiValueDef><apiDesc>
		 Home telephone number.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:jid:get"><apiName>jid</apiName><shortdesc>
		 Jabber ID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiValueClassifier></apiValueDef><apiDesc>
		 Jabber ID.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:loaded:get"><apiName>loaded</apiName><shortdesc>
		 Indicates whether the vCard has been loaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates whether the vCard has been loaded.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:logo:get"><apiName>logo</apiName><shortdesc>
		 Organization logo.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardPhoto</apiValueClassifier></apiValueDef><apiDesc>
		 Organization logo.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:mailer:get"><apiName>mailer</apiName><shortdesc>
		 Mailer (e.g., Mail User Agent Type).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Mailer (e.g., Mail User Agent Type).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:name:get"><apiName>name</apiName><shortdesc>
		 Structured name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardName</apiValueClassifier></apiValueDef><apiDesc>
		 Structured name.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:nickname:get"><apiName>nickname</apiName><shortdesc>
		 Nickname.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Nickname.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:note:get"><apiName>note</apiName><shortdesc>
		 Commentary note.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Commentary note.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:organization:get"><apiName>organization</apiName><shortdesc>
		 Organizational name and unit.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardOrganization</apiValueClassifier></apiValueDef><apiDesc>
		 Organizational name and unit.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:photo:get"><apiName>photo</apiName><shortdesc>
		 Photograph.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardPhoto</apiValueClassifier></apiValueDef><apiDesc>
		 Photograph.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:privacyClass:get"><apiName>privacyClass</apiName><shortdesc>
		 Privacy classification.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Privacy classification.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:productID:get"><apiName>productID</apiName><shortdesc>
		 Identifier of product that generated the vCard.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Identifier of product that generated the vCard.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:revision:get"><apiName>revision</apiName><shortdesc>
		 Last revised.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/></apiValueDef><apiDesc>
		 Last revised.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:role:get"><apiName>role</apiName><shortdesc>
		 Role.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Role.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:sortString:get"><apiName>sortString</apiName><shortdesc>
		 Sort string.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Sort string.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:sound:get"><apiName>sound</apiName><shortdesc>
		 Formatted name pronunciation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardSound</apiValueClassifier></apiValueDef><apiDesc>
		 Formatted name pronunciation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:timezone:get"><apiName>timezone</apiName><shortdesc>
		 Time zone's Standard Time UTC offset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Date"/></apiValueDef><apiDesc>
		 Time zone's Standard Time UTC offset.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:title:get"><apiName>title</apiName><shortdesc>
		 Title.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Title.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:uid:get"><apiName>uid</apiName><shortdesc>
		 Unique identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Unique identifier.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:url:get"><apiName>url</apiName><shortdesc>
		 Directory URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Directory URL.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:version:get"><apiName>version</apiName><shortdesc>
		 Version of the vCard.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Version of the vCard. Usually 2.0 or 3.0.
		 </apiDesc></apiValueDetail><related-links><link href="http://xmpp.org/extensions/xep-0054.html#impl"><linktext>http://xmpp.org/extensions/xep-0054.html#impl</linktext></link></related-links></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:workAddressLabel:get"><apiName>workAddressLabel</apiName><shortdesc>
		 Work address label.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 Work address label.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:workAddress:get"><apiName>workAddress</apiName><shortdesc>
		 Structured work address.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardAddress</apiValueClassifier></apiValueDef><apiDesc>
		 Structured work address.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCard:workTelephone:get"><apiName>workTelephone</apiName><shortdesc>
		 Work telephone number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>org.igniterealtime.xiff.vcard:IVCardTelephone</apiValueClassifier></apiValueDef><apiDesc>
		 Work telephone number.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardAddress"><apiName>IVCardAddress</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.vcard:IVCardAddress:org.igniterealtime.xiff.vcard:IVCardAddress:country:get"><apiName>country</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardAddress:org.igniterealtime.xiff.vcard:IVCardAddress:extendedAddress:get"><apiName>extendedAddress</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardAddress:org.igniterealtime.xiff.vcard:IVCardAddress:locality:get"><apiName>locality</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardAddress:org.igniterealtime.xiff.vcard:IVCardAddress:poBox:get"><apiName>poBox</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardAddress:org.igniterealtime.xiff.vcard:IVCardAddress:postalCode:get"><apiName>postalCode</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardAddress:org.igniterealtime.xiff.vcard:IVCardAddress:region:get"><apiName>region</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardAddress:org.igniterealtime.xiff.vcard:IVCardAddress:street:get"><apiName>street</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardOrganization"><apiName>IVCardOrganization</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.vcard:IVCardOrganization:org.igniterealtime.xiff.vcard:IVCardOrganization:name:get"><apiName>name</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardOrganization:org.igniterealtime.xiff.vcard:IVCardOrganization:unit:get"><apiName>unit</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardGeographicalPosition"><apiName>IVCardGeographicalPosition</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:latitude:get"><apiName>latitude</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:longitude:get"><apiName>longitude</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardPhoto"><apiName>IVCardPhoto</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiValue id="org.igniterealtime.xiff.vcard:IVCardPhoto:org.igniterealtime.xiff.vcard:IVCardPhoto:binaryValue:get"><apiName>binaryValue</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardPhoto:org.igniterealtime.xiff.vcard:IVCardPhoto:bytes:get"><apiName>bytes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="flash.utils:ByteArray"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardPhoto:org.igniterealtime.xiff.vcard:IVCardPhoto:externalValue:get"><apiName>externalValue</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:IVCardPhoto:org.igniterealtime.xiff.vcard:IVCardPhoto:type:get"><apiName>type</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardTelephone"><apiName>VCardTelephone</apiName><shortdesc>
	 Telephone number.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardTelephone</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Telephone number.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardTelephone:VCardTelephone"><apiName>VCardTelephone</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>voice</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>fax</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>pager</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>msg</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>cell</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>video</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.vcard:VCardTelephone:cell:get"><apiName>cell</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardTelephone:fax:get"><apiName>fax</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardTelephone:msg:get"><apiName>msg</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardTelephone:pager:get"><apiName>pager</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardTelephone:video:get"><apiName>video</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardTelephone:voice:get"><apiName>voice</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardGeographicalPosition"><apiName>VCardGeographicalPosition</apiName><shortdesc>
	 Geographical position.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardGeographicalPosition</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Geographical position.
	 </apiDesc></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardGeographicalPosition:VCardGeographicalPosition"><apiName>VCardGeographicalPosition</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>latitude</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>longitude</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="org.igniterealtime.xiff.vcard:VCardGeographicalPosition:latitude:get"><apiName>latitude</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue><apiValue id="org.igniterealtime.xiff.vcard:VCardGeographicalPosition:longitude:get"><apiName>longitude</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage></allClasses>