<?xml version="1.0" encoding="UTF-8"?><allClasses><apiPackage id="org.igniterealtime.xiff.auth"><apiName>org.igniterealtime.xiff.auth</apiName><apiClassifier id="org.igniterealtime.xiff.auth:ISASLAuth"><apiName>ISASLAuth</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:ISASLAuth:org.igniterealtime.xiff.auth:ISASLAuth:handleChallenge"><apiName>handleChallenge</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="XML"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:ISASLAuth:org.igniterealtime.xiff.auth:ISASLAuth:handleResponse"><apiName>handleResponse</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:SASLAuth"><apiName>SASLAuth</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:SASLAuth:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="XML"/><apiDesc>The XML response to the challenge.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:SASLAuth:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.auth:SASLAuth:SASLAuth"><apiName>SASLAuth</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:DigestMD5"><apiName>DigestMD5</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:DigestMD5:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="XML"/><apiDesc>The XML response to the challenge.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:DigestMD5:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Object"/><apiDesc>An object specifying the current state of the authentication.
		</apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		</apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
				</apiDesc></apiParam></apiOperationDef><apiDesc>
		Called when a response to this authentication is received.
				</apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.auth:DigestMD5:DigestMD5"><apiName>DigestMD5</apiName><shortdesc>
		Creates a new External authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance in use.
		</apiDesc></apiParam></apiConstructorDef><apiDesc>
		Creates a new External authentication object.
				</apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:Anonymous"><apiName>Anonymous</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:Anonymous:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Object"/><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.auth:Anonymous:Anonymous"><apiName>Anonymous</apiName><shortdesc>
		 Creates a new Anonymous authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance to use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new Anonymous authentication object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:XFacebookPlatform"><apiName>XFacebookPlatform</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:XFacebookPlatform:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="XML"/><apiDesc>The XML response to the challenge.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 <p>The mechanism starts with a server challenge, in the form of a common HTTP query string:
		 an ampersand-separated sequence of equals-sign-delimited key/value pairs.
		 The keys and values are UTF-8-encoded and URL-encoded.
		 The query string contains two items: method and nonce.</p>
		 		 <p>The client's reply should be a similarly-encoded query string prepared as if it were
		 going to call a method against the Facebook API. The call should contain the
		 following parameters:</p>
		 <ul>
		 <li>string method: Should be the same as the method specified by the server.</li>
		 <li>string api_key: The application key associated with the calling application.</li>
		 <li>string access_token: The access_token obtained in the above step.</li>
		 <li>float call_id: The request's sequence number.</li>
		 <li>string v: This must be set to 1.0 to use this version of the API.</li>
		 <li>string format: Optional - Ignored.</li>
		 <li>string cnonce: Optional - Client-selected nonce. Ignored.</li>
		 <li>string nonce: Should be the same as the nonce specified by the server.</li>
		 </ul>
		 		 <p>The server will then respond with a success or failure message.
		 Note that this needs to be over TLS or you'll get an error.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:XFacebookPlatform:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Object"/><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.auth:XFacebookPlatform:XFacebookPlatform"><apiName>XFacebookPlatform</apiName><shortdesc>
		 Creates a new XFacebookPlatform authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance in use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new XFacebookPlatform authentication object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:Plain"><apiName>Plain</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:Plain:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Object"/><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.auth:Plain:Plain"><apiName>Plain</apiName><shortdesc>
		 Creates a new Plain authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier></apiParam></apiConstructorDef><apiDesc>
		 Creates a new Plain authentication object.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:XOAuth2"><apiName>XOAuth2</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:XOAuth2:handleChallenge"><apiName>handleChallenge</apiName><shortdesc>
		 Called when a challenge to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="XML"/><apiDesc>The XML response to the challenge.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>challenge</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication challenge.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a challenge to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.auth:XOAuth2:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Object"/><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.auth:XOAuth2:XOAuth2"><apiName>XOAuth2</apiName><shortdesc>
		 Creates a OAuth v2 authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the XMPPConnection instance in use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a OAuth v2 authentication object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.auth:External"><apiName>External</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.auth:ISASLAuth</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.auth:SASLAuth</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.auth:External:handleResponse"><apiName>handleResponse</apiName><shortdesc>
		 Called when a response to this authentication is received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="Object"/><apiDesc>An object specifying the current state of the authentication.
		 </apiDesc></apiReturn><apiParam><apiItemName>stage</apiItemName><apiType value="int"/><apiDesc>The current stage in the authentication process.
		 </apiDesc></apiParam><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>The XML of the actual authentication response.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Called when a response to this authentication is received.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.auth:External:External"><apiName>External</apiName><shortdesc>
		 Creates a new External authentication object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier></apiParam></apiConstructorDef><apiDesc>
		 Creates a new External authentication object.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.bookmark"><apiName>org.igniterealtime.xiff.bookmark</apiName><apiClassifier id="org.igniterealtime.xiff.bookmark:GroupChatBookmark"><apiName>GroupChatBookmark</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.bookmark:GroupChatBookmark:GroupChatBookmark"><apiName>GroupChatBookmark</apiName><shortdesc>
		 A common use case is bookmarking of multi-user chat rooms.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>		REQUIRED
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	RECOMMENDED
		 </apiDesc></apiParam><apiParam><apiItemName>autoJoin</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>OPTIONAL
		 </apiDesc></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>OPTIONAL
		 </apiDesc></apiParam><apiParam><apiItemName>password</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>NOT RECOMMENDED
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 A common use case is bookmarking of multi-user chat rooms.
		 A room is bookmarked using the <b>conference</b> child element.
		 		 <p>Most of the properties can be set only via constructor or by setting the XML.</p>
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://xmpp.org/extensions/xep-0048.html#format-conference"><linktext>http://xmpp.org/extensions/xep-0048.html#format-conference</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.bookmark:UrlBookmark"><apiName>UrlBookmark</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.bookmark:UrlBookmark:UrlBookmark"><apiName>UrlBookmark</apiName><shortdesc>
		 Bookmark an url.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiDesc>REQUIRED
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>RECOMMENDED
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Bookmark an url.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.bookmark:BookmarkManager"><apiName>BookmarkManager</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:addGroupChatBookmark"><apiName>addGroupChatBookmark</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>serverBookmark</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.bookmark:GroupChatBookmark</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:fetchBookmarks"><apiName>fetchBookmarks</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:getGroupChatBookmark"><apiName>getGroupChatBookmark</apiName><shortdesc>
		 Get a group chat bookmark with the given JID
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.bookmark:GroupChatBookmark</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get a group chat bookmark with the given JID
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:isGroupChatBookmarked"><apiName>isGroupChatBookmarked</apiName><shortdesc>
		 Does there exist a group chat bookmark with the given JID
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does there exist a group chat bookmark with the given JID
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:removeGroupChatBookmark"><apiName>removeGroupChatBookmark</apiName><shortdesc>
		 Remove
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkManager:setAutoJoin"><apiName>setAutoJoin</apiName><shortdesc>
		 Set autoJoin for the given bookmark JID
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>state</apiItemName><apiType value="Boolean"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Set autoJoin for the given bookmark JID
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.bookmark:BookmarkManager:BookmarkManager"><apiName>BookmarkManager</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>privateDataManager</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.privatedata:PrivateDataManager</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload"><apiName>BookmarkPrivatePayload</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.privatedata:IPrivatePayload</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:removeGroupChatBookmark"><apiName>removeGroupChatBookmark</apiName><shortdesc>
		 Removes the bookmark from the list, and returns it
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.bookmark:GroupChatBookmark</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the bookmark from the list, and returns it
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload:BookmarkPrivatePayload"><apiName>BookmarkPrivatePayload</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>groupChatBookmarks</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>urlBookmarks</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.collections.events"><apiName>org.igniterealtime.xiff.collections.events</apiName><apiClassifier id="org.igniterealtime.xiff.collections.events:CollectionEventKind"><apiName>CollectionEventKind</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.collections.events:CollectionEvent"><apiName>CollectionEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.collections.events:CollectionEvent:clone"><apiName>clone</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections.events:CollectionEvent:toString"><apiName>toString</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.collections.events:CollectionEvent:CollectionEvent"><apiName>CollectionEvent</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>kind</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>oldLocation</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam><apiParam><apiItemName>items</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.collections"><apiName>org.igniterealtime.xiff.collections</apiName><apiClassifier id="org.igniterealtime.xiff.collections:ICollection"><apiName>ICollection</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:addItemAt"><apiName>addItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:addItem"><apiName>addItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:clearSource"><apiName>clearSource</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:contains"><apiName>contains</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:getItemAt"><apiName>getItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:getItemIndex"><apiName>getItemIndex</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:itemUpdated"><apiName>itemUpdated</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:removeAll"><apiName>removeAll</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:removeItemAt"><apiName>removeItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:removeItem"><apiName>removeItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:setItemAt"><apiName>setItemAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ICollection:org.igniterealtime.xiff.collections:ICollection:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.collections:ArrayCollection"><apiName>ArrayCollection</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.collections:ICollection</apiBaseInterface><apiBaseClassifier>flash.utils:Proxy</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiData>0</apiData></apiParam><apiParam><apiItemName>useWeakReference</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:addItemAt"><apiName>addItemAt</apiName><shortdesc>
		 Add the specified item at the specified index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Add the specified item at the specified index.
		 Any item that was after this index is moved out by one.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:addItem"><apiName>addItem</apiName><shortdesc>
		 Add the specified item to the end of the list.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Add the specified item to the end of the list.
		 Equivalent to addItemAt( item, length );
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:clearSource"><apiName>clearSource</apiName><shortdesc>
		 Remove all items from the ArrayCollection without dispatching a RESET event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove all items from the ArrayCollection without dispatching a RESET event.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:contains"><apiName>contains</apiName><shortdesc>
		 Returns whether the ArrayCollection contains the specified item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Returns whether the ArrayCollection contains the specified item.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
		 Dispatches an event into the event flow.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:Event"/></apiParam></apiOperationDef><apiDesc>
		 Dispatches an event into the event flow.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:getItemAt"><apiName>getItemAt</apiName><shortdesc>
		 Get the item at the specified index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Get the item at the specified index.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:getItemIndex"><apiName>getItemIndex</apiName><shortdesc>
		 Get the index of the item if it is in the ArrayCollection such that getItemAt( index ) == item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="int"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Get the index of the item if it is in the ArrayCollection such that getItemAt( index ) == item.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:hasEventListener"><apiName>hasEventListener</apiName><shortdesc>
		 Checks whether the EventDispatcher object has any listeners registered for a specific type of event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Checks whether the EventDispatcher object has any listeners registered for a specific type of event.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:protected:internalDispatchEvent"><apiName>internalDispatchEvent</apiName><shortdesc>
		 Dispatches a collection event with the specified information.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>kind</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>item</apiItemName><apiType value="any"/><apiData>null</apiData></apiParam><apiParam><apiItemName>location</apiItemName><apiType value="int"/><apiData>-1</apiData></apiParam></apiOperationDef><apiDesc>
		 Dispatches a collection event with the specified information.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:itemUpdated"><apiName>itemUpdated</apiName><shortdesc>
		 Notifies the view that an item has been updated.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Notifies the view that an item has been updated.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeAll"><apiName>removeAll</apiName><shortdesc>
		 Remove all items from the ArrayCollection.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove all items from the ArrayCollection.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 Removes a listener from the EventDispatcher object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef><apiDesc>
		 Removes a listener from the EventDispatcher object.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeItemAt"><apiName>removeItemAt</apiName><shortdesc>
		 Removes the item at the specified index and returns it.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Removes the item at the specified index and returns it.
		 Any items that were after this index are now one index earlier.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:removeItem"><apiName>removeItem</apiName><shortdesc>
		 Remove the specified item from this list, should it exist.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam></apiOperationDef><apiDesc>
		 Remove the specified item from this list, should it exist.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:setItemAt"><apiName>setItemAt</apiName><shortdesc>
		 Places the item at the specified index.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="any"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="int"/></apiParam></apiOperationDef><apiDesc>
		 Places the item at the specified index.
		 If an item was already at that index the new item will replace it
		 and it will be returned.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:toArray"><apiName>toArray</apiName><shortdesc>
		 Return an Array that is populated in the same order as the ArrayCollection.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 Return an Array that is populated in the same order as the ArrayCollection.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:toString"><apiName>toString</apiName><shortdesc>
		 Pretty prints the contents of the ArrayCollection to a string and returns it.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Pretty prints the contents of the ArrayCollection to a string and returns it.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.collections:ArrayCollection:willTrigger"><apiName>willTrigger</apiName><shortdesc>
		 Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.collections:ArrayCollection:ArrayCollection"><apiName>ArrayCollection</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>source</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiConstructorDef><apiDesc>
		 Constructor.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.conference"><apiName>org.igniterealtime.xiff.conference</apiName><apiClassifier id="org.igniterealtime.xiff.conference:Room"><apiName>Room</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.conference:IRoom</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.collections:ArrayCollection</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.conference:Room:allow"><apiName>allow</apiName><shortdesc>
		 Allow a previously banned JIDs to enter this room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An array of unescaped JIDs to allow
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Allow a previously banned JIDs to enter this room.	This is the same as:
		 <codeph>Room.grant(AFFILIATION_NONE, jid)</codeph>
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <codeph>RoomEvent.ADMIN_ERROR</codeph></p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/grant"><linktext>grant</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/revoke"><linktext>revoke</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:ban"><apiName>ban</apiName><shortdesc>
		 Bans an array of JIDs from entering the room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An arry of unescaped JIDs to ban
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Bans an array of JIDs from entering the room.
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <codeph>RoomEvent.ADMIN_ERROR</codeph>.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:cancelConfiguration"><apiName>cancelConfiguration</apiName><shortdesc>
		 Cancels the configuration process.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Cancels the configuration process.	The room may still be locked if
		 you cancel the configuration process when attempting to join a
		 reserved room.
		 		 <p>You must have joined the room and have the owner affiliation to
		 configure the room.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/configureRoom"><linktext>configureRoom</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/configure"><linktext>configure</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/join"><linktext>join</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:changeSubject"><apiName>changeSubject</apiName><shortdesc>
		 Changes the subject in the conference room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newSubject</apiItemName><apiType value="String"/><apiDesc>The new subject
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Changes the subject in the conference room. You must have already joined the
		 room before you can change the subject.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:configure"><apiName>configure</apiName><shortdesc>
		 Sends a configuration form to the room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldmap</apiItemName><apiType value="Object"/><apiDesc>FormExtension, or a hash that is an object with keys being the room configuration
		 form variables and the values being arrays. For single value fields, use a single
		 element array.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a configuration form to the room.
		 		 You must be joined and have owner affiliation to configure the room
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/configureRoom"><linktext>configureRoom</linktext></link><link href="http://xmpp.org/extensions/xep-0045.html#registrar-formtype-owner"><linktext>http://xmpp.org/extensions/xep-0045.html#registrar-formtype-owner</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:decline"><apiName>decline</apiName><shortdesc>
		 Actively decline an invitation.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>An unescaped JID of the user to invite.
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A string describing why the invitiation was declined
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Actively decline an invitation.	You can optionally ignore invitations
		 but if you choose to decline an invitation, you call this method on
		 a room instance that represents the room the invite originated from.
		 		 <p>You do not need to have joined this room to decline an invitation</p>
		 		 <p>Note: mu-conference-0.6 does not allow users to send decline
		 messages without joining first.	If using this version of conferencing
		 software, it is best to ignore invites.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:destroy"><apiName>destroy</apiName><shortdesc>
		 Destroys a reserved room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A short description of why the room is being destroyed
		 </apiDesc></apiParam><apiParam><apiItemName>alternateJID</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>A JID for current members to use as an alternate room to join
		 after the room has been destroyed. Like a postal forwarding address.
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
		 Destroys a reserved room.	If the room has been configured to be persistent,
		 then it is optional that the server will permanently remove the room.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:getMessage"><apiName>getMessage</apiName><shortdesc>
		 Gets an instance of the Message class that has been pre-configured to be
		 sent from this room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier><apiDesc>A <codeph>Message</codeph> class instance
		 </apiDesc></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body
		 </apiDesc></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body with HTML formatting
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets an instance of the <codeph>Message</codeph> class that has been pre-configured to be
		 sent from this room. Use this method to get a <codeph>Message</codeph> in order to add extensions
		 to outgoing room messages.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:getOccupantNamed"><apiName>getOccupantNamed</apiName><shortdesc>
		 Gets the RoomOccupant whose nickname matches the name passed in.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.conference:IRoomOccupant</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets the <codeph>RoomOccupant</codeph> whose nickname matches the name passed in.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:grant"><apiName>grant</apiName><shortdesc>
		 Grants permissions on a room to one or more JIDs by setting the
		 affiliation of a user based on their JID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiDesc>Use one of the
		 following affiliations: <codeph>Room.AFFILIATION_MEMBER</codeph>,
		 <codeph>Room.AFFILIATION_ADMIN</codeph>,
		 <codeph>Room.AFFILIATION_OWNER</codeph>
		 </apiDesc></apiParam><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An array of UnescapedJIDs to grant these permissions to
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Grants permissions on a room to one or more JIDs by setting the
		 affiliation of a user based on their JID.
		 		 <p>If the JID currently has an existing affiliation, then the existing
		 affiliation will be replaced with the one passed. If the process could not be
		 completed, the room will dispatch the event <codeph>RoomEvent.ADMIN_ERROR</codeph>.</p>
		 		 <p>XMPP spec states that the #admin schema should be used for affiliation changes.
		 Unfortunately to this date, Openfire does not match spec and requires the #owner schema.
		 Because of this, if granting privileges fails on the first attempt using the #admin schema,
		 we try again using the #owner schema.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/revoke"><linktext>revoke</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/allow"><linktext>allow</linktext></link><link href="http://xmpp.org/extensions/xep-0045.html#schemas-admin"><linktext>http://xmpp.org/extensions/xep-0045.html#schemas-admin</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:invite"><apiName>invite</apiName><shortdesc>
		 Invites a user that is not currently a member of this room to this room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>An unescaped JID of the user to invite.
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A string describing why you would like to invite the user.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Invites a user that is not currently a member of this room to this room.
		 		 <p>You must have joined the room and have appropriate permissions to invite
		 other memebers, because the server will format and send the invite message to
		 as if it came from the room rather that you sending the invite directly from you.</p>
		 		 <p>To listen to invite events, add an event listener on your XMPPConnection to the
		 <codeph>InviteEvent.INVITED</codeph> event.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:isThisRoom"><apiName>isThisRoom</apiName><shortdesc>
		 Determines if the sender parameter is the same
		 as the room's JID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>true if the passed JID matches the getRoomJID
		 </apiDesc></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>room JID to test
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the <codeph>sender</codeph> parameter is the same
		 as the room's JID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:isThisUser"><apiName>isThisUser</apiName><shortdesc>
		 Determines if the sender param is the
		 same as the user's JID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>true if the passed JID matches the userJID
		 </apiDesc></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>the room JID to test
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the <codeph>sender</codeph> param is the
		 same as the user's JID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:joinWithExplicitMUCExtension"><apiName>joinWithExplicitMUCExtension</apiName><shortdesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>A boolean indicating whether the join attempt was successfully sent.
		 </apiDesc></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/><apiDesc>Set to true if you wish to create and configure a reserved room
		 </apiDesc></apiParam><apiParam><apiItemName>mucExtension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.muc:IMUCExtension</apiOperationClassifier><apiDesc>The customized MUC extension to send with initial presence to the room.
		 </apiDesc></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>An array of additional extensions to send with the initial presence to the room.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.	This call will create an instant room based on a default
		 server configuration if the room doesn't exist.
		 		 <p>To create and begin the configuration process of a reserved room, pass
		 <codeph>true</codeph> to this method to begin the configuration process.	When
		 The configuration is complete, the room will be unlocked for others to join.
		 Listen for the <codeph>RoomEvent.CONFIGURE_ROOM</codeph> event to handle and
		 either return or cancel the configuration of the room.</p>
		 		 <p>This function adds an additional parameter to allow the caller to completely customize the MUC extension that
		 gets sent to the room.  For example, you can add a history element that specifies how much discussion
		 history you want sent when you join the room (http://xmpp.org/extensions/xep-0045.html#enter-managehistory):
		 <codeph>
		 var muc:MUCExtension = new MUCExtension();
		 muc.history = true;
		 muc.maxchars = 0;
		 _room.joinWithExplicitMUCExtension(false, mucExt);
		 </codeph>
		 </p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:join"><apiName>join</apiName><shortdesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>A boolean indicating whether the join attempt was successfully sent.
		 </apiDesc></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Set to true if you wish to create and configure a reserved room
		 </apiDesc></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>An array of additional extensions to send with the initial presence to the room.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Joins a conference room based on the parameters specified by the room
		 properties.	This call will create an instant room based on a default
		 server configuration if the room doesn't exist.
		 		 <p>To create and begin the configuration process of a reserved room, pass
		 <codeph>true</codeph> to this method to begin the configuration process.	When
		 The configuration is complete, the room will be unlocked for others to join.
		 Listen for the <codeph>RoomEvent.CONFIGURE_ROOM</codeph> event to handle and
		 either return or cancel the configuration of the room.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:kickOccupant"><apiName>kickOccupant</apiName><shortdesc>
		 Kicks an occupant out of the room, assuming that the user has necessary
		 permissions in order to do so.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/><apiDesc>The nickname of the room occupant to kick
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>The reason for the kick
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Kicks an occupant out of the room, assuming that the user has necessary
		 permissions in order to do so. If the user does not, the server will return an error.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:leave"><apiName>leave</apiName><shortdesc>
		 Leaves the current conference room, assuming that the user has joined one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Leaves the current conference room, assuming that the user has joined one.
		 If the user is not currently in a room, this method does nothing.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:requestAffiliations"><apiName>requestAffiliations</apiName><shortdesc>
		 Requests an affiliation list for a given affiliation with with room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiDesc>Use one of the following affiliations: <codeph>Room.AFFILIATION_NONE</codeph>,
		 <codeph>Room.AFFILIATION_OUTCAST</codeph>,
		 <codeph>Room.AFFILIATION_MEMBER</codeph>,
		 <codeph>Room.AFFILIATION_ADMIN</codeph>,
		 <codeph>Room.AFFILIATION_OWNER</codeph>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Requests an affiliation list for a given affiliation with with room.
		 This will either dispatch the event <codeph>RoomEvent.AFFILIATIONS</codeph> or
		 <codeph>RoomEvent.ADMIN_ERROR</codeph> depending on the result of the request.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/revoke"><linktext>revoke</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/grant"><linktext>grant</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/affiliations"><linktext>affiliations</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:requestConfiguration"><apiName>requestConfiguration</apiName><shortdesc>
		 Requests a configuration form from the room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Requests a configuration form from the room.	Listen to <codeph>configureRoom</codeph>
		 event to fill out the form then call either <codeph>configure</codeph> or
		 <codeph>cancelConfiguration</codeph> to complete the configuration process
		 		 You must be joined to the room and have the owner affiliation to request
		 a configuration form
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/configureRoom"><linktext>configureRoom</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/configure"><linktext>configure</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/cancelConfiguration"><linktext>cancelConfiguration</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:revoke"><apiName>revoke</apiName><shortdesc>
		 Revokes all affiliations from the JIDs.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/><apiDesc>An array of UnescapedJIDs to revoke affiliations from
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Revokes all affiliations from the JIDs. This is the same as:
		 <codeph>grant( Room.AFFILIATION_NONE, jids )</codeph>
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <codeph>RoomEvent.ADMIN_ERROR</codeph>. Note: if the JID is banned from this room,
		 then this will also revoke the banned status.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.conference.xml#Room/grant"><linktext>grant</linktext></link><link href="org.igniterealtime.xiff.conference.xml#Room/allow"><linktext>allow</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:sendMessageWithExtension"><apiName>sendMessageWithExtension</apiName><shortdesc>
		 Sends a message to the conference room with an extension attached.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier><apiDesc>The message to send
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a message to the conference room with an extension attached.
		 Use this method in conjunction with the <codeph>getMessage</codeph> method.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:sendMessage"><apiName>sendMessage</apiName><shortdesc>
		 Sends a message to the conference room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body
		 </apiDesc></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body with HTML formatting
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a message to the conference room.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:sendPrivateMessage"><apiName>sendPrivateMessage</apiName><shortdesc>
		 Sends a private message to a specific participant in the conference room.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recipientNickname</apiItemName><apiType value="String"/><apiDesc>The conference room nickname of the recipient who should
		 receive the private message
		 </apiDesc></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body
		 </apiDesc></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body with HTML formatting
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends a private message to a specific participant in the conference room.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:Room:setOccupantVoice"><apiName>setOccupantVoice</apiName><shortdesc>
		 In a moderated room, sets voice status to a particular occupant, assuming the user
		 has the necessary permissions to do so.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/><apiDesc>The nickname of the occupant to give voice
		 </apiDesc></apiParam><apiParam><apiItemName>voice</apiItemName><apiType value="Boolean"/><apiDesc>Whether to add voice (true) or remove voice (false). Having voice means
		 that the user is actually able to talk. Without voice the user is effectively muted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 In a moderated room, sets voice status to a particular occupant, assuming the user
		 has the necessary permissions to do so.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.conference:Room:Room"><apiName>Room</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc> A XMPPConnection instance that is providing the primary server connection
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:InviteListener"><apiName>InviteListener</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IListener</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.conference:InviteListener:InviteListener"><apiName>InviteListener</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>An XMPPConnection instance that is providing the primary server
		 connection.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:RoomFile"><apiName>RoomFile</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.conference:RoomFile:RoomFile"><apiName>RoomFile</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:RoomFileRepository"><apiName>RoomFileRepository</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:IRoomOccupant"><apiName>IRoomOccupant</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IContact</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:IRoom"><apiName>IRoom</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.collections:ICollection</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:allow"><apiName>allow</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:ban"><apiName>ban</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:cancelConfiguration"><apiName>cancelConfiguration</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:changeSubject"><apiName>changeSubject</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newSubject</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:configure"><apiName>configure</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldmap</apiItemName><apiType value="Object"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:decline"><apiName>decline</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:destroy"><apiName>destroy</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>alternateJID</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:getMessage"><apiName>getMessage</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:getOccupantNamed"><apiName>getOccupantNamed</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.conference:IRoomOccupant</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:grant"><apiName>grant</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:invite"><apiName>invite</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:isThisRoom"><apiName>isThisRoom</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:isThisUser"><apiName>isThisUser</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:joinWithExplicitMUCExtension"><apiName>joinWithExplicitMUCExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>mucExtension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.muc:IMUCExtension</apiOperationClassifier></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:join"><apiName>join</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>createReserved</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>joinPresenceExtensions</apiItemName><apiType value="Array"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:kickOccupant"><apiName>kickOccupant</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:leave"><apiName>leave</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:requestAffiliations"><apiName>requestAffiliations</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:requestConfiguration"><apiName>requestConfiguration</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:revoke"><apiName>revoke</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jids</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:sendMessageWithExtension"><apiName>sendMessageWithExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IMessage</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:sendMessage"><apiName>sendMessage</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:sendPrivateMessage"><apiName>sendPrivateMessage</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>recipientNickname</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>body</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>htmlBody</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.conference:IRoom:org.igniterealtime.xiff.conference:IRoom:setOccupantVoice"><apiName>setOccupantVoice</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>occupantNick</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>voice</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.conference:RoomOccupant"><apiName>RoomOccupant</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.conference:IRoomOccupant</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.conference:RoomOccupant:RoomOccupant"><apiName>RoomOccupant</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>show</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>role</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>room</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.conference:IRoom</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.core"><apiName>org.igniterealtime.xiff.core</apiName><apiClassifier id="org.igniterealtime.xiff.core:XMPPConnection"><apiName>XMPPConnection</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:beginAuthentication"><apiName>beginAuthentication</apiName><shortdesc>
		 SASL Authentication should been set up, begin the authentication
		 process by sending the initial request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 SASL Authentication should been set up, begin the authentication
		 process by sending the initial request.
		 		 <p>Make sure that the username and password are set, or the connection is using
		 anonymous authentication before calling this method.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:bindConnection"><apiName>bindConnection</apiName><shortdesc>
		 Upon being so informed that resource binding is required, the client
		 MUST bind a resource to the stream by sending to the server an IQ
		 stanza of type "set" (see IQ Semantics (Section 9.2.3)) containing
		 data qualified by the 'urn:ietf:params:xml:ns:xmpp-bind' namespace.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Upon being so informed that resource binding is required, the client
		 MUST bind a resource to the stream by sending to the server an IQ
		 stanza of type "set" (see IQ Semantics (Section 9.2.3)) containing
		 data qualified by the 'urn:ietf:params:xml:ns:xmpp-bind' namespace.
		 		 <p>If the client wishes to allow the server to generate the resource
		 identifier on its behalf, it sends an IQ stanza of type "set" that
		 contains an empty <b>bind</b> element.</p>
		 		 <p>Client asks server to bind a resource:
		 <pre>
		 <iq id="bind_1" type="set">
		  <bind xmlns="urn:ietf:params:xml:ns:xmpp-bind"/>
		 </iq>
		 </pre></p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:checkIncomingData"><apiName>checkIncomingData</apiName><shortdesc>
		 Check if the incoming data is complete once added to any existing
		 incoming data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="XML"/><apiDesc>XML that is complete, or just null in case it is not complete
		 </apiDesc></apiReturn><apiParam><apiItemName>bytedata</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Check if the incoming data is complete once added to any existing
		 incoming data.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:chooseStreamTags"><apiName>chooseStreamTags</apiName><shortdesc>
		 Choose the stream start and ending tags based on the given type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiType value="uint"/><apiDesc>One of the <codeph>STREAM_TYPE_...</codeph> constants of this class.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Choose the stream start and ending tags based on the given type.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:configureAuthMechanisms"><apiName>configureAuthMechanisms</apiName><shortdesc>
		 Use the authentication which is first in the list (saslMechanisms) if possible.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>mechanisms</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Use the authentication which is first in the list (<codeph>saslMechanisms</codeph>) if possible.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/saslMechanisms"><linktext>saslMechanisms</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:configureStreamCompression"><apiName>configureStreamCompression</apiName><shortdesc>
		 Zlib is the most common and the one which is required to be implemented in case
		 Stream Compression is used.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>method</apiItemName><apiType value="String"/><apiData>zlib</apiData></apiParam></apiOperationDef><apiDesc>
		 Zlib is the most common and the one which is required to be implemented in case
		 Stream Compression is used.
		 		 <p>Ask the server to enable Zlib compression of the stream.</p>
		 <p>Supported types in XMPP are <codeph>zlib</codeph> and <codeph>lzw</codeph>.</p>
		 <p>XIFF however only supports <codeph>zlib</codeph> and only after the Adler32 checksum is somehow implemented.</p>
		 		 <p>Flash Player 11.4, code named "Dolores" (second half of 2012) will have LZMA ByteArray compression available...</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://www.adobe.com/devnet/flashplatform/whitepapers/roadmap.html"><linktext>http://www.adobe.com/devnet/flashplatform/whitepapers/roadmap.html</linktext></link><link href="http://xmpp.org/registrar/compress.html"><linktext>http://xmpp.org/registrar/compress.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:connect"><apiName>connect</apiName><shortdesc>
		 Connects to the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Any of the STREAM_TYPE_.. constants.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Connects to the server. Use one of the STREAM_TYPE_.. constants.
		 Possible options are:
		 <ul>
		 <li>standard (default)</li>
		 <li>standard terminated</li>
		 <li>flash</li>
		 <li>flash terminated</li>
		 </ul>
		 Some servers, like Jabber, Inc.'s XCP and Jabberd 1.4 expect &lt;flash:stream&gt; from
		 a Flash client instead of the standard &lt;stream:stream&gt;.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:createConnection"><apiName>createConnection</apiName><shortdesc>
		 Set up the connection and listeners related to this class.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Set up the connection and listeners related to this class.
		 		 <p>This method should be overridden in any class that would extend this one
		 and provide alternative way for connectiong, such as BOSH or TLSSocket.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="flash.net.Socket.xml"><linktext>flash.net.Socket</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:disableExtensions"><apiName>disableExtensions</apiName><shortdesc>
		 Disable the given extensions from the registery.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
		 Disable the given extensions from the registery.
		 This is mainly useful only at runtime.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:disableSASLMechanism"><apiName>disableSASLMechanism</apiName><shortdesc>
		 Remove a SASL mechanism from this connection
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove a SASL mechanism from this connection
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:disconnect"><apiName>disconnect</apiName><shortdesc>
		 Disconnects from the server if currently connected.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Disconnects from the server if currently connected. After disconnect,
		 a <codeph>DisconnectionEvent.DISCONNECT</codeph> event is broadcast.
		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.events.xml#DisconnectionEvent"><linktext>org.igniterealtime.xiff.events.DisconnectionEvent</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:dispatchError"><apiName>dispatchError</apiName><shortdesc>
		 </shortdesc><prolog><asCustoms><exampleText>dispatchError("bind-failed", "BindExtension came without a JID");
		 		 </exampleText></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>condition</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>message</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>code</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>Legacy code, try not to use. Will be removed in XIFF 3.2.0
		 </apiDesc></apiParam><apiParam><apiItemName>extension</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.data:Extension</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:enableExtensions"><apiName>enableExtensions</apiName><shortdesc>
		 Enable the given extensions for interacting with the incoming data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef><apiDesc>
		 Enable the given extensions for interacting with the incoming data.
		 Once an extension is enabled, it can be listened by adding an event
		 listener to its namespace.
		 		 <p>Some extensions might responce to an incoming request, such as
		 SoftwareVersionExtension if enabled</p>
		 		 <p>Notes about extension dependencies:</p>
		 		 <ul>
		 <li>If you will need <codeph>Message.htmlBody</codeph>, use <codeph>XHTMLExtension</codeph>.</li>
		 <li><codeph>SearchExtension</codeph> will need <codeph>FormExtension</codeph> to be enabled.</li>
		 <li>Plan to use <codeph>Roster</codeph>? Enable <codeph>RosterExtension</codeph></li>
		 <li><codeph>BookmarkManager</codeph> needs <codeph>BookmarkPrivatePayload</codeph> to be enabled</li>
		 <li><codeph>Browser</codeph> needs <codeph>ItemDiscoExtension</codeph>, <codeph>InfoDiscoExtension</codeph> and <codeph>BrowseExtension</codeph></li>
		 <li><codeph>Room</codeph> will enable <codeph>MUC</codeph> and <codeph>FormExtension</codeph> by itself</li>
		 </ul>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:enableSASLMechanism"><apiName>enableSASLMechanism</apiName><shortdesc>
		 Add a SASL mechanism available for this connection
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>authClass</apiItemName><apiType value="Class"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add a SASL mechanism available for this connection
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:establishSession"><apiName>establishSession</apiName><shortdesc>
		 Runs after binding
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Runs after binding
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://tools.ietf.org/html/rfc3921#section-3"><linktext>http://tools.ietf.org/html/rfc3921#section-3</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:flushPresenceQueue"><apiName>flushPresenceQueue</apiName><shortdesc>
		 Dispatches a single PresenceEvent in case there are any in the
		 queue.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:TimerEvent"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Dispatches a single PresenceEvent in case there are any in the
		 queue. This event will contain all the presences available at this
		 given moment.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleAuthentication"><apiName>handleAuthentication</apiName><shortdesc>
		 Upon receiving a success indication within the SASL negotiation, the
		 client MUST send a new stream header to the server, to which the
		 server MUST respond with a stream header as well as a list of
		 available stream features.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>response</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Upon receiving a success indication within the SASL negotiation, the
		 client MUST send a new stream header to the server, to which the
		 server MUST respond with a stream header as well as a list of
		 available stream features.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleMessage"><apiName>handleMessage</apiName><shortdesc>
		 TODO: Add similar extension handling as in IQ,
		 after message specific extensions are separated from Message class, v3.2.0
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 TODO: Add similar extension handling as in IQ,
		 after message specific extensions are separated from Message class, v3.2.0
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleNodeType"><apiName>handleNodeType</apiName><shortdesc>
		 Calls a appropriate parser base on the nodeName.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Calls a appropriate parser base on the nodeName.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handlePresence"><apiName>handlePresence</apiName><shortdesc>
		 Handle the incoming Presence either with the queue timer or directly
		 dispatching the PresenceEvent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:Presence</apiOperationClassifier></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Handle the incoming <codeph>Presence</codeph> either with the queue timer or directly
		 dispatching the <codeph>PresenceEvent</codeph>. In both cases the event occurs right after
		 this method.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStreamError"><apiName>handleStreamError</apiName><shortdesc>
		 Handle stream error related element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>Error node
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Handle stream error related element.
		 		 <p>RFC 3920 (XMPP Core, published October 2004),
		 in chapters 4.7. defines Stream Errors:</p>
		 		 <p>MUST contain a child element corresponding to one of the defined
		 stanza error conditions defined below; this element MUST be
		 qualified by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace.</p>
		 		 <p>MAY contain a <b>text</b> child containing XML character data that
		 describes the error in more detail; this element MUST be qualified
		 by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace and SHOULD
		 possess an 'xml:lang' attribute specifying the natural language of
		 the XML character data.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/protocols/urn_ietf_params_xml_ns_xmpp-streams/"><linktext>http://xmpp.org/protocols/urn_ietf_params_xml_ns_xmpp-streams/</linktext></link><link href="http://tools.ietf.org/html/rfc3920#section-4.7"><linktext>http://tools.ietf.org/html/rfc3920#section-4.7</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStreamFeatures"><apiName>handleStreamFeatures</apiName><shortdesc>
		 Handle features that are available in the connected server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Handle features that are available in the connected server.
		 		 <adobetable>
		 
		 <tgroup cols="10"><thead><row><row>
		 <entry>Feature</entry>
		 <entry>XML Element</entry>
		 <entry>Description</entry>
		 <entry>Documentation</entry>
		 </row><row>
		 <entry>amp</entry>
		 <entry>&lt;amp xmlns='http://jabber.org/features/amp'&gt;</entry><entry>Support for Advanced Message Processing</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0079.html">XEP-0079: Advanced Message Processing</xref></entry>
		 </row><row>
		 <entry>compress</entry>
		 <entry>&lt;compression xmlns='http://jabber.org/features/compress'&gt;</entry>
		 <entry>Support for Stream Compression</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0138.html">XEP-0138: Stream Compression</xref></entry>
		 </row><row>
		 <entry>iq-auth</entry>
		 <entry>&lt;auth xmlns='http://jabber.org/features/iq-auth'&gt;</entry>
		 <entry>Support for Non-SASL Authentication</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0078.html">XEP-0078: Non-SASL Authentication</xref></entry>
		 </row><row>
		 <entry>iq-register</entry>
		 <entry>&lt;register xmlns='http://jabber.org/features/iq-register'&gt;</entry>
		 <entry>Support for In-Band Registration</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0077.html">XEP-0077: In-Band Registration</xref></entry>
		 </row><row>
		 <entry>bind</entry>
		 <entry>&lt;bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'&gt;</entry>
		 <entry>Support for Resource Binding</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</xref></entry>
		 </row><row>
		 <entry>mechanisms</entry>
		 <entry>&lt;mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'&gt;</entry>
		 <entry>Support for Simple Authentication and Security Layer (SASL)</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</xref></entry>
		 </row><row>
		 <entry>session</entry><entry>&lt;session xmlns='urn:ietf:params:xml:ns:xmpp-session'&gt;</entry>
		 <entry>Support for IM Session Establishment</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6121.txt">RFC 6121: XMPP IM</xref></entry>
		 </row><row>
		 <entry>starttls</entry>
		 <entry>&lt;starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'&gt;</entry>
		 <entry>Support for Transport Layer Security (TLS)</entry>
		 <entry><xref href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</xref></entry>
		 </row><row>
		 <entry>sm</entry>
		 <entry>&lt;sm xmlns='urn:xmpp:sm:3'&gt;</entry><entry>Support for Stream Management</entry>
		 <entry><xref href="http://www.xmpp.org/extensions/xep-0198.html">XEP-0198: Stream Management</xref></entry>
		 </row></row></thead><tbody/></tgroup></adobetable>
		 		 <p>The XMPP RFCs define an ordering for the features defined therein, namely:</p>
		 <ol>
		   <li>TLS, requires the use of <codeph>XMPPTLSConnection</codeph></li>
		   <li>In-band registration, if registration needed</li>
		   <li>SASL</li>
		   <li>Stream compression, if used</li>
		   <li>Resource binding</li>
		 </ol>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/registrar/stream-features.html"><linktext>http://xmpp.org/registrar/stream-features.html</linktext></link><link href="http://xmpp.org/extensions/xep-0170.html"><linktext>http://xmpp.org/extensions/xep-0170.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStreamTLS"><apiName>handleStreamTLS</apiName><shortdesc>
		 Checks if the TLS feature available is required or not and dispatches
		 an error in case it is.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>The feature containing starttls tag.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Checks if the TLS feature available is required or not and dispatches
		 an error in case it is.
		 		 <p>A connection class supporting TLS should override this handler.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPRTMPConnection/handleStreamTLS"><linktext>org.igniterealtime.xiff.core.XMPPRTMPConnection.handleStreamTLS</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:handleStream"><apiName>handleStream</apiName><shortdesc>
		 Initial stream element has been received once this method is called.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initial stream element has been received once this method is called.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:onIOError"><apiName>onIOError</apiName><shortdesc>
		 This fires the standard dispatchError method
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiType value="flash.events:IOErrorEvent"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This fires the standard dispatchError method
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:parseDataReceived"><apiName>parseDataReceived</apiName><shortdesc>
		 Parses the data which the socket just received.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>bytedata</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Parses the data which the socket just received.
		 Used to simplify the overrides from classes extending this one.
		 		 <p>Dispatches the <codeph>IncomingDataEvent</codeph>. Also takes care
		 of increasing the incoming bytes statistic.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:removeSocketEventListeners"><apiName>removeSocketEventListeners</apiName><shortdesc>
		 Remove those listeners that the createConnection method added.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove those listeners that the <codeph>createConnection</codeph> method added.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:sendDataToServer"><apiName>sendDataToServer</apiName><shortdesc>
		 Overwrite this method to use other kind of socket,
		 request or connection, if needed.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef><apiDesc>
		 Overwrite this method to use other kind of socket,
		 request or connection, if needed.
		 <p>Then use the sendXML method when sending XML.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:sendData"><apiName>sendData</apiName><shortdesc>
		 Dispatches OutgoingDataEvent, handles possible Stream Compression and
		 calls sendDataToServer.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiDesc>XML that is not always complete for a reason, like sending the closing element
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Dispatches <codeph>OutgoingDataEvent</codeph>, handles possible Stream Compression and
		 calls <codeph>sendDataToServer</codeph>.
		 		 <p>Also takes care of increasing the outgoing bytes statistic.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc>
		 Sends ping to server in order to keep the connection alive, in case the server
		 has not indicated that it would not support it.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Sends ping to server in order to keep the connection alive, in case the server
		 has not indicated that it would not support it.
		 		 TODO: Whitespace keepalive if ping not supported...
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:sendXML"><apiName>sendXML</apiName><shortdesc>
		 Pass through to sendData which takes care of the common
		 data handling between all connection classes.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Pass through to <codeph>sendData</codeph> which takes care of the common
		 data handling between all connection classes.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:send"><apiName>send</apiName><shortdesc>
		 Sends data to the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IXMPPStanza</apiOperationClassifier><apiDesc>The data to send. This must be an instance of a class that implements the INodeProxy interface.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sends data to the server. If the data to send cannot be serialized properly,
		 this method throws a <codeph>SerializeException</codeph>.
		 		 </apiDesc><example>The following example sends a basic chat message to the user with the
		 JID "sideshowbob@springfieldpenitentiary.gov".
		 <codeph>var message:Message = new Message( "sideshowbob@springfieldpenitentiary.gov", null, "Hi Bob.",
		 "<b>Hi Bob.</b>", Message.TYPE_CHAT );
		 myXMPPConnection.send( message );</codeph>
		 </example></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#INodeProxy"><linktext>org.igniterealtime.xiff.data.INodeProxy</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPConnection:protected:serviceDiscoveryResponce"><apiName>serviceDiscoveryResponce</apiName><shortdesc>
		 Send a response to the Service Discovery query.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Send a response to the Service Discovery query.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html"><linktext>http://xmpp.org/extensions/xep-0030.html</linktext></link></related-links></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:XMPPConnection:XMPPConnection"><apiName>XMPPConnection</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor. By default will enable the following extensions:
		 		 <ul>
		 <li>AuthExtension, any kind of authentication</li>
		 <li>BindExtension, resource binding</li>
		 <li>SessionExtension</li>
		 <li>PingExtension, for keeping the connection alive</li>
		 <li>InfoDiscoExtension, for outgoing Service Discovery</li>
		 </ul>
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:XMPPRTMPConnection"><apiName>XMPPRTMPConnection</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.core:XMPPConnection</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:connect"><apiName>connect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:protected:createConnection"><apiName>createConnection</apiName><shortdesc>
		 Called from XMPPConnection() constructor.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Called from <codeph>XMPPConnection()</codeph> constructor.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:disconnect"><apiName>disconnect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:protected:restartStream"><apiName>restartStream</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:protected:sendDataToServer"><apiName>sendDataToServer</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc>
		 No need for keepalive
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 No need for keepalive
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPRTMPConnection:xmppRecieve"><apiName>xmppRecieve</apiName><shortdesc>
		 Is the name of this method locked in the server side?
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rawXML</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Is the name of this method locked in the server side?
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:XMPPRTMPConnection:XMPPRTMPConnection"><apiName>XMPPRTMPConnection</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>url</apiItemName><apiType value="String"/><apiData>rtmp:/xmpp</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:Browser"><apiName>Browser</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IBrowser</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:Browser:browseItem"><apiName>browseItem</apiName><shortdesc>
		 Use the OBSOLETE BrowseExtension (jabber:iq:browse namespace)
		 to query a resource for supported features and children.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The full JabberID to query for service items
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>The callback function to call when results are retrieved
		 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The callback function to call when errors are received
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Use the <b>OBSOLETE</b> <codeph>BrowseExtension</codeph> (jabber:iq:browse namespace)
		 to query a resource for supported features and children.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0011.html"><linktext>http://xmpp.org/extensions/xep-0011.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getNodeInfo"><apiName>getNodeInfo</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#info-nodes"><linktext>http://xmpp.org/extensions/xep-0030.html#info-nodes</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getNodeItems"><apiName>getNodeItems</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#items-nodes"><linktext>http://xmpp.org/extensions/xep-0030.html#items-nodes</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getServiceInfo"><apiName>getServiceInfo</apiName><shortdesc>
		 Retrieves a list of available service information from the server specified.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The server to query for available service information
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>The callback function to call when results are retrieved
		 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The callback function to call when errors are received
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a list of available service information from the server specified. On successful query,
		 the callback specified will be called and passed a single parameter containing
		 a reference to an <codeph>IQ</codeph> containing the query results.
		 		 <pre>
		 <iq id="iq_4" to="192.168.1.37" type="get">
		  <query xmlns="http://jabber.org/protocol/disco#info"/>
		 </iq>
		 </pre>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#info"><linktext>http://xmpp.org/extensions/xep-0030.html#info</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:Browser:getServiceItems"><apiName>getServiceItems</apiName><shortdesc>
		 Retrieves a list of available services items from the server specified.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier><apiDesc>org.igniterealtime.xiff.data.IQ
		 </apiDesc></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The server to query for service items
		 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>The callback function to call when results are retrieved
		 </apiDesc></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The callback function to call when errors are received
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a list of available services items from the server specified. Items include things such
		 as available transports and user directories. On successful query, the callback specified in the will be
		 called and passed a single parameter containing the query results.
		 		 <pre>
		 <iq id="iq_3" to="192.168.1.37" type="get">
		 <query xmlns="http://jabber.org/protocol/disco#items"/>
		 </iq>
		 </pre>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0030.html#items"><linktext>http://xmpp.org/extensions/xep-0030.html#items</linktext></link></related-links></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:Browser:Browser"><apiName>Browser</apiName><shortdesc>
		 Creates a new Browser object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the <codeph>XMPPConnection</codeph> instance to use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new Browser object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:XMPPBOSHConnection"><apiName>XMPPBOSHConnection</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.core:XMPPConnection</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:connect"><apiName>connect</apiName><shortdesc>
		 The first request from the client to the connection manager requests a new session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>Not used
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The first request from the client to the connection manager requests a new session.
		 		 <p>The <b>body</b> element of the first request SHOULD possess
		 the following attributes (they SHOULD NOT be included in any other requests
		 except as specified under Adding Streams To A Session):</p>
		 		 <ul>
		 <li>'to' -- This attribute specifies the target domain of the first stream.</li>
		 <li>'xml:lang' -- This attribute (as defined in Section 2.12 of XML 1.0 [17])
		   specifies the default language of any human-readable XML character data
		   sent or received during the session.</li>
		 <li>'ver' -- This attribute specifies the highest version of the BOSH protocol
		   that the client supports. The numbering scheme is "major.minor" (where
		   the minor number MAY be incremented higher than a single digit, so it
		   MUST be treated as a separate integer). Note: The 'ver' attribute should
		   not be confused with the version of any protocol being transported.</li>
		 <li>'wait' -- This attribute specifies the longest time (in seconds) that
		   the connection manager is allowed to wait before responding to any request
		   during the session. This enables the client to limit the delay before it
		   discovers any network failure, and to prevent its HTTP/TCP connection
		   from expiring due to inactivity.</li>
		 <li>'hold' -- This attribute specifies the maximum number of requests the
		   connection manager is allowed to keep waiting at any one time during the
		   session. If the client is not able to use HTTP Pipelining then this SHOULD
		   be set to "1".</li>
		 </ul>
		 		 <p>Note: Clients that only support Polling Sessions MAY prevent the connection
		 manager from waiting by setting 'wait' or 'hold' to "0". However, polling is
		 NOT RECOMMENDED since the associated increase in bandwidth consumption and
		 the decrease in responsiveness are both typically one or two orders of
		 magnitude!</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0206.html#initiate"><linktext>http://xmpp.org/extensions/xep-0206.html#initiate</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:disconnect"><apiName>disconnect</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0124.html#terminate"><linktext>http://xmpp.org/extensions/xep-0124.html#terminate</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:handleNodeType"><apiName>handleNodeType</apiName><shortdesc>
		 TODO: Is this somthing that could be safely removed?
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/></apiParam></apiOperationDef><apiDesc>
		 TODO: Is this somthing that could be safely removed?
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:pauseSession"><apiName>pauseSession</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>true if pause request is sent
		 </apiDesc></apiReturn><apiParam><apiItemName>seconds</apiItemName><apiType value="uint"/></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:processConnectionResponse"><apiName>processConnectionResponse</apiName><shortdesc>
		 Session Creation Response
		 		 After receiving a new session request, the connection manager MUST generate
		 an opaque, unpredictable session identifier (or SID).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>responseBody</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Session Creation Response
		 		 <p>After receiving a new session request, the connection manager MUST generate
		 an opaque, unpredictable session identifier (or SID). The SID MUST be unique
		 within the context of the connection manager application. The <b>body</b>
		 element of the connection manager's response to the client's session creation
		 request MUST possess the following attributes (they SHOULD NOT be included in
		 any other responses):</p>
		 		 <ul>
		 <li>'sid' -- This attribute specifies the SID</li>
		 <li>'wait' -- This is the longest time (in seconds) that the connection manager
		   will wait before responding to any request during the session. The time MUST be
		   less than or equal to the value specified in the session request.</li>
		 </ul>
		 		 <p>The <b>body</b> element SHOULD also include the following attributes
		 (they SHOULD NOT be included in any other responses):</p>
		 		 <ul>
		 <li>'ver' -- This attribute specifies the highest version of the BOSH protocol
		   that the connection manager supports, or the version specified by the client in
		   its request, whichever is lower.</li>
		 <li>'polling' -- This attribute specifies the shortest allowable polling
		   interval (in seconds). This enables the client to not send empty request
		   elements more often than desired (see Polling Sessions and Overactivity).</li>
		 <li>'inactivity' -- This attribute specifies the longest allowable inactivity
		   period (in seconds). This enables the client to ensure that the periods with
		   no requests pending are never too long (see Polling Sessions and Inactivity).</li>
		 <li>'requests' -- This attribute enables the connection manager to limit the
		   number of simultaneous requests the client makes (see Overactivity and
		   Polling Sessions). The RECOMMENDED values are either "2" or one more than
		   the value of the 'hold' attribute specified in the session request.</li>
		 <li>'hold' -- This attribute informs the client about the maximum number
		   of requests the connection manager will keep waiting at any one time during
		   the session. This value MUST NOT be greater than the value specified by the
		   client in the session request.</li>
		 <li>'to' -- This attribute communicates the identity of the backend server
		   to which the client is attempting to connect.</li>
		 </ul>
		 		 <p>The connection manager MAY include an 'accept' attribute in the session
		 creation response element, to specify a space-separated list of the content
		 encodings it can decompress. After receiving a session creation response
		 with an 'accept' attribute, clients MAY include an HTTP Content-Encoding
		 header in subsequent requests (indicating one of the encodings specified
		 in the 'accept' attribute) and compress the bodies of the requests
		 accordingly.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0124.html#session-response"><linktext>http://xmpp.org/extensions/xep-0124.html#session-response</linktext></link><link href="http://xmpp.org/extensions/xep-0206.html#create"><linktext>http://xmpp.org/extensions/xep-0206.html#create</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:restartStream"><apiName>restartStream</apiName><shortdesc>
		 Upon receiving the success element, the client
		 MUST then ask the connection manager to restart the stream by
		 sending a "restart request".</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Upon receiving the <b>success</b> element, the client
		 MUST then ask the connection manager to restart the stream by
		 sending a "restart request".
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:sendDataToServer"><apiName>sendDataToServer</apiName><shortdesc>
		 Connection to the server in BOSH is a simple URLRequest.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>ByteArray that might be compressed if enabled
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Connection to the server in BOSH is a simple URLRequest.
		 		 <p>All information is encoded in the body of standard HTTP POST
		 requests and responses. Each HTTP body contains a single
		 <b>body</b> wrapper which encapsulates the XML elements
		 being transferred.</p>
		 		 <p>BOSH requires all incoming and outgoing data to be wrapped in
		 <codeph>body</codeph> element. That should be taken care of before possible
		 Stream Compression.</p>
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0124.html#overview"><linktext>http://xmpp.org/extensions/xep-0124.html#overview</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc>
		 Does nothing, BOSH uses polling instead.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Does nothing, BOSH uses polling instead.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPBOSHConnection:protected:sendXML"><apiName>sendXML</apiName><shortdesc>
		 Pass through to sendRequests method for having the
		 body wrapper around the given data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Pass through to <codeph>sendRequests</codeph> method for having the
		 <codeph>body</codeph> wrapper around the given data.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:XMPPBOSHConnection:XMPPBOSHConnection"><apiName>XMPPBOSHConnection</apiName><shortdesc>
		 TLS compression (as defined in RFC 3920) and Stream Compression (as defined
		 in Stream Compression [XEP-0138]) are NOT RECOMMENDED in BOSH since compression
		 SHOULD be negotiated at the HTTP layer using the 'accept' attribute
		 of the BOSH session creation response.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>secure</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Determines which port is used
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 TLS compression (as defined in RFC 3920) and Stream Compression (as defined
		 in Stream Compression [XEP-0138]) are NOT RECOMMENDED in BOSH since compression
		 SHOULD be negotiated at the HTTP layer using the 'accept' attribute
		 of the BOSH session creation response.
		 		 <p>TLS compression and Stream Compression SHOULD NOT be used at
		 the same time as HTTP content encoding.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:UnescapedJID"><apiName>UnescapedJID</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.core:AbstractJID</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:UnescapedJID:equals"><apiName>equals</apiName><shortdesc>
		 Determines if two unescaped JIDs are equivalent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>True if the JIDs are equivalent.
		 </apiDesc></apiReturn><apiParam><apiItemName>testJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID with which to test equivalency.
		 		 </apiDesc></apiParam><apiParam><apiItemName>shouldTestBareJID</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
		 Determines if two unescaped JIDs are equivalent.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:UnescapedJID:UnescapedJID"><apiName>UnescapedJID</apiName><shortdesc>
		 Creates a new UnescapedJID object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>inJID</apiItemName><apiType value="String"/><apiDesc>The JID in String form.
		 </apiDesc></apiParam><apiParam><apiItemName>validate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Will validate the JID string if true. Invalid
		 JIDs will throw an error.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new UnescapedJID object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:EscapedJID"><apiName>EscapedJID</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.core:AbstractJID</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:EscapedJID:equals"><apiName>equals</apiName><shortdesc>
		 Determines if two escaped JIDs are equivalent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>True if the JIDs are equivalent.
		 </apiDesc></apiReturn><apiParam><apiItemName>testJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The JID with which to test equivalency.
		 		 </apiDesc></apiParam><apiParam><apiItemName>shouldTestBareJID</apiItemName><apiType value="Boolean"/></apiParam></apiOperationDef><apiDesc>
		 Determines if two escaped JIDs are equivalent.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:EscapedJID:EscapedJID"><apiName>EscapedJID</apiName><shortdesc>
		 Creates a new EscapedJID object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>inJID</apiItemName><apiType value="String"/><apiDesc>The JID in String form.
		 </apiDesc></apiParam><apiParam><apiItemName>validate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Will validate the JID string if true. Invalid
		 JIDs will throw an error.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new EscapedJID object.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:XMPPTLSConnection"><apiName>XMPPTLSConnection</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.core:IXMPPConnection</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.core:XMPPConnection</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:configureTLSSocket"><apiName>configureTLSSocket</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="" invalidHref="com.hurlant.crypto.tls.TLSSocket.xml"><linktext>com.hurlant.crypto.tls.TLSSocket</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:connect"><apiName>connect</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:disconnect"><apiName>disconnect</apiName><shortdesc>
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:handleNodeType"><apiName>handleNodeType</apiName><shortdesc>
		 
		 Calls a appropriate parser base on the nodeName.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Calls a appropriate parser base on the nodeName.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:handleStreamTLS"><apiName>handleStreamTLS</apiName><shortdesc>
		 In case the user or the server requires the use of TLS, this method
		 will initiate the handshake.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiIsOverride/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiType value="XML"/></apiParam></apiOperationDef><apiDesc>
		 In case the user or the server requires the use of TLS, this method
		 will initiate the handshake.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:XMPPTLSConnection:protected:removeTLSSocketEventListeners"><apiName>removeTLSSocketEventListeners</apiName><shortdesc>
		 Remove those listeners that the configureTLSSocket method added.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="protected"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove those listeners that the <codeph>configureTLSSocket</codeph> method added.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:XMPPTLSConnection:XMPPTLSConnection"><apiName>XMPPTLSConnection</apiName><shortdesc>
		 Constructor.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Constructor.
		 <p>The connection socket created in XMPPConnection is used until the server responds as "proceed".</p>
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:IListener"><apiName>IListener</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:InBandRegistrator"><apiName>InBandRegistrator</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:InBandRegistrator:changePassword"><apiName>changePassword</apiName><shortdesc>
		 Changes the user's account password on the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newPassword</apiItemName><apiType value="String"/><apiDesc>The new password
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Changes the user's account password on the server. If the password change is successful,
		 the class will broadcast a <codeph>ChangePasswordSuccessEvent.PASSWORD_SUCCESS</codeph> event.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:InBandRegistrator:getRegistrationFields"><apiName>getRegistrationFields</apiName><shortdesc>
		 Issues a request for the information that must be submitted for registration with the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Issues a request for the information that must be submitted for registration with the server.
		 When the data returns, a <codeph>RegistrationFieldsEvent.REG_FIELDS</codeph> event is dispatched
		 containing the requested data.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:InBandRegistrator:sendRegistrationFields"><apiName>sendRegistrationFields</apiName><shortdesc>
		 Registers a new account with the server, sending the registration data as specified in the fieldMap</shortdesc><prolog><asCustoms><paramter.>		 </paramter.></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldMap</apiItemName><apiType value="Object"/><apiDesc>An object map containing the data to use for registration. The map should be composed of
		 			attribute:value pairs for each registration data item.
		 </apiDesc></apiParam><apiParam><apiItemName>key</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>This element is obsolete, but is included here for historical completeness.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Registers a new account with the server, sending the registration data as specified in the fieldMap</apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:InBandRegistrator:InBandRegistrator"><apiName>InBandRegistrator</apiName><shortdesc>
		 Manage client registration and password changing.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to the <codeph>XMPPConnection</codeph> instance to use.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Manage client registration and password changing.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:AbstractJID"><apiName>AbstractJID</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:AbstractJID:escapedNode"><apiName>escapedNode</apiName><shortdesc>
		 Provides functionality to convert a JID to an escaped format.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>The escaped string.
		 		 TODO: simplify with native methods
		 </apiDesc></apiReturn><apiParam><apiItemName>n</apiItemName><apiType value="String"/><apiDesc>The string to escape.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Provides functionality to convert a JID to an escaped format.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/package.html#encodeURIComponent%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/package.html#encodeURIComponent%28%29</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.core:AbstractJID:toString"><apiName>toString</apiName><shortdesc>
		 Converts JID represented by this class to a String.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The JID as a String.
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Converts JID represented by this class to a String.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:AbstractJID:unescapedNode"><apiName>unescapedNode</apiName><shortdesc>
		 Provides functionality to return an escaped JID into a normal String.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>The unescaped string.
		 </apiDesc></apiReturn><apiParam><apiItemName>n</apiItemName><apiType value="String"/><apiDesc>The string to unescape.
		 		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Provides functionality to return an escaped JID into a normal String.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.core:AbstractJID:AbstractJID"><apiName>AbstractJID</apiName><shortdesc>
		 Creates a new AbstractJID object.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>inJID</apiItemName><apiType value="String"/><apiDesc>The JID as a String.
		 </apiDesc></apiParam><apiParam><apiItemName>validate</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>True if the JID should be validated.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Creates a new AbstractJID object. Used via EscapedJID or UnescapedJID.
		 		 <p>Each allowable portion of a JID (node identifier, domain identifier, and resource identifier)
		 MUST NOT be more than 1023 bytes in length, resulting in a maximum total size
		 (including the @ and / separators) of 3071 bytes.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:IXMPPConnection"><apiName>IXMPPConnection</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:connect"><apiName>connect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>streamType</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:disableExtensions"><apiName>disableExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:disconnect"><apiName>disconnect</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:enableExtensions"><apiName>enableExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>exts</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:sendKeepAlive"><apiName>sendKeepAlive</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IXMPPConnection:org.igniterealtime.xiff.core:IXMPPConnection:send"><apiName>send</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IXMPPStanza</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.core:IBrowser"><apiName>IBrowser</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:browseItem"><apiName>browseItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getNodeInfo"><apiName>getNodeInfo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getNodeItems"><apiName>getNodeItems</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>service</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>node</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getServiceInfo"><apiName>getServiceInfo</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.core:IBrowser:org.igniterealtime.xiff.core:IBrowser:getServiceItems"><apiName>getServiceItems</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiReturn><apiParam><apiItemName>server</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/></apiParam><apiParam><apiItemName>errorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.auth"><apiName>org.igniterealtime.xiff.data.auth</apiName><apiClassifier id="org.igniterealtime.xiff.data.auth:AuthExtension"><apiName>AuthExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:computeDigest"><apiName>computeDigest</apiName><shortdesc>
		 Computes the SHA1 digest of the password and session ID for use when
		 authenticating with the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>sessionID</apiItemName><apiType value="String"/><apiDesc>The session ID provided by the server
		 </apiDesc></apiParam><apiParam><apiItemName>password</apiItemName><apiType value="String"/><apiDesc>The user's password
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Computes the SHA1 digest of the password and session ID for use when
		 authenticating with the server.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The element name
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The namespace
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the AuthExtension is "jabber:iq:auth".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:isDigest"><apiName>isDigest</apiName><shortdesc>
		 Determines whether this is a digest (SHA1) authentication.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>It is a digest (true); it is not a digest (false)
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Determines whether this is a digest (SHA1) authentication.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.auth:AuthExtension:isPassword"><apiName>isPassword</apiName><shortdesc>
		 Determines whether this is a plain-text password authentication.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>It is plain-text password (true); it is not plain-text
		 password (false)
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Determines whether this is a plain-text password authentication.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.auth:AuthExtension:AuthExtension"><apiName>AuthExtension</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.bind"><apiName>org.igniterealtime.xiff.data.bind</apiName><apiClassifier id="org.igniterealtime.xiff.data.bind:BindExtension"><apiName>BindExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.bind:BindExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.bind:BindExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.bind:BindExtension:BindExtension"><apiName>BindExtension</apiName><shortdesc>
		 Support for resource binding is REQUIRED in XMPP client and server
		 implementations.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Support for resource binding is REQUIRED in XMPP client and server
		 implementations.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.browse"><apiName>org.igniterealtime.xiff.data.browse</apiName><apiClassifier id="org.igniterealtime.xiff.data.browse:BrowseExtension"><apiName>BrowseExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.browse:BrowseItem</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 If you are generating a browse response to a browse request, then
		 fill out the items list with this method.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.browse:BrowseItem</apiOperationClassifier><apiDesc>the item added
		 </apiDesc></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.browse:BrowseItem</apiOperationClassifier><apiDesc>BrowseItem which contains the info related to the browsed resource
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 If you are generating a browse response to a browse request, then
		 fill out the items list with this method.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.browse.xml#BrowseItem"><linktext>org.igniterealtime.xiff.data.browse.BrowseItem</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The namespace
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the BrowseExtension is "jabber:iq:browse".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.browse:BrowseExtension:BrowseExtension"><apiName>BrowseExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.browse:BrowseItem"><apiName>BrowseItem</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.browse:BrowseItem:addNamespace"><apiName>addNamespace</apiName><shortdesc>
		 Add new features that are supported if you are responding to a
		 browse request
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="XML"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Add new features that are supported if you are responding to a
		 browse request
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.browse:BrowseItem:BrowseItem"><apiName>BrowseItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.disco"><apiName>org.igniterealtime.xiff.data.disco</apiName><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoItem"><apiName>DiscoItem</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.disco:DiscoItem:equals"><apiName>equals</apiName><shortdesc>
		 Does all three properties match the in the given DiscoItem to this one?
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoItem</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does all three properties match the in the given DiscoItem to this one?
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoItem:DiscoItem"><apiName>DiscoItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:LastActivityExtension"><apiName>LastActivityExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.disco:LastActivityExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:LastActivityExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.disco:LastActivityExtension:LastActivityExtension"><apiName>LastActivityExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension"><apiName>InfoDiscoExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.disco:DiscoExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:addFeature"><apiName>addFeature</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoFeature</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoFeature</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:addFeatures"><apiName>addFeatures</apiName><shortdesc>
		 Add features as a list of namespace strings.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc>List of DiscoFeature elements created
		 </apiDesc></apiReturn><apiParam><apiItemName>varNames</apiItemName><apiType value="Array"/></apiParam></apiOperationDef><apiDesc>
		 Add features as a list of namespace strings.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:addIdentity"><apiName>addIdentity</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoIdentity</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>identity</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoIdentity</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.disco:InfoDiscoExtension:InfoDiscoExtension"><apiName>InfoDiscoExtension</apiName><shortdesc>
		 In case you enable the FormExtension, you might get the extended disco information...</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 In case you enable the FormExtension, you might get the extended disco information...
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoExtension"><apiName>DiscoExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoExtension:DiscoExtension"><apiName>DiscoExtension</apiName><shortdesc>
		 The name of the resource of the service queried if the resource
		 doesn't have a JID.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/></apiParam></apiConstructorDef><apiDesc>
		 The name of the resource of the service queried if the resource
		 doesn't have a JID.
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://www.jabber.org/registrar/disco-nodes.html"><linktext>http://www.jabber.org/registrar/disco-nodes.html</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension"><apiName>ItemDiscoExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.disco:DiscoExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoItem</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoItem</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.disco:ItemDiscoExtension:ItemDiscoExtension"><apiName>ItemDiscoExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoFeature"><apiName>DiscoFeature</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.disco:DiscoFeature:equals"><apiName>equals</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoFeature</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoFeature:DiscoFeature"><apiName>DiscoFeature</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.disco:DiscoIdentity"><apiName>DiscoIdentity</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.disco:DiscoIdentity:equals"><apiName>equals</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.disco:DiscoIdentity</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.disco:DiscoIdentity:DiscoIdentity"><apiName>DiscoIdentity</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.feature"><apiName>org.igniterealtime.xiff.data.feature</apiName><apiClassifier id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension"><apiName>FeatureNegotiationExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension:FeatureNegotiationExtension"><apiName>FeatureNegotiationExtension</apiName><shortdesc>
		 Use FormExtension as a child extension.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Use <codeph>FormExtension</codeph> as a child extension.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.forms.enum"><apiName>org.igniterealtime.xiff.data.forms.enum</apiName><apiClassifier id="org.igniterealtime.xiff.data.forms.enum:FormType"><apiName>FormType</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms.enum:FormFieldType"><apiName>FormFieldType</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.forms"><apiName>org.igniterealtime.xiff.data.forms</apiName><apiClassifier id="org.igniterealtime.xiff.data.forms:FormExtension"><apiName>FormExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:getFormField"><apiName>getFormField</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.forms:FormField</apiOperationClassifier><apiDesc>FormField the matching form field
		 </apiDesc></apiReturn><apiParam><apiItemName>varName</apiItemName><apiType value="String"/><apiDesc>The varName of the form field to retrieve
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.forms:FormExtension:setFieldMap"><apiName>setFieldMap</apiName><shortdesc>
		 Sets the fields given a fieldMap object containing keys of field vars
		 and values of value arrays.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>fieldMap</apiItemName><apiType value="Object"/><apiDesc>Object
		 Format:
		 { "varName": [ value1, value2, ... ] }
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the fields given a fieldMap object containing keys of field vars
		 and values of value arrays.
		 		 <p>Shorthand for setting <codeph>fields</codeph> property.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.forms:FormExtension:FormExtension"><apiName>FormExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms:FormReported"><apiName>FormReported</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.forms:FormReported:FormReported"><apiName>FormReported</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms:FormItem"><apiName>FormItem</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.forms:FormItem:FormItem"><apiName>FormItem</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.forms:FormField"><apiName>FormField</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.forms:FormField:FormField"><apiName>FormField</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>varName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>values</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>options</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>desc</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>required</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.id"><apiName>org.igniterealtime.xiff.data.id</apiName><apiClassifier id="org.igniterealtime.xiff.data.id:UUIDGenerator"><apiName>UUIDGenerator</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.id:IIDGenerator</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.id:UUIDGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates the unique ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The generated ID
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Generates the unique ID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.id:UUIDGenerator:UUIDGenerator"><apiName>UUIDGenerator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.id:SOIncrementalGenerator"><apiName>SOIncrementalGenerator</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.id:IIDGenerator</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.id:IncrementalGenerator</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.id:SOIncrementalGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/><apiDesc>The generated ID
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Generates a unique ID.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.id:SOIncrementalGenerator:SOIncrementalGenerator"><apiName>SOIncrementalGenerator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.id:IncrementalGenerator"><apiName>IncrementalGenerator</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.id:IIDGenerator</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.id:IncrementalGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The generated ID
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Generates a unique ID.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.id:IncrementalGenerator:IncrementalGenerator"><apiName>IncrementalGenerator</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.id:IIDGenerator"><apiName>IIDGenerator</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><example><codeph>XMPPStanza.idGenerator = new SOIncrementalGenerator();</codeph>
	 </example></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.id:IIDGenerator:org.igniterealtime.xiff.data.id:IIDGenerator:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates an ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The generated ID
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Generates an ID.
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.im"><apiName>org.igniterealtime.xiff.data.im</apiName><apiClassifier id="org.igniterealtime.xiff.data.im:RosterItem"><apiName>RosterItem</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.im:RosterItem:addGroupNamed"><apiName>addGroupNamed</apiName><shortdesc>
		 Adds a group to the roster item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiDesc>The name of the group to add
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a group to the roster item. Contacts in the roster can be associated
		 with multiple groups.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterItem:removeAllGroups"><apiName>removeAllGroups</apiName><shortdesc>
		 Remove all group elements
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Remove all group elements
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterItem:removeGroupByName"><apiName>removeGroupByName</apiName><shortdesc>
		 Remove a single group with the given name
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc/></apiReturn><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove a single group with the given name
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.im:RosterItem:RosterItem"><apiName>RosterItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>The parent XML
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:RosterItemVO"><apiName>RosterItemVO</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IRosterItemVO</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.im:RosterItemVO:toString"><apiName>toString</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/><apiDesc/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterItemVO:get"><apiName>get</apiName><shortdesc>
		 Returns an Roster item value object if it exists,
		 use the "create" parameter to create one if it does not.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.im:RosterItemVO</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>create</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns an Roster item value object if it exists,
		 use the "create" parameter to create one if it does not.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.im:RosterItemVO:RosterItemVO"><apiName>RosterItemVO</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>newJID</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:IRosterGroup"><apiName>IRosterGroup</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:addItem"><apiName>addItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:contains"><apiName>contains</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:IRosterGroup:org.igniterealtime.xiff.data.im:IRosterGroup:removeItem"><apiName>removeItem</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:RosterGroup"><apiName>RosterGroup</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IRosterGroup</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.im:RosterGroup:addItem"><apiName>addItem</apiName><shortdesc>
		 Insert a new roster item if it does not already exist in this group
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Insert a new roster item if it does not already exist in this group
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterGroup:contains"><apiName>contains</apiName><shortdesc>
		 Does the given item exist in this group?
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does the given item exist in this group?
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterGroup:removeItem"><apiName>removeItem</apiName><shortdesc>
		 Remove the given roster item from this group.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove the given roster item from this group.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.im:RosterGroup:RosterGroup"><apiName>RosterGroup</apiName><shortdesc>
		 Create a new group with the given name
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>label</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Create a new group with the given name
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:IRosterItemVO"><apiName>IRosterItemVO</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.im:IContact</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:IContact"><apiName>IContact</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.im:RosterExtension"><apiName>RosterExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 Adds a single roster item to the extension payload.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The JID of the contact to add
		 </apiDesc></apiParam><apiParam><apiItemName>subscription</apiItemName><apiType value="String"/><apiData/><apiDesc>The subscription type of the roster item contact.
		 			There are pre-defined static variables for these string options in this class definition.
		 </apiDesc></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiData/><apiDesc>The display name or nickname of the contact.
		 </apiDesc></apiParam><apiParam><apiItemName>groups</apiItemName><apiType value="Array"/><apiData>null</apiData><apiDesc>An array of strings of the group names that this contact should be placed in.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a single roster item to the extension payload.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The element name
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:getItemByJID"><apiName>getItemByJID</apiName><shortdesc>
		 Gets one item from the roster query, returning the first item found with the JID specified.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.im:RosterItem</apiOperationClassifier><apiDesc>A roster item object with the following attributes: "jid", "subscription", "nickname", and "groups".
		 </apiDesc></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Gets one item from the roster query, returning the first item found with the JID specified.
		 If none is found, then it returns null.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.im:RosterExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The namespace
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the RosterExtension is "jabber:iq:roster".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.im:RosterExtension:RosterExtension"><apiName>RosterExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.muc"><apiName>org.igniterealtime.xiff.data.muc</apiName><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCItem"><apiName>MUCItem</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCItem:MUCItem"><apiName>MUCItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCBaseExtension"><apiName>MUCBaseExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.muc:MUCBaseExtension:addItem"><apiName>addItem</apiName><shortdesc>
		 Use this method to create a new item.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.muc:MUCItem</apiOperationClassifier><apiDesc>The newly created MUCItem
		 </apiDesc></apiReturn><apiParam><apiItemName>affiliation</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>A predefined string defining the affiliation the JID or nick has in relation to the room
		 </apiDesc></apiParam><apiParam><apiItemName>role</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The role the jid or nick has in the room
		 </apiDesc></apiParam><apiParam><apiItemName>nick</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The nickname of the new item
		 </apiDesc></apiParam><apiParam><apiItemName>jid</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The jid of the new item
		 </apiDesc></apiParam><apiParam><apiItemName>actor</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The user that is actually creating the request
		 </apiDesc></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The reason why the action associated with this item is being preformed
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Use this method to create a new item.  Either the affiliation or role are requried.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCBaseExtension:MUCBaseExtension"><apiName>MUCBaseExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCExtension"><apiName>MUCExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data.muc:IMUCExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.muc:MUCExtension:addChildNode"><apiName>addChildNode</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>childNode</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCExtension:MUCExtension"><apiName>MUCExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUC"><apiName>MUC</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCStatus"><apiName>MUCStatus</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCStatus:MUCStatus"><apiName>MUCStatus</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCAdminExtension"><apiName>MUCAdminExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.muc:MUCBaseExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCAdminExtension:MUCAdminExtension"><apiName>MUCAdminExtension</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCUserExtension"><apiName>MUCUserExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.muc:MUCBaseExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:decline"><apiName>decline</apiName><shortdesc>
		 Use this extension to decline an invitation
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>from</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Use this extension to decline an invitation
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:destroy"><apiName>destroy</apiName><shortdesc>
		 Use this extension to destroy a room
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>room</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Use this extension to destroy a room
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:hasStatusCode"><apiName>hasStatusCode</apiName><shortdesc>
		 Does the given status code exist in the list of statuses saved in this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc/></apiReturn><apiParam><apiItemName>code</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Does the given status code exist in the list of statuses saved in this extension.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCUserExtension:invite"><apiName>invite</apiName><shortdesc>
		 Use this extension to invite another user
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>from</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>reason</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Use this extension to invite another user
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCUserExtension:MUCUserExtension"><apiName>MUCUserExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension"><apiName>MUCOwnerExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.muc:MUCBaseExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:destroy"><apiName>destroy</apiName><shortdesc>
	     Replaces the destroy node with a new node and sets
	     the reason element and jid attribute
	     	     </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>reason</apiItemName><apiType value="String"/><apiDesc>A string describing the reason for room destruction. Use <codeph>null</codeph> to remove.
	     </apiDesc></apiParam><apiParam><apiItemName>alternateJID</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>A string containing a JID that room members can use instead of this room
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
	     Replaces the <codeph>destroy</codeph> node with a new node and sets
	     the <codeph>reason</codeph> element and <codeph>jid</codeph> attribute
	     	     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.muc:MUCOwnerExtension:MUCOwnerExtension"><apiName>MUCOwnerExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.muc:IMUCExtension"><apiName>IMUCExtension</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.muc:IMUCExtension:org.igniterealtime.xiff.data.muc:IMUCExtension:addChildNode"><apiName>addChildNode</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>childNode</apiItemName><apiType value="XML"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.ping"><apiName>org.igniterealtime.xiff.data.ping</apiName><apiClassifier id="org.igniterealtime.xiff.data.ping:PingExtension"><apiName>PingExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.ping:PingExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.ping:PingExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.ping:PingExtension:PingExtension"><apiName>PingExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.privatedata"><apiName>org.igniterealtime.xiff.data.privatedata</apiName><apiClassifier id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension"><apiName>PrivateDataExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.privatedata:PrivateDataExtension:PrivateDataExtension"><apiName>PrivateDataExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>privateName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>privateNamespace</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>payload</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.privatedata:IPrivatePayload</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.register"><apiName>org.igniterealtime.xiff.data.register</apiName><apiClassifier id="org.igniterealtime.xiff.data.register:RegisterExtension"><apiName>RegisterExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.register:RegisterExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.register:RegisterExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.register:RegisterExtension:getRequiredFieldNames"><apiName>getRequiredFieldNames</apiName><shortdesc>
		 In order to determine which fields are required for registration with a host,
		 an entity SHOULD first send an IQ get to the host.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc>Names of the required fields
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 In order to determine which fields are required for registration with a host,
		 an entity SHOULD first send an IQ get to the host. The entity SHOULD NOT attempt
		 to guess at the required fields by first sending an IQ set, since the nature
		 of the required data is subject to service provisioning.
		 		 <p>All fields available in this XML, except "key" and "instructions" are required.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.register:RegisterExtension:RegisterExtension"><apiName>RegisterExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The parent node used to build the XML tree.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.rpc"><apiName>org.igniterealtime.xiff.data.rpc</apiName><apiClassifier id="org.igniterealtime.xiff.data.rpc:XMLRPC"><apiName>XMLRPC</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.rpc:XMLRPC:fromXML"><apiName>fromXML</apiName><shortdesc>
		 Extract and marshall the XML-RPC response to Flash types.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Array"/><apiDesc>Mixed object of either an array of results from the method call or a fault.
		 If the result is a fault, "result.isFault" will evaulate as true.
		 </apiDesc></apiReturn><apiParam><apiItemName>xml</apiItemName><apiType value="XML"/><apiDesc>The XML containing the message response
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Extract and marshall the XML-RPC response to Flash types.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.rpc:XMLRPC:toXML"><apiName>toXML</apiName><shortdesc>
		 The marshalling process, accepting a block of XML, a string description of the remote method,
		 and an array of flash type parameters.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="XML"/><apiDesc>XML containing the XML marshalled result
		 </apiDesc></apiReturn><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/></apiParam><apiParam><apiItemName>method</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>params</apiItemName><apiType value="Array"/></apiParam></apiOperationDef><apiDesc>
		 The marshalling process, accepting a block of XML, a string description of the remote method,
		 and an array of flash type parameters.
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.rpc:RPCExtension"><apiName>RPCExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.rpc:RPCExtension:call"><apiName>call</apiName><shortdesc>
		 Place the remote call.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>methodName</apiItemName><apiType value="String"/><apiDesc>The name of the remote procedure to call
		 </apiDesc></apiParam><apiParam><apiItemName>params</apiItemName><apiType value="Array"/><apiDesc>A collection of parameters of any type
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Place the remote call.  This method serializes the remote procedure call to XML.
		 The call will be made on the remote machine when the stanza containing this extension is sent to the server.
		 		 If this extension is being returned, then check the result property instead.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.rpc.xml#RPCExtension/result"><linktext>result</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.rpc:RPCExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Interface method, returning the namespace for this extension
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Interface method, returning the namespace for this extension
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#IExtension"><linktext>org.igniterealtime.xiff.data.IExtension</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.rpc:RPCExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Interface method, returning the namespace for this extension
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Interface method, returning the namespace for this extension
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#IExtension"><linktext>org.igniterealtime.xiff.data.IExtension</linktext></link></related-links></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.rpc:RPCExtension:RPCExtension"><apiName>RPCExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.search"><apiName>org.igniterealtime.xiff.data.search</apiName><apiClassifier id="org.igniterealtime.xiff.data.search:SearchItem"><apiName>SearchItem</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.search:SearchItem:SearchItem"><apiName>SearchItem</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.search:SearchExtension"><apiName>SearchExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.search:SearchExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.search:SearchExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.search:SearchExtension:getRequiredFieldNames"><apiName>getRequiredFieldNames</apiName><shortdesc>
		 TODO rename to getter
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 TODO rename to getter
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.search:SearchExtension:SearchExtension"><apiName>SearchExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The parent node used to build the XML tree.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.session"><apiName>org.igniterealtime.xiff.data.session</apiName><apiClassifier id="org.igniterealtime.xiff.data.session:SessionExtension"><apiName>SessionExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.session:SessionExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.session:SessionExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.session:SessionExtension:SessionExtension"><apiName>SessionExtension</apiName><shortdesc>
		 Session Establishment as defined in RFC 3921
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Session Establishment as defined in RFC 3921
		 		 </apiDesc></apiConstructorDetail><related-links><link href="org.igniterealtime.xiff.core.xml#XMPPConnection/establishSession"><linktext>org.igniterealtime.xiff.core.XMPPConnection.establishSession</linktext></link></related-links></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.sharedgroups"><apiName>org.igniterealtime.xiff.data.sharedgroups</apiName><apiClassifier id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension"><apiName>SharedGroupsExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension:SharedGroupsExtension"><apiName>SharedGroupsExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.si"><apiName>org.igniterealtime.xiff.data.si</apiName><apiClassifier id="org.igniterealtime.xiff.data.si:FileTransferExtension"><apiName>FileTransferExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.si:FileTransferExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.si:FileTransferExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.si:FileTransferExtension:FileTransferExtension"><apiName>FileTransferExtension</apiName><shortdesc>
		 The size and name attributes MUST be present in the profile.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 The size and name attributes MUST be present in the profile.
		 The other attributes MAY be present.
		 		 <p>There are two possible child elements of the root: 'desc' and 'range'.
		 Both are OPTIONAL.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.si:StreamInitiationExtension"><apiName>StreamInitiationExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.si:StreamInitiationExtension:StreamInitiationExtension"><apiName>StreamInitiationExtension</apiName><shortdesc>
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.stream"><apiName>org.igniterealtime.xiff.data.stream</apiName><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBCloseExtension"><apiName>IBBCloseExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.stream:IBBExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.stream:IBBCloseExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBCloseExtension:IBBCloseExtension"><apiName>IBBCloseExtension</apiName><shortdesc>
		 		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBOpenExtension"><apiName>IBBOpenExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.stream:IBBExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.stream:IBBOpenExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBOpenExtension:IBBOpenExtension"><apiName>IBBOpenExtension</apiName><shortdesc>
		 The recommended values for blockSize (4096) and
		 stanza ("iq") are set by default.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 The recommended values for <codeph>blockSize</codeph> (4096) and
		 <codeph>stanza</codeph> ("iq") are set by default.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBDataExtension"><apiName>IBBDataExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data.stream:IBBExtension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.stream:IBBDataExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBDataExtension:IBBDataExtension"><apiName>IBBDataExtension</apiName><shortdesc>
		 		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.stream:IBBExtension"><apiName>IBBExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.stream:IBBExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.stream:IBBExtension:IBBExtension"><apiName>IBBExtension</apiName><shortdesc>
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.vcard"><apiName>org.igniterealtime.xiff.data.vcard</apiName><apiClassifier id="org.igniterealtime.xiff.data.vcard:VCardExtension"><apiName>VCardExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.vcard:VCardExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.vcard:VCardExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.vcard:VCardExtension:VCardExtension"><apiName>VCardExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>(Optional) The containing XML for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.version"><apiName>org.igniterealtime.xiff.data.version</apiName><apiClassifier id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension"><apiName>SoftwareVersionExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:getElementName"><apiName>getElementName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:getNS"><apiName>getNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.version:SoftwareVersionExtension:SoftwareVersionExtension"><apiName>SoftwareVersionExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.whiteboard"><apiName>org.igniterealtime.xiff.data.whiteboard</apiName><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:Stroke"><apiName>Stroke</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:Stroke:Stroke"><apiName>Stroke</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData></apiParam><apiParam><apiItemName>opacity</apiItemName><apiType value="Number"/><apiData>100</apiData></apiParam><apiParam><apiItemName>thickness</apiItemName><apiType value="Number"/><apiData>unknown</apiData></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:Fill"><apiName>Fill</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:Fill:Fill"><apiName>Fill</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>color</apiItemName><apiType value="uint"/><apiData>0</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>opacity</apiItemName><apiType value="Number"/><apiData>100</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension"><apiName>WhiteboardExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The element name
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "x".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The namespace
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the WhiteboardExtension is "xiff:wb".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension:WhiteboardExtension"><apiName>WhiteboardExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data.whiteboard:Path"><apiName>Path</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:addPoints"><apiName>addPoints</apiName><shortdesc>
	     Another interface to add segments to this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>the segment object created from the parameters with the rounded values
	     from being modified in addSegment
	     </apiDesc></apiReturn><apiParam><apiItemName>from_x</apiItemName><apiType value="Number"/><apiDesc>the start x coordinate
	     </apiDesc></apiParam><apiParam><apiItemName>from_y</apiItemName><apiType value="Number"/><apiDesc>the start y coordinate
	     </apiDesc></apiParam><apiParam><apiItemName>to_x</apiItemName><apiType value="Number"/><apiDesc>the destination x coordinate
	     </apiDesc></apiParam><apiParam><apiItemName>to_y</apiItemName><apiType value="Number"/><apiDesc>the destination y coordinate
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
	     Another interface to add segments to this extension.  Instead of passing
	     an object, you can pass parameters that will be converted into a segment
	     and passed to addSegment
	     	     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:addSegment"><apiName>addSegment</apiName><shortdesc>
	     Adds a start point and end point to this path.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc>the segment parameter with the rounded values
	     </apiDesc></apiReturn><apiParam><apiItemName>seg</apiItemName><apiType value="Object"/><apiDesc>An object containing the properties "from" and "to" which
	     are objects with the properties "x" and "y".  An example would
	     be { from: { x: 100, y: 200 }, to: { x: 200, y: 300 } }
	     </apiDesc></apiParam></apiOperationDef><apiDesc>
	     Adds a start point and end point to this path.  The points will be rounded
	     to the nearest integer to save serialization space.  10.0000001 takes
	     4 times as much spaces as 10
	     	     </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.whiteboard.xml#Path/addPoints"><linktext>addPoints</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:serializeSegments"><apiName>serializeSegments</apiName><shortdesc>
		 Creates the compact form of the segments
		 in the fomrmat defined by SVG
		 Example: M100 200L14 -15 L 125 100L150 200 300 400M10 20L30 40 50 60 z
	     		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>String containging the compact version
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Creates the compact form of the segments
		 in the fomrmat defined by SVG
		 Example: M100 200L14 -15 L 125 100L150 200 300 400M10 20L30 40 50 60 z
	     		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.whiteboard:Path:serialize"><apiName>serialize</apiName><shortdesc>
		 TODO: make as set xml
		 		 Serializes the Path data to XML for sending.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc>An indicator as to whether serialization was successful
		 </apiDesc></apiReturn><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiDesc>The parent node that this extension should be serialized into
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 TODO: make as set xml
		 		 Serializes the Path data to XML for sending.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.whiteboard:Path:Path"><apiName>Path</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data.xhtml"><apiName>org.igniterealtime.xiff.data.xhtml</apiName><apiClassifier id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension"><apiName>XHTMLExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Gets the element name associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The element name
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the element name associated with this extension.
		 The element for this extension is "html".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Gets the namespace associated with this extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The namespace
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Gets the namespace associated with this extension.
		 The namespace for the XHTMLExtension is "http://www.w3.org/1999/xhtml".
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data.xhtml:XHTMLExtension:XHTMLExtension"><apiName>XHTMLExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>The parent node for this extension
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.data"><apiName>org.igniterealtime.xiff.data</apiName><apiClassifier id="org.igniterealtime.xiff.data:IMessage"><apiName>IMessage</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IIQ"><apiName>IIQ</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:ExtensionClassRegistry"><apiName>ExtensionClassRegistry</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:getNamespaces"><apiName>getNamespaces</apiName><shortdesc>
		 Get a list of namespaces of the currently enabled extensions.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef><apiDesc>
		 Get a list of namespaces of the currently enabled extensions.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:lookup"><apiName>lookup</apiName><shortdesc>
		 Find the extension with the given NS and ELEMENT_NAME if availale in the registery.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Class"/><apiDesc/></apiReturn><apiParam><apiItemName>ns</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional ELEMENT_NAME, used if there are several extensions with the same NS
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Find the extension with the given NS and ELEMENT_NAME if availale in the registery.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:register"><apiName>register</apiName><shortdesc>
		 Registers the given extension with the extension registry for it to be used,
		 in case incoming data matches its ELEMENT_NAME and NS.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Boolean"/><apiDesc>In case the Extension was already added or it was not proper type, returns false.
		 </apiDesc></apiReturn><apiParam><apiItemName>extensionClass</apiItemName><apiType value="Class"/></apiParam></apiOperationDef><apiDesc>
		 Registers the given extension with the extension registry for it to be used,
		 in case incoming data matches its ELEMENT_NAME and NS.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionClassRegistry:remove"><apiName>remove</apiName><shortdesc>
		 Remove the given extension from the registery.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>extensionClass</apiItemName><apiType value="Class"/></apiParam></apiOperationDef><apiDesc>
		 Remove the given extension from the registery.
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:Message"><apiName>Message</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IMessage</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:Message:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID for the stanza.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>The generated ID
		 </apiDesc></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The prefix for the ID to be generated
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data:Message:Message"><apiName>Message</apiName><shortdesc>
		 A class for abstraction and encapsulation of message data.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The JID of the message recipient
		 </apiDesc></apiParam><apiParam><apiItemName>msgID</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The JID of the message sender - the server should report an error if this is falsified
		 </apiDesc></apiParam><apiParam><apiItemName>msgBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message ID
		 </apiDesc></apiParam><apiParam><apiItemName>msgHTMLBody</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body in plain-text format
		 </apiDesc></apiParam><apiParam><apiItemName>msgType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message body in XHTML format
		 </apiDesc></apiParam><apiParam><apiItemName>msgSubject</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The message type
		 </apiDesc></apiParam><apiParam><apiItemName>chatState</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>(Optional) The message subject
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 A class for abstraction and encapsulation of message data.
		 		 <p>The <b>message</b> stanza kind can be seen as a "push" mechanism whereby
		 one entity pushes information to another entity, similar to the
		 communications that occur in a system such as email.  All message
		 stanzas SHOULD possess a 'to' attribute that specifies the intended
		 recipient of the message; upon receiving such a stanza, a server
		 SHOULD route or deliver it to the intended recipient (see Server
		 Rules for Handling XML Stanzas (Section 10) for general routing and
		 delivery rules related to XML stanzas).</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IQ"><apiName>IQ</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IIQ</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:IQ:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID for the stanza.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>The generated ID
		 </apiDesc></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The prefix for the ID to be generated
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data:IQ:IQ"><apiName>IQ</apiName><shortdesc>
		 A class for abstraction and encapsulation of IQ (info-query) data.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The JID of the IQ recipient
		 </apiDesc></apiParam><apiParam><apiItemName>iqType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The type of the IQ - there are static variables declared for each type
		 </apiDesc></apiParam><apiParam><apiItemName>iqID</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The unique ID of the IQ, one of TYPE_constants
		 </apiDesc></apiParam><apiParam><apiItemName>iqCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The function to be called when the server responds to the IQ
		 </apiDesc></apiParam><apiParam><apiItemName>iqErrorCallback</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>The function to be called when there is an error
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 A class for abstraction and encapsulation of IQ (info-query) data.
		 		 <p>Info/Query, or <b>IQ</b>, is a request-response mechanism, similar in some
		 ways to [HTTP].  The semantics of IQ enable an entity to make a
		 request of, and receive a response from, another entity.  The data
		 content of the request and response is defined by the namespace
		 declaration of a direct child element of the IQ element, and the
		 interaction is tracked by the requesting entity through use of the
		 'id' attribute.  Thus, IQ interactions follow a common pattern of
		 structured data exchange such as get/result or set/result (although
		 an error may be returned in reply to a request if appropriate):</p>
		 <pre>
		    Requesting                 Responding
		      Entity                     Entity
		    ----------                 ----------
		        |                           |
		        | &lt;iq type='get' id='1'&gt;    |
		        | ------------------------&gt; |
		        |                           |
		        | &lt;iq type='result' id='1'&gt; |
		        | &lt;------------------------ |
		        |                           |
		        | &lt;iq type='set' id='2'&gt;    |
		        | ------------------------&gt; |
		        |                           |
		        | &lt;iq type='error' id='2'&gt;  |
		        | &lt;------------------------ |
		        |                           |
	     </pre>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:XMPPStanza"><apiName>XMPPStanza</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiDynamic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:XMPPStanza:generateID"><apiName>generateID</apiName><shortdesc>
		 Generates a unique ID for the stanza.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>The generated ID
		 </apiDesc></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The prefix for the ID to be generated
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data:XMPPStanza:XMPPStanza"><apiName>XMPPStanza</apiName><shortdesc>
		 The following four first attributes are common to message, presence, and IQ stanzas.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>to
		 </apiDesc></apiParam><apiParam><apiItemName>sender</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>	from
		 </apiDesc></apiParam><apiParam><apiItemName>theType</apiItemName><apiType value="String"/><apiDesc>	type
		 </apiDesc></apiParam><apiParam><apiItemName>theID</apiItemName><apiType value="String"/><apiDesc>	id
		 </apiDesc></apiParam><apiParam><apiItemName>nodeName</apiItemName><apiType value="String"/><apiDesc>One of the four ELEMENT_constants
		 		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 The following four first attributes are common to message, presence, and IQ stanzas.
		 The fifth, xml:lang, is not included here.
		 		 <p>RFC 3920: 9.  XML Stanzas</p>
		 		 <p>After TLS negotiation (Section 5) if desired, SASL negotiation
		 (Section 6), and Resource Binding (Section 7) if necessary, XML
		 stanzas can be sent over the streams.  Three kinds of XML stanza are
		 defined for the 'jabber:client' and 'jabber:server' namespaces:
		 &gt;message/&lt;, &gt;presence/&lt;, and &gt;iq/&lt;.  In addition, there are five
		 common attributes for these kinds of stanza.  These common
		 attributes, as well as the basic semantics of the three stanza kinds,
		 are defined herein; more detailed information regarding the syntax of
		 XML stanzas in relation to instant messaging and presence
		 applications is provided in [XMPP-IM].</p>
		 		 <pre>
		           |  initiating to receiving  |  receiving to initiating
		  ---------+---------------------------+-----------------------
		  to       |  hostname of receiver     |  silently ignored
		  from     |  silently ignored         |  hostname of receiver
		  id       |  silently ignored         |  session key
		  xml:lang |  default language         |  default language
		  version  |  signals XMPP 1.0 support |  signals XMPP 1.0 support
		 </pre>
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://tools.ietf.org/html/rfc3920#section-9"><linktext>http://tools.ietf.org/html/rfc3920#section-9</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:AbstractExtension"><apiName>AbstractExtension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:Extension</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data:AbstractExtension:AbstractExtension"><apiName>AbstractExtension</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:XMLStanza"><apiName>XMLStanza</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMLStanza</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:ExtensionContainer</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getAttribute"><apiName>getAttribute</apiName><shortdesc>
		 Convinience method for getting element value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting element value from the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getChildAttribute"><apiName>getChildAttribute</apiName><shortdesc>
		 Convinience method for getting child element attribute value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting child element attribute value from the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getChildField"><apiName>getChildField</apiName><shortdesc>
		 Convinience method for getting child element value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting child element value from the XML.
		 		 <p>Might seem over complex, but AS3 seems to handle different kind of
		 XML differently, thus shorthands and even methods such as <codeph>localName()</codeph>
		 do not work as expected.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:getField"><apiName>getField</apiName><shortdesc>
		 Convinience method for getting element value from the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for getting element value from the XML.
		 		 <p>Might seem over complex, but AS3 seems to handle different kind of
		 XML differently, thus shorthands and even methods such as <codeph>localName()</codeph>
		 do not work as expected.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:removeFields"><apiName>removeFields</apiName><shortdesc>
		 Helper method for removing all child elements that have the given name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef><apiDesc>
		 Helper method for removing all child elements that have the given name.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setAttribute"><apiName>setAttribute</apiName><shortdesc>
		 Convinience method for setting a value to a element in the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting a value to a element in the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setChildAttribute"><apiName>setChildAttribute</apiName><shortdesc>
		 Convinience method for setting an attribute for a child element of the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting an attribute for a child element of the XML.
		 		 <p>In case the child element does not exist, it will be created.</p>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setChildField"><apiName>setChildField</apiName><shortdesc>
		 Convinience method for setting a value for a child element of the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elem</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting a value for a child element of the XML.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:setField"><apiName>setField</apiName><shortdesc>
		 Convinience method for setting a value to a element in the XML.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convinience method for setting a value to a element in the XML.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:XMLStanza:toString"><apiName>toString</apiName><shortdesc>
		 Converts the base stanza XML to a string.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/><apiDesc>The base XML in string form, as in <codeph>toXMLString()</codeph>
		 </apiDesc></apiReturn></apiOperationDef><apiDesc>
		 Converts the base stanza XML to a string.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data:XMLStanza:XMLStanza"><apiName>XMLStanza</apiName><shortdesc>
		 XMPP is based on communication with XML stanzas
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 XMPP is based on communication with XML stanzas
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:Presence"><apiName>Presence</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IPresence</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.data:Presence:Presence"><apiName>Presence</apiName><shortdesc>
		 According to Google Talk developers via their presentation [somewhere few years ago],
		 most of the XMPP related traffic in their service is made by Presence.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>recipient</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The recipient of the presence, usually in the form of a JID.
		 </apiDesc></apiParam><apiParam><apiItemName>sender</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:EscapedJID</apiOperationClassifier><apiDesc>The sender of the presence, usually in the form of a JID.
		 </apiDesc></apiParam><apiParam><apiItemName>presenceType</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The type of presence as a string. There are predefined static variables for
		 </apiDesc></apiParam><apiParam><apiItemName>showVal</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>What to show for this presence (away, online, etc.) There are predefined static variables for
		 </apiDesc></apiParam><apiParam><apiItemName>statusVal</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The status; usually used for the "away message."
		 </apiDesc></apiParam><apiParam><apiItemName>priorityVal</apiItemName><apiType value="int"/><apiData>0</apiData><apiDesc>The priority of this presence; usually on a scale of 1-5.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 According to Google Talk developers via their presentation [somewhere few years ago],
		 most of the XMPP related traffic in their service is made by Presence.
		 		 <p>The <b>presence</b> element can be seen as a basic broadcast or
		 "publish-subscribe" mechanism, whereby multiple entities receive
		 information about an entity to which they have subscribed (in this
		 case, network availability information).  In general, a publishing
		 entity SHOULD send a presence stanza with no 'to' attribute, in which
		 case the server to which the entity is connected SHOULD broadcast or
		 multiplex that stanza to all subscribing entities.  However, a
		 publishing entity MAY also send a presence stanza with a 'to'
		 attribute, in which case the server SHOULD route or deliver that
		 stanza to the intended recipient.  See Server Rules for Handling XML
		 Stanzas (Section 10) for general routing and delivery rules related
		 to XML stanzas, and [XMPP-IM] for presence-specific rules in the
		 context of an instant messaging and presence application.</p>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IPresence"><apiName>IPresence</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMPPStanza</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:Extension"><apiName>Extension</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>org.igniterealtime.xiff.data:XMLStanza</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:Extension:remove"><apiName>remove</apiName><shortdesc>
		 Removes the extension from its parent.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes the extension from its parent.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data:Extension:Extension"><apiName>Extension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>parent</apiItemName><apiType value="XML"/><apiData>null</apiData><apiDesc>The parent node that this extension should be appended to
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:ExtensionContainer"><apiName>ExtensionContainer</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:addExtension"><apiName>addExtension</apiName><shortdesc>
		 Add extension to the list of the given namespace and insert to the XML element as a child.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier><apiDesc>The same IExtension that was passed via the parameter
		 </apiDesc></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add extension to the list of the given namespace and insert to the XML element as a child.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:getAllExtensionsByNS"><apiName>getAllExtensionsByNS</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:getAllExtensions"><apiName>getAllExtensions</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc/></apiReturn></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:getExtension"><apiName>getExtension</apiName><shortdesc>
		 Get the extension having the given element name.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get the extension having the given element name.
		 Unfortunetly only takes the oldest of the list...
		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html#filter%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html#filter%28%29</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:removeAllExtensions"><apiName>removeAllExtensions</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:ExtensionContainer:removeExtension"><apiName>removeExtension</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/><apiDesc/></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.data:ExtensionContainer:ExtensionContainer"><apiName>ExtensionContainer</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IExtension"><apiName>IExtension</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:IExtension:org.igniterealtime.xiff.data:IExtension:getElementName"><apiName>getElementName</apiName><shortdesc>
		 Element name of the extension
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Element name of the extension
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtension:org.igniterealtime.xiff.data:IExtension:getNS"><apiName>getNS</apiName><shortdesc>
		 Namespace of the element
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef><apiDesc>
		 Namespace of the element
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IXMPPStanza"><apiName>IXMPPStanza</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IXMLStanza</apiBaseInterface><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:INodeProxy"><apiName>INodeProxy</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IXMLStanza"><apiName>IXMLStanza</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtendable</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:getAttribute"><apiName>getAttribute</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:getField"><apiName>getField</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:setAttribute"><apiName>setAttribute</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:setField"><apiName>setField</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IXMLStanza:org.igniterealtime.xiff.data:IXMLStanza:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.data:IExtendable"><apiName>IExtendable</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:INodeProxy</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:addExtension"><apiName>addExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:getAllExtensionsByNS"><apiName>getAllExtensionsByNS</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:getAllExtensions"><apiName>getAllExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:removeAllExtensions"><apiName>removeAllExtensions</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.data:IExtendable:org.igniterealtime.xiff.data:IExtendable:removeExtension"><apiName>removeExtension</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>extension</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IExtension</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.events"><apiName>org.igniterealtime.xiff.events</apiName><apiClassifier id="org.igniterealtime.xiff.events:RegistrationFieldsEvent"><apiName>RegistrationFieldsEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:RegistrationFieldsEvent:RegistrationFieldsEvent"><apiName>RegistrationFieldsEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:IncomingDataEvent"><apiName>IncomingDataEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:IncomingDataEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:IncomingDataEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:IncomingDataEvent:IncomingDataEvent"><apiName>IncomingDataEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:ConnectionSuccessEvent"><apiName>ConnectionSuccessEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:ConnectionSuccessEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:ConnectionSuccessEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:ConnectionSuccessEvent:ConnectionSuccessEvent"><apiName>ConnectionSuccessEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:IQEvent"><apiName>IQEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:IQEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:IQEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:IQEvent:IQEvent"><apiName>IQEvent</apiName><shortdesc>
		 Type should be the namespace of the extension that is related to this IQ
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 Type should be the namespace of the extension that is related to this IQ
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:InviteEvent"><apiName>InviteEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:InviteEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:InviteEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:InviteEvent:InviteEvent"><apiName>InviteEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent"><apiName>ChangePasswordSuccessEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:ChangePasswordSuccessEvent:ChangePasswordSuccessEvent"><apiName>ChangePasswordSuccessEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:ModelChangedEvent"><apiName>ModelChangedEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:ModelChangedEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:ModelChangedEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:ModelChangedEvent:ModelChangedEvent"><apiName>ModelChangedEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:PresenceEvent"><apiName>PresenceEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:PresenceEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:PresenceEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:PresenceEvent:PresenceEvent"><apiName>PresenceEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:MessageEvent"><apiName>MessageEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:MessageEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:MessageEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:MessageEvent:MessageEvent"><apiName>MessageEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:RosterEvent"><apiName>RosterEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:RosterEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RosterEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:RosterEvent:RosterEvent"><apiName>RosterEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent"><apiName>BookmarkRetrievedEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:BookmarkRetrievedEvent:BookmarkRetrievedEvent"><apiName>BookmarkRetrievedEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:VCardEvent"><apiName>VCardEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:VCardEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:VCardEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:VCardEvent:VCardEvent"><apiName>VCardEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>vcard</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.vcard:VCard</apiOperationClassifier></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:RoomEvent"><apiName>RoomEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:RoomEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RoomEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:RoomEvent:RoomEvent"><apiName>RoomEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:FileTransferEvent"><apiName>FileTransferEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:FileTransferEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:FileTransferEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:FileTransferEvent:FileTransferEvent"><apiName>FileTransferEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:SearchPrepEvent"><apiName>SearchPrepEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:SearchPrepEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:SearchPrepEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:SearchPrepEvent:SearchPrepEvent"><apiName>SearchPrepEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:LoginEvent"><apiName>LoginEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:LoginEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:LoginEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:LoginEvent:LoginEvent"><apiName>LoginEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:RegistrationSuccessEvent"><apiName>RegistrationSuccessEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:RegistrationSuccessEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:RegistrationSuccessEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:RegistrationSuccessEvent:RegistrationSuccessEvent"><apiName>RegistrationSuccessEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:BookmarkChangedEvent"><apiName>BookmarkChangedEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:BookmarkChangedEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:BookmarkChangedEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:BookmarkChangedEvent:BookmarkChangedEvent"><apiName>BookmarkChangedEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>bookmark</apiItemName><apiType value="any"/><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:DisconnectionEvent"><apiName>DisconnectionEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:DisconnectionEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:DisconnectionEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:DisconnectionEvent:DisconnectionEvent"><apiName>DisconnectionEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:XIFFErrorEvent"><apiName>XIFFErrorEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:XIFFErrorEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:XIFFErrorEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:XIFFErrorEvent:XIFFErrorEvent"><apiName>XIFFErrorEvent</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:PropertyChangeEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:PropertyChangeEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:PropertyChangeEvent:PropertyChangeEvent"><apiName>PropertyChangeEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>bubbles</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam><apiParam><apiItemName>cancelable</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.events:OutgoingDataEvent"><apiName>OutgoingDataEvent</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:Event</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.events:OutgoingDataEvent:clone"><apiName>clone</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="flash.events:Event"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.events:OutgoingDataEvent:toString"><apiName>toString</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiIsOverride/><apiReturn><apiType value="String"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.events:OutgoingDataEvent:OutgoingDataEvent"><apiName>OutgoingDataEvent</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.exception"><apiName>org.igniterealtime.xiff.exception</apiName><apiClassifier id="org.igniterealtime.xiff.exception:SerializationException"><apiName>SerializationException</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.exception:SerializationException:SerializationException"><apiName>SerializationException</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.filter"><apiName>org.igniterealtime.xiff.filter</apiName><apiClassifier id="org.igniterealtime.xiff.filter:IPacketFilter"><apiName>IPacketFilter</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.filter:IPacketFilter:org.igniterealtime.xiff.filter:IPacketFilter:accept"><apiName>accept</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>packet</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.filter:CallbackPacketFilter"><apiName>CallbackPacketFilter</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.filter:IPacketFilter</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.filter:CallbackPacketFilter:accept"><apiName>accept</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>packet</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:XMPPStanza</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.filter:CallbackPacketFilter:CallbackPacketFilter"><apiName>CallbackPacketFilter</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>callback</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.util:Callback</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>filterFunction</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>processFunction</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.im"><apiName>org.igniterealtime.xiff.im</apiName><apiClassifier id="org.igniterealtime.xiff.im:Roster"><apiName>Roster</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.im:IRoster</apiBaseInterface><apiBaseClassifier>org.igniterealtime.xiff.collections:ArrayCollection</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.im:Roster:addContact_result"><apiName>addContact_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:addContact"><apiName>addContact</apiName><shortdesc>
		 Adds a contact to the roster.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the contact to add
		 </apiDesc></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/><apiDesc>A friendly name for use when displaying this contact in the roster
		 </apiDesc></apiParam><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>(Optional) The name of the group that this contact should be added to. (Used for
		 organization in the roster listing.
		 </apiDesc></apiParam><apiParam><apiItemName>requestSubscription</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>(Optional) Determines whether a subscription request should be sent
		 to this user. Most of the time you will want this parameter to be true.
		 You will be unable to view the contacts presence status until a subscription request is granted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a contact to the roster. Remember: All roster data is managed on the server-side,
		 so this contact is added to the server-side roster first, and upon successful addition,
		 reflected in the local client-side copy of the roster.
		 		 </apiDesc><example>This example adds a contact to the roster and simultaneously requests a presence subscription
		 with the new contact.
		 <pre>myRoster.addContact( "homer@springfield.com", "Homer", "Drinking Buddies", true );</pre>
		 </example></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:denySubscription"><apiName>denySubscription</apiName><shortdesc>
		 Revokes an existing presence subscription or denies a subscription request.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the user or service that you are denying subscription
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Revokes an existing presence subscription or denies a subscription request. If a user
		 has sent you a subscription request you can use this method to deny that request. Otherwise,
		 if a user already has a granted presence subscription, you can use this method to revoke that
		 subscription.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:fetchRoster_result"><apiName>fetchRoster_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:fetchRoster"><apiName>fetchRoster</apiName><shortdesc>
		 Fetches the roster data from the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Fetches the roster data from the server. Once the data has been fetched, the Roster's data
		 provider is populated appropriately. If the Roster-XMPPConnection class dependency has been
		 set up before logging in, then this method will be called automatically because the Roster
		 listens for "login" events from the XMPPConnection.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:getContainingGroups"><apiName>getContainingGroups</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/><apiDesc/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:getGroup"><apiName>getGroup</apiName><shortdesc>
		 Get a group by given name
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterGroup</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get a group by given name
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:getPresence"><apiName>getPresence</apiName><shortdesc>
		 Get the Presence of the given user if any.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IPresence</apiOperationClassifier><apiDesc/></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Get the Presence of the given user if any.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:grantSubscription"><apiName>grantSubscription</apiName><shortdesc>
		 Grants a user or service authorization for subscribing to your presence.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tojid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the user or service to grant subscription to
		 </apiDesc></apiParam><apiParam><apiItemName>requestAfterGrant</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Whether or not a reciprocal subscription request should be sent
		 to the grantee, so that you may, in turn, subscribe to his/her/its presence.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Grants a user or service authorization for subscribing to your presence. Once authorization
		 is granted, the user can see whether you are offline, online, away, etc. Subscriptions can
		 be revoked at any time using the <codeph>denySubscription()</codeph> method.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:removeContact"><apiName>removeContact</apiName><shortdesc>
		 Removes a contact from the roster and revokes all presence subscriptions for that contact.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>The value object which is to be removed
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes a contact from the roster and revokes all presence subscriptions for that contact.
		 This method will only attempt action if the contact you are trying to remove is currently on the
		 roster in the first place.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:requestSubscription"><apiName>requestSubscription</apiName><shortdesc>
		 Requests subscription authorization with a user or service.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>The JID of the user or service that you wish to subscribe to
		 </apiDesc></apiParam><apiParam><apiItemName>isResponse</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Requests subscription authorization with a user or service. In the XMPP-world, you cannot receive
		 notifications on changes to a contact's presence until that contact has authorized you to subscribe
		 to his/her/its presence.
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.im.xml#Roster/subscriptionDenial"><linktext>subscriptionDenial</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:setPresence"><apiName>setPresence</apiName><shortdesc>
		 Sets your current presence status.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>show</apiItemName><apiType value="String"/><apiDesc>The show type for your presence. This represents what others should see - whether
		 you are offline, online, away, etc.
		 </apiDesc></apiParam><apiParam><apiItemName>status</apiItemName><apiType value="String"/><apiDesc>The status message associated with the show value
		 </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/><apiDesc>(Optional) A priority integer for the presence
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets your current presence status. Calling this method notifies others who
		 are subscribed to your presence of a presence change. You should use this to
		 change your status to away, extended-away, etc. There are static variables that
		 you can use defined in the presence class for the <codeph>show</codeph> parameter:
		 <ul>
		 <li><codeph>Presence.SHOW_AWAY</codeph></li>
		 <li><codeph>Presence.SHOW_CHAT</codeph></li>
		 <li><codeph>Presence.SHOW_DND</codeph></li>
		 <li><codeph>Presence.SHOW_NORMAL</codeph></li>
		 <li><codeph>Presence.SHOW_XA</codeph></li>
		 </ul>
		 		 </apiDesc></apiOperationDetail><related-links><link href="org.igniterealtime.xiff.data.xml#Presence"><linktext>org.igniterealtime.xiff.data.Presence</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:unsubscribe_result"><apiName>unsubscribe_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:updateContactGroups"><apiName>updateContactGroups</apiName><shortdesc>
		 Updates the groups associated with an existing contact.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>The value object of the contact to update
		 </apiDesc></apiParam><apiParam><apiItemName>newGroupNames</apiItemName><apiType value="Array"/><apiDesc>The new groups to associate the contact with
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Updates the groups associated with an existing contact.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:Roster:updateContactName"><apiName>updateContactName</apiName><shortdesc>
		 Updates the display name for an existing contact.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier><apiDesc>The value object of the contact to update
		 </apiDesc></apiParam><apiParam><apiItemName>newName</apiItemName><apiType value="String"/><apiDesc>The new display name for this contact
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Updates the display name for an existing contact.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.im:Roster:Roster"><apiName>Roster</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>A reference to an XMPPConnection class instance
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.im:IRoster"><apiName>IRoster</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.collections:ICollection</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:addContact"><apiName>addContact</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>nickname</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>groupName</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>requestSubscription</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:denySubscription"><apiName>denySubscription</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tojid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:fetchRoster"><apiName>fetchRoster</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:getContainingGroups"><apiName>getContainingGroups</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Array"/></apiReturn><apiParam><apiItemName>item</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:getGroup"><apiName>getGroup</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterGroup</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:getPresence"><apiName>getPresence</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data:IPresence</apiOperationClassifier></apiReturn><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:grantSubscription"><apiName>grantSubscription</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>tojid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>requestAfterGrant</apiItemName><apiType value="Boolean"/><apiData>true</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:removeContact"><apiName>removeContact</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:requestSubscription"><apiName>requestSubscription</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier></apiParam><apiParam><apiItemName>isResponse</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:setPresence"><apiName>setPresence</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>show</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>status</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>priority</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:updateContactGroups"><apiName>updateContactGroups</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam><apiParam><apiItemName>newGroupNames</apiItemName><apiType value="Array"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.im:IRoster:org.igniterealtime.xiff.im:IRoster:updateContactName"><apiName>updateContactName</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>rosterItem</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data.im:IRosterItemVO</apiOperationClassifier></apiParam><apiParam><apiItemName>newName</apiItemName><apiType value="String"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.privatedata"><apiName>org.igniterealtime.xiff.privatedata</apiName><apiClassifier id="org.igniterealtime.xiff.privatedata:IPrivatePayload"><apiName>IPrivatePayload</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.data:IExtension</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.privatedata:PrivateDataManager"><apiName>PrivateDataManager</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.privatedata:PrivateDataManager:getPrivateData"><apiName>getPrivateData</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>elementNamespace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.util:Callback</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.privatedata:PrivateDataManager:setPrivateData"><apiName>setPrivateData</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>elementNamespace</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>payload</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.privatedata:IPrivatePayload</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.privatedata:PrivateDataManager:PrivateDataManager"><apiName>PrivateDataManager</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>aConnection</apiItemName><apiData>null</apiData><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.util"><apiName>org.igniterealtime.xiff.util</apiName><apiClassifier id="org.igniterealtime.xiff.util:Hex"><apiName>Hex</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:Hex:readBytes"><apiName>readBytes</apiName><shortdesc>
		 Read the bytes of the given bytearray and convert to a hex string
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>String in hex format
		 </apiDesc></apiReturn><apiParam><apiItemName>ba</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Read the bytes of the given bytearray and convert to a hex string
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:Hex:writeBytes"><apiName>writeBytes</apiName><shortdesc>
		 Write the given hex string to the bytearray
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="flash.utils:ByteArray"/><apiDesc>ByteArray that has the hex written in it
		 </apiDesc></apiReturn><apiParam><apiItemName>ba</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>hex</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Write the given hex string to the bytearray
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:ICompressor"><apiName>ICompressor</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:ICompressor:org.igniterealtime.xiff.util:ICompressor:clear"><apiName>clear</apiName><shortdesc>
		 Finish compressing in this session.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Finish compressing in this session.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ICompressor:org.igniterealtime.xiff.util:ICompressor:compress"><apiName>compress</apiName><shortdesc>
		 Compress the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef><apiDesc>
		 Compress the given ByteArray.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ICompressor:org.igniterealtime.xiff.util:ICompressor:uncompress"><apiName>uncompress</apiName><shortdesc>
		 Uncompress the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/></apiParam></apiOperationDef><apiDesc>
		 Uncompress the given ByteArray.
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:Zlib"><apiName>Zlib</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.util:ICompressor</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:Zlib:clear"><apiName>clear</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:Zlib:compress"><apiName>compress</apiName><shortdesc>
		 Compress (deflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/><apiDesc>Compressed data
		 </apiDesc></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Compress (deflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:Zlib:uncompress"><apiName>uncompress</apiName><shortdesc>
		 Uncompress (inflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/><apiDesc>Uncompressed data
		 </apiDesc></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Uncompress (inflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.util:Zlib:Zlib"><apiName>Zlib</apiName><shortdesc>
		 Stream Compression - Zlib
		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Stream Compression - Zlib
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:SHA1"><apiName>SHA1</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:SHA1:calcSHA1"><apiName>calcSHA1</apiName><shortdesc>
		 Takes a string and returns the hex representation of its SHA1 hash.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc>The SHA1 hash of the string passed to the function
		 </apiDesc></apiReturn><apiParam><apiItemName>str</apiItemName><apiType value="String"/><apiDesc>The string to use for calculating the hash
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Takes a string and returns the hex representation of its SHA1 hash.
		 		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:Callback"><apiName>Callback</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:Callback:call"><apiName>call</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Object"/><apiDesc/></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>args
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.util:Callback:Callback"><apiName>Callback</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>scope</apiItemName><apiType value="Object"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>callback</apiItemName><apiType value="Function"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>args
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:DateTimeParser"><apiName>DateTimeParser</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:date2legacyString"><apiName>date2legacyString</apiName><shortdesc>
		 Convert a Date object to a string, CCYYMMDD, using UTC timezone.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc><codeph>CCYYMMDD</codeph>
		 </apiDesc></apiReturn><apiParam><apiItemName>date</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string, <codeph>CCYYMMDD</codeph>, using UTC timezone.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:date2string"><apiName>date2string</apiName><shortdesc>
		 Convert a Date object to a string, CCYY-MM-DD
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc><codeph>CCYY-MM-DD</codeph>
		 </apiDesc></apiReturn><apiParam><apiItemName>date</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string, <codeph>CCYY-MM-DD</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:dateTime2string"><apiName>dateTime2string</apiName><shortdesc>
		 Convert a Date object to a string CCYY-MM-DDThh:mm:ss[.sss]TZD
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc><codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph>
		 </apiDesc></apiReturn><apiParam><apiItemName>dateTime</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>ms</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Include milliseconds in the resulting string
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string <codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:legacyString2dateTime"><apiName>legacyString2dateTime</apiName><shortdesc>
		 Convert a legacy string CCYYMMDDThh:mm:ss to a Date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Date"/><apiDesc>Date object
		 </apiDesc></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a legacy string <codeph>CCYYMMDDThh:mm:ss</codeph> to a Date object
		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0090.html"><linktext>http://xmpp.org/extensions/xep-0090.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:legacyString2date"><apiName>legacyString2date</apiName><shortdesc>
		 Convert a lecagy string CCYYMMDD to a Date object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Date"/><apiDesc>Date object
		 </apiDesc></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a lecagy string <codeph>CCYYMMDD</codeph> to a Date object.
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:string2dateTime"><apiName>string2dateTime</apiName><shortdesc>
		 Convert a string CCYY-MM-DDThh:mm:ss[.sss]TZD to a Date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Date"/><apiDesc>Date object
		 </apiDesc></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a string <codeph>CCYY-MM-DDThh:mm:ss[.sss]TZD</codeph> to a Date object
		 </apiDesc></apiOperationDetail><related-links><link href="http://xmpp.org/extensions/xep-0082.html"><linktext>http://xmpp.org/extensions/xep-0082.html</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:string2date"><apiName>string2date</apiName><shortdesc>
		 Convert a string CCYY-MM-DD to a date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Date"/><apiDesc>Date object
		 </apiDesc></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a string <codeph>CCYY-MM-DD</codeph> to a date object
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:string2time"><apiName>string2time</apiName><shortdesc>
		 Convert a string hh:mm:ss[.sss][TZD] to a Date object
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="Date"/><apiDesc>Date object
		 </apiDesc></apiReturn><apiParam><apiItemName>stamp</apiItemName><apiType value="String"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a string <codeph>hh:mm:ss[.sss][TZD]</codeph> to a Date object
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:DateTimeParser:time2string"><apiName>time2string</apiName><shortdesc>
		 Convert a Date object to a string hh:mm:ss[.sss][TZD]
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="String"/><apiDesc><codeph>hh:mm:ss[.sss][TZD]</codeph>
		 </apiDesc></apiReturn><apiParam><apiItemName>time</apiItemName><apiType value="Date"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>ms</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>Include milliseconds in the resulting string
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Convert a Date object to a string <codeph>hh:mm:ss[.sss][TZD]</codeph>
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.util:ZlibNative"><apiName>ZlibNative</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.util:ICompressor</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.util:ZlibNative:clear"><apiName>clear</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ZlibNative:compress"><apiName>compress</apiName><shortdesc>
		 Compress (deflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/><apiDesc>Compressed data
		 </apiDesc></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Compress (deflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#deflate%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#deflate%28%29</linktext></link></related-links></apiOperation><apiOperation id="org.igniterealtime.xiff.util:ZlibNative:uncompress"><apiName>uncompress</apiName><shortdesc>
		 Uncompress (inflate) the given ByteArray.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="flash.utils:ByteArray"/><apiDesc>Uncompressed data
		 </apiDesc></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="flash.utils:ByteArray"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Uncompress (inflate) the given ByteArray.
		 		 </apiDesc></apiOperationDetail><related-links><link href="http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#inflate%28%29"><linktext>http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#inflate%28%29</linktext></link></related-links></apiOperation><apiConstructor id="org.igniterealtime.xiff.util:ZlibNative:ZlibNative"><apiName>ZlibNative</apiName><shortdesc>
		 Stream Compression - Native DEFLATE
		 		 All multi-byte numbers in the format described in RFC 1950 are stored with
		 the MOST-significant byte first (at the lower memory address).
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Stream Compression - Native DEFLATE
		 		 <p>All multi-byte numbers in the format described in RFC 1950 are stored with
		 the MOST-significant byte first (at the lower memory address).</p>
		 		 </apiDesc></apiConstructorDetail><related-links><link href="http://tools.ietf.org/html/rfc1950"><linktext>http://tools.ietf.org/html/rfc1950</linktext></link></related-links></apiConstructor></apiClassifier></apiPackage><apiPackage id="org.igniterealtime.xiff.vcard"><apiName>org.igniterealtime.xiff.vcard</apiName><apiClassifier id="org.igniterealtime.xiff.vcard:VCardPhoto"><apiName>VCardPhoto</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardPhoto</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardPhoto:VCardPhoto"><apiName>VCardPhoto</apiName><shortdesc>
		 To save a photo, either binaryValue or externalValue are required, but not both.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>type</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The image type of the photo. Required if binaryValue is passed in.
		 </apiDesc></apiParam><apiParam><apiItemName>binaryValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The BASE64 encoded binary value of the photo. Either binaryValue or externalValue are required, but not both.
		 </apiDesc></apiParam><apiParam><apiItemName>externalValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The URI to an external photo. Either binaryValue or externalValue are required, but not both.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 To save a photo, either binaryValue or externalValue are required, but not both.
		 If binaryValue is passed in, type is required.
		 If externalValue is passed in, type is not required.
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardAddress"><apiName>VCardAddress</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardAddress</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardAddress:VCardAddress"><apiName>VCardAddress</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>street</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>locality</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>region</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>postalCode</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>country</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>extendedAddress</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>poBox</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardName"><apiName>IVCardName</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardOrganization"><apiName>VCardOrganization</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardOrganization</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardOrganization:VCardOrganization"><apiName>VCardOrganization</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>name</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>unit</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCard"><apiName>IVCard</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:handleVCard"><apiName>handleVCard</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>iq</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:IVCard:org.igniterealtime.xiff.vcard:IVCard:saveVCard"><apiName>saveVCard</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier></apiParam></apiOperationDef></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardTelephone"><apiName>IVCardTelephone</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardSound"><apiName>IVCardSound</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardSound"><apiName>VCardSound</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardSound</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardSound:VCardSound"><apiName>VCardSound</apiName><shortdesc>
		 To save a sound, either phonetic, binaryValue or externalValue are required.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>phonetic</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The textual phonetic pronunciation.
		 </apiDesc></apiParam><apiParam><apiItemName>binaryValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The BASE64 encoded binary value of the audio pronunciation.
		 </apiDesc></apiParam><apiParam><apiItemName>externalValue</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>The URI to an external binary digital audio pronunciation.
		 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 To save a sound, either phonetic, binaryValue or externalValue are required.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardName"><apiName>VCardName</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardName</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardName:VCardName"><apiName>VCardName</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>given</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>middle</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>family</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>prefix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>suffix</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCard"><apiName>VCard</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCard</apiBaseInterface><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="org.igniterealtime.xiff.vcard:VCard:clearCache"><apiName>clearCache</apiName><shortdesc>
		 Immediately clears the vCard cache.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Immediately clears the vCard cache.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:createExtension"><apiName>createExtension</apiName><shortdesc>
		 Create the XML needed to send the VCard within the Extension.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.data.vcard:VCardExtension</apiOperationClassifier><apiDesc/></apiReturn></apiOperationDef><apiDesc>
		 Create the XML needed to send the VCard within the Extension.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:expireCache"><apiName>expireCache</apiName><shortdesc>
		 Immediately expires the vCard cache.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Immediately expires the vCard cache.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:getVCard"><apiName>getVCard</apiName><shortdesc>
		 The way a vCard is requested and then later referred to.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiOperationClassifier>org.igniterealtime.xiff.vcard:VCard</apiOperationClassifier><apiDesc>Reference to the vCard which will be filled once the loaded event occurs.
		 </apiDesc></apiReturn><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>jid</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:UnescapedJID</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The way a vCard is requested and then later referred to.
		 <codeph>var vCard:VCard = VCard.getVCard( connection, jid );
		 vCard.addEventListener( VCardEvent.LOADED, onVCardLoaded );</codeph>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:handleVCard"><apiName>handleVCard</apiName><shortdesc>
		 Deserializes the incoming IQ to fill the values of this vCard.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>iq</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IIQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Deserializes the incoming IQ to fill the values of this vCard.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:saveVCard_result"><apiName>saveVCard_result</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>resultIQ</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.data:IQ</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="org.igniterealtime.xiff.vcard:VCard:saveVCard"><apiName>saveVCard</apiName><shortdesc>
		 Saves a vCard.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>connection</apiItemName><apiOperationClassifier>org.igniterealtime.xiff.core:IXMPPConnection</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Saves a vCard.
		 </apiDesc></apiOperationDetail></apiOperation><apiConstructor id="org.igniterealtime.xiff.vcard:VCard:VCard"><apiName>VCard</apiName><shortdesc>
		 Don't call directly, use the static method getVCard() and add a callback.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>
		 Don't call directly, use the static method getVCard() and add a callback.
		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardAddress"><apiName>IVCardAddress</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardOrganization"><apiName>IVCardOrganization</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardGeographicalPosition"><apiName>IVCardGeographicalPosition</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:IVCardPhoto"><apiName>IVCardPhoto</apiName><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef></apiClassifierDetail></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardTelephone"><apiName>VCardTelephone</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardTelephone</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardTelephone:VCardTelephone"><apiName>VCardTelephone</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>voice</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>fax</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>pager</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>msg</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>cell</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>video</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="org.igniterealtime.xiff.vcard:VCardGeographicalPosition"><apiName>VCardGeographicalPosition</apiName><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>org.igniterealtime.xiff.vcard:IVCardGeographicalPosition</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="org.igniterealtime.xiff.vcard:VCardGeographicalPosition:VCardGeographicalPosition"><apiName>VCardGeographicalPosition</apiName><shortdesc>
		 		 </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>latitude</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>longitude</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>	 </apiDesc></apiParam></apiConstructorDef><apiDesc>
		 		 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage></allClasses>