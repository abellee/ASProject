<asdoc>

<classRec name='DateTimeParser' fullname='org.igniterealtime.xiff.util:DateTimeParser' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\util\DateTimeParser.as' namespace='org.igniterealtime.xiff.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A set of static functions to parse the time and date values.
	 All date related methods are the UTC versions.
	 	 <p>Also methods for handling legacy format are available</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0082.html
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0090.html
	 ]]></see>
</classRec>
<method name='date2legacyString' fullname='org.igniterealtime.xiff.util:DateTimeParser/date2legacyString' isStatic='true' isFinal='false' isOverride='false'  param_names='date' param_types='Date' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Convert a Date object to a string, <code>CCYYMMDD</code>, using UTC timezone.
		 ]]></description>
<param><![CDATA[date
		 ]]></param>
<return><![CDATA[<code>CCYYMMDD</code>
		 ]]></return>
</method>
<method name='date2string' fullname='org.igniterealtime.xiff.util:DateTimeParser/date2string' isStatic='true' isFinal='false' isOverride='false'  param_names='date' param_types='Date' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Convert a Date object to a string, <code>CCYY-MM-DD</code>
		 ]]></description>
<param><![CDATA[date
		 ]]></param>
<return><![CDATA[<code>CCYY-MM-DD</code>
		 ]]></return>
</method>
<method name='dateTime2string' fullname='org.igniterealtime.xiff.util:DateTimeParser/dateTime2string' isStatic='true' isFinal='false' isOverride='false'  param_names='dateTime;ms' param_types='Date;Boolean' param_defaults='undefined;false' result_type='String'>
<description><![CDATA[
		 Convert a Date object to a string <code>CCYY-MM-DDThh:mm:ss[.sss]TZD</code>
		 ]]></description>
<param><![CDATA[dateTime
		 ]]></param>
<param><![CDATA[ms	Include milliseconds in the resulting string
		 ]]></param>
<return><![CDATA[<code>CCYY-MM-DDThh:mm:ss[.sss]TZD</code>
		 ]]></return>
</method>
<method name='legacyString2dateTime' fullname='org.igniterealtime.xiff.util:DateTimeParser/legacyString2dateTime' isStatic='true' isFinal='false' isOverride='false'  param_names='stamp' param_types='String' param_defaults='undefined' result_type='Date'>
<description><![CDATA[
		 Convert a legacy string <code>CCYYMMDDThh:mm:ss</code> to a Date object
		 ]]></description>
<param><![CDATA[stamp
		 ]]></param>
<return><![CDATA[Date object
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0090.html
		 ]]></see>
</method>
<method name='legacyString2date' fullname='org.igniterealtime.xiff.util:DateTimeParser/legacyString2date' isStatic='true' isFinal='false' isOverride='false'  param_names='stamp' param_types='String' param_defaults='undefined' result_type='Date'>
<description><![CDATA[
		 Convert a lecagy string <code>CCYYMMDD</code> to a Date object.
		 		 ]]></description>
<param><![CDATA[stamp
		 ]]></param>
<return><![CDATA[Date object
		 ]]></return>
</method>
<method name='string2dateTime' fullname='org.igniterealtime.xiff.util:DateTimeParser/string2dateTime' isStatic='true' isFinal='false' isOverride='false'  param_names='stamp' param_types='String' param_defaults='undefined' result_type='Date'>
<description><![CDATA[
		 Convert a string <code>CCYY-MM-DDThh:mm:ss[.sss]TZD</code> to a Date object
		 ]]></description>
<param><![CDATA[stamp
		 ]]></param>
<return><![CDATA[Date object
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0082.html
		 ]]></see>
</method>
<method name='string2date' fullname='org.igniterealtime.xiff.util:DateTimeParser/string2date' isStatic='true' isFinal='false' isOverride='false'  param_names='stamp' param_types='String' param_defaults='undefined' result_type='Date'>
<description><![CDATA[
		 Convert a string <code>CCYY-MM-DD</code> to a date object
		 ]]></description>
<param><![CDATA[stamp
		 ]]></param>
<return><![CDATA[Date object
		 ]]></return>
</method>
<method name='string2time' fullname='org.igniterealtime.xiff.util:DateTimeParser/string2time' isStatic='true' isFinal='false' isOverride='false'  param_names='stamp' param_types='String' param_defaults='undefined' result_type='Date'>
<description><![CDATA[
		 Convert a string <code>hh:mm:ss[.sss][TZD]</code> to a Date object
		 ]]></description>
<param><![CDATA[stamp
		 ]]></param>
<return><![CDATA[Date object
		 ]]></return>
</method>
<method name='time2string' fullname='org.igniterealtime.xiff.util:DateTimeParser/time2string' isStatic='true' isFinal='false' isOverride='false'  param_names='time;ms' param_types='Date;Boolean' param_defaults='undefined;false' result_type='String'>
<description><![CDATA[
		 Convert a Date object to a string <code>hh:mm:ss[.sss][TZD]</code>
		 ]]></description>
<param><![CDATA[time
		 ]]></param>
<param><![CDATA[ms	Include milliseconds in the resulting string
		 ]]></param>
<return><![CDATA[<code>hh:mm:ss[.sss][TZD]</code>
		 ]]></return>
</method>
<classRec name='Hex' fullname='org.igniterealtime.xiff.util:Hex' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\util\Hex.as' namespace='org.igniterealtime.xiff.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Utility for reading and writing Hex formatted data to/from ByteArray.
	 ]]></description>
</classRec>
<method name='readBytes' fullname='org.igniterealtime.xiff.util:Hex/readBytes' isStatic='true' isFinal='false' isOverride='false'  param_names='ba' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Read the bytes of the given bytearray and convert to a hex string
		 		 ]]></description>
<param><![CDATA[ba
		 ]]></param>
<return><![CDATA[String in hex format
		 ]]></return>
</method>
<method name='writeBytes' fullname='org.igniterealtime.xiff.util:Hex/writeBytes' isStatic='true' isFinal='false' isOverride='false'  param_names='ba;hex' param_types='flash.utils:ByteArray;String' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Write the given hex string to the bytearray
		 		 ]]></description>
<param><![CDATA[ba
		 ]]></param>
<param><![CDATA[hex
		 ]]></param>
<return><![CDATA[ByteArray that has the hex written in it
		 ]]></return>
</method>
<interfaceRec name='ICompressor' fullname='org.igniterealtime.xiff.util:ICompressor' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\util\ICompressor.as' namespace='org.igniterealtime.xiff.util' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Interface for implementing Stream Compression
	 ]]></description>
</interfaceRec>
<method name='clear' fullname='org.igniterealtime.xiff.util:ICompressor/org.igniterealtime.xiff.util:ICompressor:clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Finish compressing in this session.
		 ]]></description>
</method>
<method name='compress' fullname='org.igniterealtime.xiff.util:ICompressor/org.igniterealtime.xiff.util:ICompressor:compress' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Compress the given ByteArray.
		 ]]></description>
</method>
<method name='uncompress' fullname='org.igniterealtime.xiff.util:ICompressor/org.igniterealtime.xiff.util:ICompressor:uncompress' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Uncompress the given ByteArray.
		 ]]></description>
</method>
<classRec name='Callback' fullname='org.igniterealtime.xiff.util:Callback' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\util\Callback.as' namespace='org.igniterealtime.xiff.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Sets an callback function
	 ]]></description>
</classRec>
<method name='Callback' fullname='org.igniterealtime.xiff.util:Callback/Callback' isStatic='false' isFinal='false' isOverride='false'  param_names='scope;callback;args' param_types='Object;Function;restParam' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[scope
		 ]]></param>
<param><![CDATA[callback
		 ]]></param>
<param><![CDATA[... args
		 ]]></param>
</method>
<method name='call' fullname='org.igniterealtime.xiff.util:Callback/call' isStatic='false' isFinal='false' isOverride='false'  param_names='args' param_types='restParam' param_defaults='undefined' result_type='Object'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[... args
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<field name='_args' fullname='org.igniterealtime.xiff.util:Callback/private:_args' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_callback' fullname='org.igniterealtime.xiff.util:Callback/private:_callback' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_scope' fullname='org.igniterealtime.xiff.util:Callback/private:_scope' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<classRec name='SHA1' fullname='org.igniterealtime.xiff.util:SHA1' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\util\SHA1.as' namespace='org.igniterealtime.xiff.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A static class for SHA1 hash creation. Original ActionScript 1.0 version
	 by Branden Hall. Original ActionScript 2.0 translation by Ron Haberle.
	 ]]></description>
<see><![CDATA[http://csrc.nist.gov/groups/ST/hash/statement.html
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3174
	 ]]></see>
</classRec>
<method name='calcSHA1' fullname='org.igniterealtime.xiff.util:SHA1/calcSHA1' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Takes a string and returns the hex representation of its SHA1 hash.
		 		 ]]></description>
<param><![CDATA[str The string to use for calculating the hash
		 ]]></param>
<return><![CDATA[The SHA1 hash of the string passed to the function
		 ]]></return>
</method>
<method name='ft' fullname='org.igniterealtime.xiff.util:SHA1/private:ft' isStatic='true' isFinal='false' isOverride='false'  param_names='t;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
</method>
<method name='hex' fullname='org.igniterealtime.xiff.util:SHA1/private:hex' isStatic='true' isFinal='false' isOverride='false'  param_names='num' param_types='Number' param_defaults='undefined' result_type='String'>
</method>
<method name='kt' fullname='org.igniterealtime.xiff.util:SHA1/private:kt' isStatic='true' isFinal='false' isOverride='false'  param_names='t' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='rol' fullname='org.igniterealtime.xiff.util:SHA1/private:rol' isStatic='true' isFinal='false' isOverride='false'  param_names='num;cnt' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='safe_add' fullname='org.igniterealtime.xiff.util:SHA1/private:safe_add' isStatic='true' isFinal='false' isOverride='false'  param_names='x;y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='str2blks' fullname='org.igniterealtime.xiff.util:SHA1/private:str2blks' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='Array'>
</method>
<field name='HEX_STR' fullname='org.igniterealtime.xiff.util:SHA1/private:HEX_STR' type='String' isStatic='true' isConst='true' defaultValue='0123456789abcdef' >
</field>
<classRec name='Zlib' fullname='org.igniterealtime.xiff.util:Zlib' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\util\Zlib.as' namespace='org.igniterealtime.xiff.util' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.util:ICompressor' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Compress the given ByteArrays by using the as3zlib library.
	 	 ]]></description>
<see><![CDATA[http://code.google.com/p/as3zlib/
	 ]]></see>
</classRec>
<method name='Zlib' fullname='org.igniterealtime.xiff.util:Zlib/Zlib' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 Stream Compression - Zlib
		 ]]></description>
</method>
<method name='clear' fullname='org.igniterealtime.xiff.util:Zlib/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='compress' fullname='org.igniterealtime.xiff.util:Zlib/compress' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Compress (deflate) the given ByteArray.
		 		 ]]></description>
<param><![CDATA[data
		 ]]></param>
<return><![CDATA[Compressed data
		 ]]></return>
</method>
<method name='emptyByteArrayIntoByteArray' fullname='org.igniterealtime.xiff.util:Zlib/private:emptyByteArrayIntoByteArray' isStatic='false' isFinal='false' isOverride='false'  param_names='chunk;target' param_types='flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='uncompress' fullname='org.igniterealtime.xiff.util:Zlib/uncompress' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Uncompress (inflate) the given ByteArray.
		 		 ]]></description>
<param><![CDATA[data
		 ]]></param>
<return><![CDATA[Uncompressed data
		 ]]></return>
</method>
<field name='_streamDef' fullname='org.igniterealtime.xiff.util:Zlib/private:_streamDef' type='com.wirelust.as3zlib:ZStream' isStatic='false' isConst='false' >
</field>
<field name='_streamInf' fullname='org.igniterealtime.xiff.util:Zlib/private:_streamInf' type='com.wirelust.as3zlib:ZStream' isStatic='false' isConst='false' >
</field>
<classRec name='ZlibNative' fullname='org.igniterealtime.xiff.util:ZlibNative' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\util\ZlibNative.as' namespace='org.igniterealtime.xiff.util' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.util:ICompressor' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Compress the given ByteArrays by using the Flash
	 Player 10 native CompressionAlgorithm.ZLIB.
	 	 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/CompressionAlgorithm.html
	 ]]></see>
</classRec>
<method name='ZlibNative' fullname='org.igniterealtime.xiff.util:ZlibNative/ZlibNative' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 Stream Compression - Native DEFLATE
		 		 <p>All multi-byte numbers in the format described in RFC 1950 are stored with
		 the MOST-significant byte first (at the lower memory address).</p>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc1950
		 ]]></see>
</method>
<method name='calculateAdler32' fullname='org.igniterealtime.xiff.util:ZlibNative/private:calculateAdler32' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='uint'>
<description><![CDATA[
		 http://en.wikipedia.org/wiki/Adler-32#Example_implementation
		 ]]></description>
<param><![CDATA[data
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='clear' fullname='org.igniterealtime.xiff.util:ZlibNative/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='compress' fullname='org.igniterealtime.xiff.util:ZlibNative/compress' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Compress (deflate) the given ByteArray.
		 		 ]]></description>
<param><![CDATA[data
		 ]]></param>
<return><![CDATA[Compressed data
		 ]]></return>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#deflate%28%29
		 ]]></see>
</method>
<method name='uncompress' fullname='org.igniterealtime.xiff.util:ZlibNative/uncompress' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Uncompress (inflate) the given ByteArray.
		 		 ]]></description>
<param><![CDATA[data
		 ]]></param>
<return><![CDATA[Uncompressed data
		 ]]></return>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/utils/ByteArray.html#inflate%28%29
		 ]]></see>
</method>
<interfaceRec name='IVCardAddress' fullname='org.igniterealtime.xiff.vcard:IVCardAddress' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCardAddress.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='country' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:country/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='extendedAddress' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:extendedAddress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='locality' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:locality/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='poBox' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:poBox/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='postalCode' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:postalCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='region' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:region/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='street' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:street/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='country' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:country/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='extendedAddress' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:extendedAddress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='locality' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:locality/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='poBox' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:poBox/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='postalCode' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:postalCode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='region' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:region/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='street' fullname='org.igniterealtime.xiff.vcard:IVCardAddress/org.igniterealtime.xiff.vcard:IVCardAddress:street/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IVCardTelephone' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCardTelephone.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='cell' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:cell/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='fax' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:fax/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='msg' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:msg/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='pager' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:pager/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='video' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:video/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='voice' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:voice/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='cell' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:cell/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='fax' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:fax/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='msg' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:msg/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='pager' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:pager/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='video' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:video/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='voice' fullname='org.igniterealtime.xiff.vcard:IVCardTelephone/org.igniterealtime.xiff.vcard:IVCardTelephone:voice/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IVCardSound' fullname='org.igniterealtime.xiff.vcard:IVCardSound' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCardSound.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:binaryValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:bytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:externalValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='phonetic' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:phonetic/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:binaryValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:bytes/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:externalValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='phonetic' fullname='org.igniterealtime.xiff.vcard:IVCardSound/org.igniterealtime.xiff.vcard:IVCardSound:phonetic/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IVCardOrganization' fullname='org.igniterealtime.xiff.vcard:IVCardOrganization' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCardOrganization.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='name' fullname='org.igniterealtime.xiff.vcard:IVCardOrganization/org.igniterealtime.xiff.vcard:IVCardOrganization:name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='unit' fullname='org.igniterealtime.xiff.vcard:IVCardOrganization/org.igniterealtime.xiff.vcard:IVCardOrganization:unit/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.vcard:IVCardOrganization/org.igniterealtime.xiff.vcard:IVCardOrganization:name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='unit' fullname='org.igniterealtime.xiff.vcard:IVCardOrganization/org.igniterealtime.xiff.vcard:IVCardOrganization:unit/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IVCardName' fullname='org.igniterealtime.xiff.vcard:IVCardName' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCardName.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='family' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:family/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='given' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:given/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='middle' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:middle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:prefix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='suffix' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:suffix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='family' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:family/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='given' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:given/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='middle' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:middle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:prefix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='suffix' fullname='org.igniterealtime.xiff.vcard:IVCardName/org.igniterealtime.xiff.vcard:IVCardName:suffix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IVCardGeographicalPosition' fullname='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCardGeographicalPosition.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='latitude' fullname='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition/org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:latitude/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='longitude' fullname='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition/org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:longitude/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='latitude' fullname='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition/org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:latitude/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='longitude' fullname='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition/org.igniterealtime.xiff.vcard:IVCardGeographicalPosition:longitude/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IVCardPhoto' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCardPhoto.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:binaryValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:bytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:externalValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:binaryValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:bytes/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:externalValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.vcard:IVCardPhoto/org.igniterealtime.xiff.vcard:IVCardPhoto:type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='VCardAddress' fullname='org.igniterealtime.xiff.vcard:VCardAddress' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCardAddress.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.vcard:IVCardAddress' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Structured address.
	 ]]></description>
</classRec>
<method name='VCardAddress' fullname='org.igniterealtime.xiff.vcard:VCardAddress/VCardAddress' isStatic='false' isFinal='false' isOverride='false'  param_names='street;locality;region;postalCode;country;extendedAddress;poBox' param_types='String;String;String;String;String;String;String' param_defaults='null;null;null;null;null;null;null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[street
		 ]]></param>
<param><![CDATA[locality
		 ]]></param>
<param><![CDATA[region
		 ]]></param>
<param><![CDATA[postalCode
		 ]]></param>
<param><![CDATA[country
		 ]]></param>
<param><![CDATA[extendedAddress
		 ]]></param>
<param><![CDATA[poBox
		 ]]></param>
</method>
<method name='country' fullname='org.igniterealtime.xiff.vcard:VCardAddress/country/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='extendedAddress' fullname='org.igniterealtime.xiff.vcard:VCardAddress/extendedAddress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='locality' fullname='org.igniterealtime.xiff.vcard:VCardAddress/locality/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='poBox' fullname='org.igniterealtime.xiff.vcard:VCardAddress/poBox/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='postalCode' fullname='org.igniterealtime.xiff.vcard:VCardAddress/postalCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='region' fullname='org.igniterealtime.xiff.vcard:VCardAddress/region/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='street' fullname='org.igniterealtime.xiff.vcard:VCardAddress/street/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='country' fullname='org.igniterealtime.xiff.vcard:VCardAddress/country/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='extendedAddress' fullname='org.igniterealtime.xiff.vcard:VCardAddress/extendedAddress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='locality' fullname='org.igniterealtime.xiff.vcard:VCardAddress/locality/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='poBox' fullname='org.igniterealtime.xiff.vcard:VCardAddress/poBox/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='postalCode' fullname='org.igniterealtime.xiff.vcard:VCardAddress/postalCode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='region' fullname='org.igniterealtime.xiff.vcard:VCardAddress/region/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='street' fullname='org.igniterealtime.xiff.vcard:VCardAddress/street/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_country' fullname='org.igniterealtime.xiff.vcard:VCardAddress/private:_country' type='String' isStatic='false' isConst='false' >
</field>
<field name='_extendedAddress' fullname='org.igniterealtime.xiff.vcard:VCardAddress/private:_extendedAddress' type='String' isStatic='false' isConst='false' >
</field>
<field name='_locality' fullname='org.igniterealtime.xiff.vcard:VCardAddress/private:_locality' type='String' isStatic='false' isConst='false' >
</field>
<field name='_poBox' fullname='org.igniterealtime.xiff.vcard:VCardAddress/private:_poBox' type='String' isStatic='false' isConst='false' >
</field>
<field name='_postalCode' fullname='org.igniterealtime.xiff.vcard:VCardAddress/private:_postalCode' type='String' isStatic='false' isConst='false' >
</field>
<field name='_region' fullname='org.igniterealtime.xiff.vcard:VCardAddress/private:_region' type='String' isStatic='false' isConst='false' >
</field>
<field name='_street' fullname='org.igniterealtime.xiff.vcard:VCardAddress/private:_street' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='VCardTelephone' fullname='org.igniterealtime.xiff.vcard:VCardTelephone' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCardTelephone.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.vcard:IVCardTelephone' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Telephone number.
	 ]]></description>
</classRec>
<method name='VCardTelephone' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/VCardTelephone' isStatic='false' isFinal='false' isOverride='false'  param_names='voice;fax;pager;msg;cell;video' param_types='String;String;String;String;String;String' param_defaults='null;null;null;null;null;null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[voice
		 ]]></param>
<param><![CDATA[fax
		 ]]></param>
<param><![CDATA[pager
		 ]]></param>
<param><![CDATA[msg
		 ]]></param>
<param><![CDATA[cell
		 ]]></param>
<param><![CDATA[video
		 ]]></param>
</method>
<method name='cell' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/cell/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='fax' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/fax/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='msg' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/msg/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='pager' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/pager/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='video' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/video/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='voice' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/voice/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='cell' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/cell/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='fax' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/fax/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='msg' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/msg/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='pager' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/pager/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='video' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/video/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='voice' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/voice/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_cell' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/private:_cell' type='String' isStatic='false' isConst='false' >
</field>
<field name='_fax' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/private:_fax' type='String' isStatic='false' isConst='false' >
</field>
<field name='_msg' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/private:_msg' type='String' isStatic='false' isConst='false' >
</field>
<field name='_pager' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/private:_pager' type='String' isStatic='false' isConst='false' >
</field>
<field name='_video' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/private:_video' type='String' isStatic='false' isConst='false' >
</field>
<field name='_voice' fullname='org.igniterealtime.xiff.vcard:VCardTelephone/private:_voice' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='VCardSound' fullname='org.igniterealtime.xiff.vcard:VCardSound' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCardSound.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.vcard:IVCardSound' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Formatted name pronunciation property.
	 ]]></description>
</classRec>
<method name='VCardSound' fullname='org.igniterealtime.xiff.vcard:VCardSound/VCardSound' isStatic='false' isFinal='false' isOverride='false'  param_names='phonetic;binaryValue;externalValue' param_types='String;String;String' param_defaults='null;null;null' result_type='*'>
<description><![CDATA[
		 To save a sound, either phonetic, binaryValue or externalValue are required.
		 
		 ]]></description>
<param><![CDATA[phonetic The textual phonetic pronunciation.
		 ]]></param>
<param><![CDATA[binaryValue The BASE64 encoded binary value of the audio pronunciation.
		 ]]></param>
<param><![CDATA[externalValue The URI to an external binary digital audio pronunciation.
		 ]]></param>
</method>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:VCardSound/binaryValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:VCardSound/bytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:VCardSound/externalValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='phonetic' fullname='org.igniterealtime.xiff.vcard:VCardSound/phonetic/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:VCardSound/binaryValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:VCardSound/bytes/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:VCardSound/externalValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='phonetic' fullname='org.igniterealtime.xiff.vcard:VCardSound/phonetic/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_binaryValue' fullname='org.igniterealtime.xiff.vcard:VCardSound/private:_binaryValue' type='String' isStatic='false' isConst='false' >
</field>
<field name='_bytes' fullname='org.igniterealtime.xiff.vcard:VCardSound/private:_bytes' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='_externalValue' fullname='org.igniterealtime.xiff.vcard:VCardSound/private:_externalValue' type='String' isStatic='false' isConst='false' >
</field>
<field name='_phonetic' fullname='org.igniterealtime.xiff.vcard:VCardSound/private:_phonetic' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='VCardOrganization' fullname='org.igniterealtime.xiff.vcard:VCardOrganization' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCardOrganization.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.vcard:IVCardOrganization' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Organizational name and unit.
	 ]]></description>
</classRec>
<method name='VCardOrganization' fullname='org.igniterealtime.xiff.vcard:VCardOrganization/VCardOrganization' isStatic='false' isFinal='false' isOverride='false'  param_names='name;unit' param_types='String;String' param_defaults='null;null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[unit
		 ]]></param>
</method>
<method name='name' fullname='org.igniterealtime.xiff.vcard:VCardOrganization/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='unit' fullname='org.igniterealtime.xiff.vcard:VCardOrganization/unit/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.vcard:VCardOrganization/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='unit' fullname='org.igniterealtime.xiff.vcard:VCardOrganization/unit/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_name' fullname='org.igniterealtime.xiff.vcard:VCardOrganization/private:_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='_unit' fullname='org.igniterealtime.xiff.vcard:VCardOrganization/private:_unit' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='VCardName' fullname='org.igniterealtime.xiff.vcard:VCardName' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCardName.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.vcard:IVCardName' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Structured name.
	 ]]></description>
</classRec>
<method name='VCardName' fullname='org.igniterealtime.xiff.vcard:VCardName/VCardName' isStatic='false' isFinal='false' isOverride='false'  param_names='given;middle;family;prefix;suffix' param_types='String;String;String;String;String' param_defaults='null;null;null;null;null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[given
		 ]]></param>
<param><![CDATA[middle
		 ]]></param>
<param><![CDATA[family
		 ]]></param>
<param><![CDATA[prefix
		 ]]></param>
<param><![CDATA[suffix
		 ]]></param>
</method>
<method name='family' fullname='org.igniterealtime.xiff.vcard:VCardName/family/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='given' fullname='org.igniterealtime.xiff.vcard:VCardName/given/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='middle' fullname='org.igniterealtime.xiff.vcard:VCardName/middle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.vcard:VCardName/prefix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='suffix' fullname='org.igniterealtime.xiff.vcard:VCardName/suffix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='family' fullname='org.igniterealtime.xiff.vcard:VCardName/family/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='given' fullname='org.igniterealtime.xiff.vcard:VCardName/given/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='middle' fullname='org.igniterealtime.xiff.vcard:VCardName/middle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.vcard:VCardName/prefix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='suffix' fullname='org.igniterealtime.xiff.vcard:VCardName/suffix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_family' fullname='org.igniterealtime.xiff.vcard:VCardName/private:_family' type='String' isStatic='false' isConst='false' >
</field>
<field name='_given' fullname='org.igniterealtime.xiff.vcard:VCardName/private:_given' type='String' isStatic='false' isConst='false' >
</field>
<field name='_middle' fullname='org.igniterealtime.xiff.vcard:VCardName/private:_middle' type='String' isStatic='false' isConst='false' >
</field>
<field name='_prefix' fullname='org.igniterealtime.xiff.vcard:VCardName/private:_prefix' type='String' isStatic='false' isConst='false' >
</field>
<field name='_suffix' fullname='org.igniterealtime.xiff.vcard:VCardName/private:_suffix' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='VCardGeographicalPosition' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCardGeographicalPosition.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Geographical position.
	 ]]></description>
</classRec>
<method name='VCardGeographicalPosition' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition/VCardGeographicalPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='latitude;longitude' param_types='Number;Number' param_defaults='unknown;unknown' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[latitude
		 ]]></param>
<param><![CDATA[longitude
		 ]]></param>
</method>
<method name='latitude' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition/latitude/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='longitude' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition/longitude/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='latitude' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition/latitude/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='longitude' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition/longitude/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='_latitude' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition/private:_latitude' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_longitude' fullname='org.igniterealtime.xiff.vcard:VCardGeographicalPosition/private:_longitude' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='VCardPhoto' fullname='org.igniterealtime.xiff.vcard:VCardPhoto' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCardPhoto.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.vcard:IVCardPhoto' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Photograph.
	 	 <p>The image height and width SHOULD be between thirty-two (32) and ninety-six (96) pixels;
	 the recommended size is sixty-four (64) pixels high and sixty-four (64) pixels wide.</p>
	 	 <p>The image SHOULD be square.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0153.html
	 ]]></see>
</classRec>
<method name='VCardPhoto' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/VCardPhoto' isStatic='false' isFinal='false' isOverride='false'  param_names='type;binaryValue;externalValue' param_types='String;String;String' param_defaults='null;null;null' result_type='*'>
<description><![CDATA[
		 To save a photo, either binaryValue or externalValue are required, but not both.
		 If binaryValue is passed in, type is required.
		 If externalValue is passed in, type is not required.
		 		 ]]></description>
<param><![CDATA[type The image type of the photo. Required if binaryValue is passed in.
		 ]]></param>
<param><![CDATA[binaryValue The BASE64 encoded binary value of the photo. Either binaryValue or externalValue are required, but not both.
		 ]]></param>
<param><![CDATA[externalValue The URI to an external photo. Either binaryValue or externalValue are required, but not both.
		 ]]></param>
</method>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/binaryValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Base64 encoded data.
		 The image SHOULD use less than eight kilobytes (8k) of data; this
		 restriction is to be enforced by the publishing client.
		 		 <p>The image data MUST conform to the base64Binary datatype [7] and thus be encoded in accordance with
		 Section 6.8 of RFC 2045 [8], which recommends that base64 data should have lines limited to at most
		 76 characters in length. However, any whitespace characters (e.g., '\\r' and '\\n') MUST be ignored.</p>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc2045#section-6.8
		 ]]></see>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/bytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Image data
		 ]]></description>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/externalValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The URI to an external photo
		 ]]></description>
</method>
<method name='type' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Mimetype of the given <code>bytes</code> value, if any.
		 Should be set by hand.
		 		 <p>The image content type [6] SHOULD be image/gif, image/jpeg, or image/png; support for the
		 "image/png" content type is REQUIRED, support for the "image/gif" and "image/jpeg" content
		 types is RECOMMENDED, and support for any other content type is OPTIONAL.</p>
		 		 ]]></description>
<exampleText><![CDATA[image/jpeg
		 ]]></exampleText>
</method>
<method name='binaryValue' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/binaryValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='bytes' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/bytes/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='externalValue' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/externalValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_binaryValue' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/private:_binaryValue' type='String' isStatic='false' isConst='false' >
</field>
<field name='_bytes' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/private:_bytes' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='_externalValue' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/private:_externalValue' type='String' isStatic='false' isConst='false' >
</field>
<field name='_type' fullname='org.igniterealtime.xiff.vcard:VCardPhoto/private:_type' type='String' isStatic='false' isConst='false' >
</field>
<interfaceRec name='IVCard' fullname='org.igniterealtime.xiff.vcard:IVCard' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\IVCard.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseClasses='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='handleVCard' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:handleVCard' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IIQ' param_defaults='undefined' result_type='void'>
</method>
<method name='saveVCard' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:saveVCard' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<method name='birthday' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:birthday/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='description' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:description/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='email' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:email/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='extensions' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:extensions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:Dictionary'>
</method>
<method name='formattedName' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:formattedName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='geographicalPosition' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:geographicalPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition'>
</method>
<method name='homeAddressLabel' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:homeAddressLabel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='homeAddress' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:homeAddress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardAddress'>
</method>
<method name='homeTelephone' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:homeTelephone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardTelephone'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
</method>
<method name='loaded' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='logo' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:logo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardPhoto'>
</method>
<method name='mailer' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:mailer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardName'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='note' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:note/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='organization' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:organization/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardOrganization'>
</method>
<method name='photo' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:photo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardPhoto'>
</method>
<method name='privacyClass' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:privacyClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='productID' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:productID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='revision' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:revision/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:role/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='sortString' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:sortString/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='sound' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:sound/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardSound'>
</method>
<method name='timezone' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:timezone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='title' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:title/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:uid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='url' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:url/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='version' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='workAddressLabel' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:workAddressLabel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='workAddress' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:workAddress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardAddress'>
</method>
<method name='workTelephone' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:workTelephone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardTelephone'>
</method>
<method name='birthday' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:birthday/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<method name='description' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:description/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='email' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:email/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='formattedName' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:formattedName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='geographicalPosition' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:geographicalPosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition' param_defaults='undefined' result_type='void'>
</method>
<method name='homeAddressLabel' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:homeAddressLabel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='homeAddress' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:homeAddress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardAddress' param_defaults='undefined' result_type='void'>
</method>
<method name='homeTelephone' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:homeTelephone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardTelephone' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='logo' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:logo/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardPhoto' param_defaults='undefined' result_type='void'>
</method>
<method name='mailer' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:mailer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardName' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='note' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:note/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='organization' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:organization/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardOrganization' param_defaults='undefined' result_type='void'>
</method>
<method name='photo' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:photo/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardPhoto' param_defaults='undefined' result_type='void'>
</method>
<method name='privacyClass' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:privacyClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='productID' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:productID/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='revision' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:revision/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:role/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='sortString' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:sortString/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='sound' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:sound/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardSound' param_defaults='undefined' result_type='void'>
</method>
<method name='timezone' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:timezone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<method name='title' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:title/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:uid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='url' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:url/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='version' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:version/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='workAddressLabel' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:workAddressLabel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='workAddress' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:workAddress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardAddress' param_defaults='undefined' result_type='void'>
</method>
<method name='workTelephone' fullname='org.igniterealtime.xiff.vcard:IVCard/org.igniterealtime.xiff.vcard:IVCard:workTelephone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardTelephone' param_defaults='undefined' result_type='void'>
</method>
<classRec name='VCard' fullname='org.igniterealtime.xiff.vcard:VCard' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\vcard\VCard.as' namespace='org.igniterealtime.xiff.vcard' access='public' baseclass='flash.events:EventDispatcher' interfaces='org.igniterealtime.xiff.vcard:IVCard' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 VCard updates in 2010:
	 	 <p>New vCard data classes to encompass similar properties:</p>
	 <ul>
	 <li>VCardAddress (country, extendedAddress, locality, poBox, postalCode, region, street)</li>
	 <li>VCardGeographicalPosition (latitude, longitude)</li>
	 <li>VCardName (family, given, middle, prefix, suffix)</li>
	 <li>VCardOrganization (name, unit)</li>
	 <li>VCardPhoto (binaryValue, bytes, externalValue, type)</li>
	 <li>VCardSound (binaryValue, bytes, externalValue, phonetic)</li>
	 <li>VCardTelephone (cell, fax, msg, pager, video, voice)</li>
	 </ul>
	 	 <p>TODO: The only properties not yet implemented from the spec: agent, categories, key</p>
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc2426
	 ]]></see>
<metadata>
	<Event owner='org.igniterealtime.xiff.vcard:VCard' name='saveError' type='org.igniterealtime.xiff.events.VCardEvent' >
<description><![CDATA[
	 Dispatched when saving the vCard fails.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.VCardEvent.SAVE_ERROR
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.vcard:VCard' name='saved' type='org.igniterealtime.xiff.events.VCardEvent' >
<description><![CDATA[
	 Dispatched when the vCard has been saved.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.VCardEvent.SAVED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.vcard:VCard' name='loaded' type='org.igniterealtime.xiff.events.VCardEvent' >
<description><![CDATA[
	 Dispatched when the vCard has loaded.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.VCardEvent.LOADED
	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='VCard' fullname='org.igniterealtime.xiff.vcard:VCard/VCard' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 Don't call directly, use the static method getVCard() and add a callback.
		 ]]></description>
</method>
<method name='clearCache' fullname='org.igniterealtime.xiff.vcard:VCard/clearCache' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Immediately clears the vCard cache.
		 ]]></description>
</method>
<method name='createExtension' fullname='org.igniterealtime.xiff.vcard:VCard/createExtension' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.vcard:VCardExtension'>
<description><![CDATA[
		 Create the XML needed to send the VCard within the Extension.
		 ]]></description>
<return><![CDATA[]]></return>
</method>
<method name='expireCache' fullname='org.igniterealtime.xiff.vcard:VCard/expireCache' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Immediately expires the vCard cache.
		 ]]></description>
</method>
<method name='getVCard' fullname='org.igniterealtime.xiff.vcard:VCard/getVCard' isStatic='true' isFinal='false' isOverride='false'  param_names='connection;jid' param_types='org.igniterealtime.xiff.core:IXMPPConnection;org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined;undefined' result_type='org.igniterealtime.xiff.vcard:VCard'>
<description><![CDATA[
		 The way a vCard is requested and then later referred to.
		 <code>var vCard:VCard = VCard.getVCard( connection, jid );<br />
		 vCard.addEventListener( VCardEvent.LOADED, onVCardLoaded );</code>
		 ]]></description>
<param><![CDATA[connection
		 ]]></param>
<param><![CDATA[jid
		 ]]></param>
<return><![CDATA[Reference to the vCard which will be filled once the loaded event occurs.
		 ]]></return>
</method>
<method name='handleVCard' fullname='org.igniterealtime.xiff.vcard:VCard/handleVCard' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IIQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Deserializes the incoming IQ to fill the values of this vCard.
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
</method>
<method name='pushRequest' fullname='org.igniterealtime.xiff.vcard:VCard/private:pushRequest' isStatic='true' isFinal='false' isOverride='false'  param_names='connection;vCard' param_types='org.igniterealtime.xiff.core:IXMPPConnection;org.igniterealtime.xiff.vcard:VCard' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Add the request to the stack of requests
		 ]]></description>
<param><![CDATA[connection
		 ]]></param>
<param><![CDATA[vCard
		 ]]></param>
</method>
<method name='saveVCard_result' fullname='org.igniterealtime.xiff.vcard:VCard/saveVCard_result' isStatic='false' isFinal='false' isOverride='false'  param_names='resultIQ' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[resultIQ
		 ]]></param>
</method>
<method name='saveVCard' fullname='org.igniterealtime.xiff.vcard:VCard/saveVCard' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Saves a vCard.
		 ]]></description>
<param><![CDATA[connection
		 ]]></param>
</method>
<method name='sendRequest' fullname='org.igniterealtime.xiff.vcard:VCard/private:sendRequest' isStatic='true' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Send a request
		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='birthday' fullname='org.igniterealtime.xiff.vcard:VCard/birthday/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
<description><![CDATA[
		 Birthday.
		 ]]></description>
</method>
<method name='description' fullname='org.igniterealtime.xiff.vcard:VCard/description/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Free-form descriptive text.
		 ]]></description>
</method>
<method name='email' fullname='org.igniterealtime.xiff.vcard:VCard/email/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Email address.
		 ]]></description>
</method>
<method name='extensions' fullname='org.igniterealtime.xiff.vcard:VCard/extensions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:Dictionary'>
<description><![CDATA[
		 Map of the vCard's private extensions.
		 ]]></description>
</method>
<method name='formattedName' fullname='org.igniterealtime.xiff.vcard:VCard/formattedName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Formatted or display name.
		 ]]></description>
</method>
<method name='geographicalPosition' fullname='org.igniterealtime.xiff.vcard:VCard/geographicalPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition'>
<description><![CDATA[
		 Geographical position.
		 ]]></description>
</method>
<method name='homeAddressLabel' fullname='org.igniterealtime.xiff.vcard:VCard/homeAddressLabel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Home address label.
		 ]]></description>
</method>
<method name='homeAddress' fullname='org.igniterealtime.xiff.vcard:VCard/homeAddress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardAddress'>
<description><![CDATA[
		 Structured home address.
		 ]]></description>
</method>
<method name='homeTelephone' fullname='org.igniterealtime.xiff.vcard:VCard/homeTelephone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardTelephone'>
<description><![CDATA[
		 Home telephone number.
		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.vcard:VCard/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
<description><![CDATA[
		 Jabber ID.
		 ]]></description>
</method>
<method name='loaded' fullname='org.igniterealtime.xiff.vcard:VCard/loaded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Indicates whether the vCard has been loaded.
		 ]]></description>
</method>
<method name='logo' fullname='org.igniterealtime.xiff.vcard:VCard/logo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardPhoto'>
<description><![CDATA[
		 Organization logo.
		 ]]></description>
</method>
<method name='mailer' fullname='org.igniterealtime.xiff.vcard:VCard/mailer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Mailer (e.g., Mail User Agent Type).
		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.vcard:VCard/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardName'>
<description><![CDATA[
		 Structured name.
		 ]]></description>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.vcard:VCard/nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Nickname.
		 ]]></description>
</method>
<method name='note' fullname='org.igniterealtime.xiff.vcard:VCard/note/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Commentary note.
		 ]]></description>
</method>
<method name='organization' fullname='org.igniterealtime.xiff.vcard:VCard/organization/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardOrganization'>
<description><![CDATA[
		 Organizational name and unit.
		 ]]></description>
</method>
<method name='photo' fullname='org.igniterealtime.xiff.vcard:VCard/photo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardPhoto'>
<description><![CDATA[
		 Photograph.
		 ]]></description>
</method>
<method name='privacyClass' fullname='org.igniterealtime.xiff.vcard:VCard/privacyClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Privacy classification.
		 ]]></description>
</method>
<method name='productID' fullname='org.igniterealtime.xiff.vcard:VCard/productID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Identifier of product that generated the vCard.
		 ]]></description>
</method>
<method name='revision' fullname='org.igniterealtime.xiff.vcard:VCard/revision/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
<description><![CDATA[
		 Last revised.
		 ]]></description>
</method>
<method name='role' fullname='org.igniterealtime.xiff.vcard:VCard/role/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Role.
		 ]]></description>
</method>
<method name='sortString' fullname='org.igniterealtime.xiff.vcard:VCard/sortString/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Sort string.
		 ]]></description>
</method>
<method name='sound' fullname='org.igniterealtime.xiff.vcard:VCard/sound/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardSound'>
<description><![CDATA[
		 Formatted name pronunciation.
		 ]]></description>
</method>
<method name='timezone' fullname='org.igniterealtime.xiff.vcard:VCard/timezone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
<description><![CDATA[
		 Time zone's Standard Time UTC offset.
		 ]]></description>
</method>
<method name='title' fullname='org.igniterealtime.xiff.vcard:VCard/title/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Title.
		 ]]></description>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.vcard:VCard/uid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Unique identifier.
		 ]]></description>
</method>
<method name='url' fullname='org.igniterealtime.xiff.vcard:VCard/url/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Directory URL.
		 ]]></description>
</method>
<method name='version' fullname='org.igniterealtime.xiff.vcard:VCard/version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Version of the vCard. Usually 2.0 or 3.0.
		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0054.html#impl
		 ]]></see>
</method>
<method name='workAddressLabel' fullname='org.igniterealtime.xiff.vcard:VCard/workAddressLabel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Work address label.
		 ]]></description>
</method>
<method name='workAddress' fullname='org.igniterealtime.xiff.vcard:VCard/workAddress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardAddress'>
<description><![CDATA[
		 Structured work address.
		 ]]></description>
</method>
<method name='workTelephone' fullname='org.igniterealtime.xiff.vcard:VCard/workTelephone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:IVCardTelephone'>
<description><![CDATA[
		 Work telephone number.
		 ]]></description>
</method>
<method name='birthday' fullname='org.igniterealtime.xiff.vcard:VCard/birthday/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<method name='description' fullname='org.igniterealtime.xiff.vcard:VCard/description/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='email' fullname='org.igniterealtime.xiff.vcard:VCard/email/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='formattedName' fullname='org.igniterealtime.xiff.vcard:VCard/formattedName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='geographicalPosition' fullname='org.igniterealtime.xiff.vcard:VCard/geographicalPosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition' param_defaults='undefined' result_type='void'>
</method>
<method name='homeAddressLabel' fullname='org.igniterealtime.xiff.vcard:VCard/homeAddressLabel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='homeAddress' fullname='org.igniterealtime.xiff.vcard:VCard/homeAddress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardAddress' param_defaults='undefined' result_type='void'>
</method>
<method name='homeTelephone' fullname='org.igniterealtime.xiff.vcard:VCard/homeTelephone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardTelephone' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.vcard:VCard/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='logo' fullname='org.igniterealtime.xiff.vcard:VCard/logo/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardPhoto' param_defaults='undefined' result_type='void'>
</method>
<method name='mailer' fullname='org.igniterealtime.xiff.vcard:VCard/mailer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.vcard:VCard/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardName' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.vcard:VCard/nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='note' fullname='org.igniterealtime.xiff.vcard:VCard/note/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='organization' fullname='org.igniterealtime.xiff.vcard:VCard/organization/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardOrganization' param_defaults='undefined' result_type='void'>
</method>
<method name='photo' fullname='org.igniterealtime.xiff.vcard:VCard/photo/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardPhoto' param_defaults='undefined' result_type='void'>
</method>
<method name='privacyClass' fullname='org.igniterealtime.xiff.vcard:VCard/privacyClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='productID' fullname='org.igniterealtime.xiff.vcard:VCard/productID/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='revision' fullname='org.igniterealtime.xiff.vcard:VCard/revision/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.vcard:VCard/role/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='sortString' fullname='org.igniterealtime.xiff.vcard:VCard/sortString/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='sound' fullname='org.igniterealtime.xiff.vcard:VCard/sound/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardSound' param_defaults='undefined' result_type='void'>
</method>
<method name='timezone' fullname='org.igniterealtime.xiff.vcard:VCard/timezone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<method name='title' fullname='org.igniterealtime.xiff.vcard:VCard/title/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.vcard:VCard/uid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='url' fullname='org.igniterealtime.xiff.vcard:VCard/url/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='version' fullname='org.igniterealtime.xiff.vcard:VCard/version/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='workAddressLabel' fullname='org.igniterealtime.xiff.vcard:VCard/workAddressLabel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='workAddress' fullname='org.igniterealtime.xiff.vcard:VCard/workAddress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardAddress' param_defaults='undefined' result_type='void'>
</method>
<method name='workTelephone' fullname='org.igniterealtime.xiff.vcard:VCard/workTelephone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.vcard:IVCardTelephone' param_defaults='undefined' result_type='void'>
</method>
<field name='_birthday' fullname='org.igniterealtime.xiff.vcard:VCard/private:_birthday' type='Date' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_description' fullname='org.igniterealtime.xiff.vcard:VCard/private:_description' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_email' fullname='org.igniterealtime.xiff.vcard:VCard/private:_email' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_extensionNames' fullname='org.igniterealtime.xiff.vcard:VCard/private:_extensionNames' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_extensions' fullname='org.igniterealtime.xiff.vcard:VCard/private:_extensions' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_formattedName' fullname='org.igniterealtime.xiff.vcard:VCard/private:_formattedName' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_geographicalPosition' fullname='org.igniterealtime.xiff.vcard:VCard/private:_geographicalPosition' type='org.igniterealtime.xiff.vcard:IVCardGeographicalPosition' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_homeAddressLabel' fullname='org.igniterealtime.xiff.vcard:VCard/private:_homeAddressLabel' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_homeAddress' fullname='org.igniterealtime.xiff.vcard:VCard/private:_homeAddress' type='org.igniterealtime.xiff.vcard:IVCardAddress' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_homeTelephone' fullname='org.igniterealtime.xiff.vcard:VCard/private:_homeTelephone' type='org.igniterealtime.xiff.vcard:IVCardTelephone' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_jid' fullname='org.igniterealtime.xiff.vcard:VCard/private:_jid' type='org.igniterealtime.xiff.core:UnescapedJID' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_loaded' fullname='org.igniterealtime.xiff.vcard:VCard/private:_loaded' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_logo' fullname='org.igniterealtime.xiff.vcard:VCard/private:_logo' type='org.igniterealtime.xiff.vcard:IVCardPhoto' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_mailer' fullname='org.igniterealtime.xiff.vcard:VCard/private:_mailer' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_name' fullname='org.igniterealtime.xiff.vcard:VCard/private:_name' type='org.igniterealtime.xiff.vcard:IVCardName' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_nickname' fullname='org.igniterealtime.xiff.vcard:VCard/private:_nickname' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_note' fullname='org.igniterealtime.xiff.vcard:VCard/private:_note' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_organization' fullname='org.igniterealtime.xiff.vcard:VCard/private:_organization' type='org.igniterealtime.xiff.vcard:IVCardOrganization' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_photo' fullname='org.igniterealtime.xiff.vcard:VCard/private:_photo' type='org.igniterealtime.xiff.vcard:IVCardPhoto' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_privacyClass' fullname='org.igniterealtime.xiff.vcard:VCard/private:_privacyClass' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_productID' fullname='org.igniterealtime.xiff.vcard:VCard/private:_productID' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_revision' fullname='org.igniterealtime.xiff.vcard:VCard/private:_revision' type='Date' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_role' fullname='org.igniterealtime.xiff.vcard:VCard/private:_role' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_sortString' fullname='org.igniterealtime.xiff.vcard:VCard/private:_sortString' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_sound' fullname='org.igniterealtime.xiff.vcard:VCard/private:_sound' type='org.igniterealtime.xiff.vcard:IVCardSound' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_timezone' fullname='org.igniterealtime.xiff.vcard:VCard/private:_timezone' type='Date' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_title' fullname='org.igniterealtime.xiff.vcard:VCard/private:_title' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_uid' fullname='org.igniterealtime.xiff.vcard:VCard/private:_uid' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_url' fullname='org.igniterealtime.xiff.vcard:VCard/private:_url' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_version' fullname='org.igniterealtime.xiff.vcard:VCard/private:_version' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_workAddressLabel' fullname='org.igniterealtime.xiff.vcard:VCard/private:_workAddressLabel' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_workAddress' fullname='org.igniterealtime.xiff.vcard:VCard/private:_workAddress' type='org.igniterealtime.xiff.vcard:IVCardAddress' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_workTelephone' fullname='org.igniterealtime.xiff.vcard:VCard/private:_workTelephone' type='org.igniterealtime.xiff.vcard:IVCardTelephone' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cacheFlushInterval' fullname='org.igniterealtime.xiff.vcard:VCard/cacheFlushInterval' type='Number' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 The interval on which to flush the vCard cache.
		 The default value is 6 hours.
		 ]]></description>
</field>
<field name='cacheFlushTimer' fullname='org.igniterealtime.xiff.vcard:VCard/private:cacheFlushTimer' type='flash.utils:Timer' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Flush the vCard cache every 6 hours by default.
		 ]]></description>
</field>
<field name='cache' fullname='org.igniterealtime.xiff.vcard:VCard/private:cache' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 VCard cache indexed by the UnescapedJID.bareJID of the user.
		 ]]></description>
</field>
<field name='requestQueue' fullname='org.igniterealtime.xiff.vcard:VCard/private:requestQueue' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Queue of the pending requests
		 ]]></description>
</field>
<field name='requestTimer' fullname='org.igniterealtime.xiff.vcard:VCard/private:requestTimer' type='flash.utils:Timer' isStatic='true' isConst='false' >
<description><![CDATA[
		 Timer to process the queue.
		 ]]></description>
</field>
<classRec name='XMLRPC' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\rpc\XMLRPC.as' namespace='org.igniterealtime.xiff.data.rpc' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements client side XML marshalling of methods and parameters into XMLRPC.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0009.html
	 ]]></see>
<see><![CDATA[http://www.xmlrpc.com/spec
	 ]]></see>
</classRec>
<method name='addNode' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/private:addNode' isStatic='true' isFinal='false' isOverride='false'  param_names='parent;name' param_types='XML;String' param_defaults='undefined;undefined' result_type='XML'>
</method>
<method name='addParameter' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/private:addParameter' isStatic='true' isFinal='false' isOverride='false'  param_names='node;param' param_types='XML;*' param_defaults='undefined;undefined' result_type='XML'>
</method>
<method name='addText' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/private:addText' isStatic='true' isFinal='false' isOverride='false'  param_names='parent;value' param_types='XML;String' param_defaults='undefined;undefined' result_type='XML'>
</method>
<method name='addValue' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/private:addValue' isStatic='true' isFinal='false' isOverride='false'  param_names='node;value' param_types='XML;*' param_defaults='undefined;undefined' result_type='XML'>
</method>
<method name='extractValue' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/private:extractValue' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='XML' param_defaults='undefined' result_type='*'>
</method>
<method name='findNode' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/private:findNode' isStatic='true' isFinal='false' isOverride='false'  param_names='name;candidate' param_types='String;XML' param_defaults='undefined;undefined' result_type='XML'>
<description><![CDATA[
		 Find an element that has the given name within and including the
		 candidate XML.
		 		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[candidate
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='fromXML' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/fromXML' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Array'>
<description><![CDATA[
		 Extract and marshall the XML-RPC response to Flash types.
		 		 ]]></description>
<param><![CDATA[xml The XML containing the message response
		 ]]></param>
<return><![CDATA[Mixed object of either an array of results from the method call or a fault.
		 If the result is a fault, "result.isFault" will evaulate as true.
		 ]]></return>
</method>
<method name='toXML' fullname='org.igniterealtime.xiff.data.rpc:XMLRPC/toXML' isStatic='true' isFinal='false' isOverride='false'  param_names='parent;method;params' param_types='XML;String;Array' param_defaults='undefined;undefined;undefined' result_type='XML'>
<description><![CDATA[
		 The marshalling process, accepting a block of XML, a string description of the remote method,
		 and an array of flash type parameters.
		 		 ]]></description>
<return><![CDATA[XML containing the XML marshalled result
		 ]]></return>
</method>
<classRec name='RPCExtension' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\rpc\RPCExtension.as' namespace='org.igniterealtime.xiff.data.rpc' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements XEP-0009 for XML-RPC over XMPP.
	 	 <p>The protocol supports all syntax and semantics of XML-RPC except
	 that it uses XMPP instead of HTTP as the underlying transport.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0009.html
	 ]]></see>
</classRec>
<method name='RPCExtension' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/RPCExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
		 ]]></param>
</method>
<method name='call' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/call' isStatic='false' isFinal='false' isOverride='false'  param_names='methodName;params' param_types='String;Array' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Place the remote call.  This method serializes the remote procedure call to XML.
		 The call will be made on the remote machine when the stanza containing this extension is sent to the server.
		 		 If this extension is being returned, then check the result property instead.
		 		 ]]></description>
<param><![CDATA[methodName The name of the remote procedure to call
		 ]]></param>
<param><![CDATA[params	A collection of parameters of any type
		 ]]></param>
<see><![CDATA[#result
		 ]]></see>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Interface method, returning the namespace for this extension
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.IExtension
		 ]]></see>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Interface method, returning the namespace for this extension
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.IExtension
		 ]]></see>
</method>
<method name='faultCode' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/faultCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 A common result from most RPC servers to describe a fault
		 		 ]]></description>
</method>
<method name='faultString' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/faultString/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A common result from most RPC servers to describe a fault
		 		 ]]></description>
</method>
<method name='fault' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/fault/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[
		 The object containing the fault of the remote procedure call.
		 This object could have any properties, as fault results are only structurally defined.
		 		 ]]></description>
</method>
<method name='isFault' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/isFault/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Check this if property if you wish to determine the remote procedure call produced an error.
		 If the XMPP stanza never made it to the RPC service, then the error would be on the
		 stanza object instead of this extension.
		 		 ]]></description>
<return><![CDATA[True if the remote procedure call produced an error
		 ]]></return>
</method>
<method name='result' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/result/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 The result of this remote procedure call.  It can contain elements of any type.
		 		 ]]></description>
<return><![CDATA[Array of demarshalled results from the remote procedure
		 ]]></return>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/xml/set' isStatic='false' isFinal='false' isOverride='true'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Interface method, returning the namespace for this extension
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.INodeProxy
		 ]]></see>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:rpc' >
</field>
<field name='_fault' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/private:_fault' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_result' fullname='org.igniterealtime.xiff.data.rpc:RPCExtension/private:_result' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='RoomFileRepository' fullname='org.igniterealtime.xiff.conference:RoomFileRepository' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\conference\RoomFileRepository.as' namespace='org.igniterealtime.xiff.conference' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 	 ]]></description>
</classRec>
<classRec name='RoomFile' fullname='org.igniterealtime.xiff.conference:RoomFile' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\conference\RoomFile.as' namespace='org.igniterealtime.xiff.conference' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 ?
	 ]]></description>
</classRec>
<method name='RoomFile' fullname='org.igniterealtime.xiff.conference:RoomFile/RoomFile' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<interfaceRec name='IRoomOccupant' fullname='org.igniterealtime.xiff.conference:IRoomOccupant' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\conference\IRoomOccupant.as' namespace='org.igniterealtime.xiff.conference' access='public' baseClasses='org.igniterealtime.xiff.data.im:IContact' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='affiliation' fullname='org.igniterealtime.xiff.conference:IRoomOccupant/org.igniterealtime.xiff.conference:IRoomOccupant:affiliation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.conference:IRoomOccupant/org.igniterealtime.xiff.conference:IRoomOccupant:role/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='room' fullname='org.igniterealtime.xiff.conference:IRoomOccupant/org.igniterealtime.xiff.conference:IRoomOccupant:room/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.conference:IRoom'>
</method>
<method name='rosterItem' fullname='org.igniterealtime.xiff.conference:IRoomOccupant/org.igniterealtime.xiff.conference:IRoomOccupant:rosterItem/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.im:IRosterItemVO'>
</method>
<method name='affiliation' fullname='org.igniterealtime.xiff.conference:IRoomOccupant/org.igniterealtime.xiff.conference:IRoomOccupant:affiliation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.conference:IRoomOccupant/org.igniterealtime.xiff.conference:IRoomOccupant:role/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='room' fullname='org.igniterealtime.xiff.conference:IRoomOccupant/org.igniterealtime.xiff.conference:IRoomOccupant:room/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.conference:IRoom' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IRoom' fullname='org.igniterealtime.xiff.conference:IRoom' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\conference\IRoom.as' namespace='org.igniterealtime.xiff.conference' access='public' baseClasses='org.igniterealtime.xiff.collections:ICollection' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='allow' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:allow' isStatic='false' isFinal='false' isOverride='false'  param_names='jids' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='ban' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:ban' isStatic='false' isFinal='false' isOverride='false'  param_names='jids' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='cancelConfiguration' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:cancelConfiguration' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='changeSubject' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:changeSubject' isStatic='false' isFinal='false' isOverride='false'  param_names='newSubject' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='configure' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:configure' isStatic='false' isFinal='false' isOverride='false'  param_names='fieldmap' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='decline' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:decline' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;reason' param_types='org.igniterealtime.xiff.core:UnescapedJID;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='destroy' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:destroy' isStatic='false' isFinal='false' isOverride='false'  param_names='reason;alternateJID;callback' param_types='String;org.igniterealtime.xiff.core:UnescapedJID;Function' param_defaults='undefined;null;null' result_type='void'>
</method>
<method name='getMessage' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:getMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='body;htmlBody' param_types='String;String' param_defaults='null;null' result_type='org.igniterealtime.xiff.data:IMessage'>
</method>
<method name='getOccupantNamed' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:getOccupantNamed' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='org.igniterealtime.xiff.conference:IRoomOccupant'>
</method>
<method name='grant' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:grant' isStatic='false' isFinal='false' isOverride='false'  param_names='affiliation;jids' param_types='String;Array' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='invite' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:invite' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;reason' param_types='org.igniterealtime.xiff.core:UnescapedJID;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='isThisRoom' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:isThisRoom' isStatic='false' isFinal='false' isOverride='false'  param_names='sender' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isThisUser' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:isThisUser' isStatic='false' isFinal='false' isOverride='false'  param_names='sender' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='joinWithExplicitMUCExtension' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:joinWithExplicitMUCExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='createReserved;mucExtension;joinPresenceExtensions' param_types='Boolean;org.igniterealtime.xiff.data.muc:IMUCExtension;Array' param_defaults='undefined;undefined;null' result_type='Boolean'>
</method>
<method name='join' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:join' isStatic='false' isFinal='false' isOverride='false'  param_names='createReserved;joinPresenceExtensions' param_types='Boolean;Array' param_defaults='false;null' result_type='Boolean'>
</method>
<method name='kickOccupant' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:kickOccupant' isStatic='false' isFinal='false' isOverride='false'  param_names='occupantNick;reason' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='leave' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:leave' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='requestAffiliations' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:requestAffiliations' isStatic='false' isFinal='false' isOverride='false'  param_names='affiliation' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='requestConfiguration' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:requestConfiguration' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='revoke' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:revoke' isStatic='false' isFinal='false' isOverride='false'  param_names='jids' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='sendMessageWithExtension' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:sendMessageWithExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='message' param_types='org.igniterealtime.xiff.data:IMessage' param_defaults='undefined' result_type='void'>
</method>
<method name='sendMessage' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:sendMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='body;htmlBody' param_types='String;String' param_defaults='null;null' result_type='void'>
</method>
<method name='sendPrivateMessage' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:sendPrivateMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='recipientNickname;body;htmlBody' param_types='String;String;String' param_defaults='undefined;null;null' result_type='void'>
</method>
<method name='setOccupantVoice' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:setOccupantVoice' isStatic='false' isFinal='false' isOverride='false'  param_names='occupantNick;voice' param_types='String;Boolean' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='active' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:active/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='affiliation' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:affiliation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='anonymous' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:anonymous/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='conferenceServer' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:conferenceServer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:role/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='roomJID' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:roomJID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
</method>
<method name='roomName' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:roomName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:subject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='userJID' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:userJID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
</method>
<method name='conferenceServer' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:conferenceServer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='roomJID' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:roomJID/set' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='roomName' fullname='org.igniterealtime.xiff.conference:IRoom/org.igniterealtime.xiff.conference:IRoom:roomName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='RoomOccupant' fullname='org.igniterealtime.xiff.conference:RoomOccupant' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\conference\RoomOccupant.as' namespace='org.igniterealtime.xiff.conference' access='public' baseclass='flash.events:EventDispatcher' interfaces='org.igniterealtime.xiff.conference:IRoomOccupant' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A person in a room
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#user
	 ]]></see>
</classRec>
<method name='RoomOccupant' fullname='org.igniterealtime.xiff.conference:RoomOccupant/RoomOccupant' isStatic='false' isFinal='false' isOverride='false'  param_names='nickname;show;affiliation;role;jid;room' param_types='String;String;String;String;org.igniterealtime.xiff.core:UnescapedJID;org.igniterealtime.xiff.conference:IRoom' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[nickname
		 ]]></param>
<param><![CDATA[show
		 ]]></param>
<param><![CDATA[affiliation
		 ]]></param>
<param><![CDATA[role
		 ]]></param>
<param><![CDATA[jid
		 ]]></param>
<param><![CDATA[room
		 ]]></param>
</method>
<method name='affiliation' fullname='org.igniterealtime.xiff.conference:RoomOccupant/affiliation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.conference:RoomOccupant/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.conference:RoomOccupant/nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Used to be 'displayName' before XML migration
		 ]]></description>
</method>
<method name='online' fullname='org.igniterealtime.xiff.conference:RoomOccupant/online/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 RoomOccupants can't exist unless they're online
		 ]]></description>
</method>
<method name='role' fullname='org.igniterealtime.xiff.conference:RoomOccupant/role/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='room' fullname='org.igniterealtime.xiff.conference:RoomOccupant/room/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.conference:IRoom'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='rosterItem' fullname='org.igniterealtime.xiff.conference:RoomOccupant/rosterItem/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.im:IRosterItemVO'>
<description><![CDATA[
		 If there isn't a roster item associated with this room occupant
		 (for example, if the room is anonymous), this will return null
		 ]]></description>
</method>
<method name='show' fullname='org.igniterealtime.xiff.conference:RoomOccupant/show/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.conference:RoomOccupant/uid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='affiliation' fullname='org.igniterealtime.xiff.conference:RoomOccupant/affiliation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.conference:RoomOccupant/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.conference:RoomOccupant/nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='online' fullname='org.igniterealtime.xiff.conference:RoomOccupant/online/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.conference:RoomOccupant/role/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='room' fullname='org.igniterealtime.xiff.conference:RoomOccupant/room/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.conference:IRoom' param_defaults='undefined' result_type='void'>
</method>
<method name='show' fullname='org.igniterealtime.xiff.conference:RoomOccupant/show/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.conference:RoomOccupant/uid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_affiliation' fullname='org.igniterealtime.xiff.conference:RoomOccupant/private:_affiliation' type='String' isStatic='false' isConst='false' >
</field>
<field name='_jid' fullname='org.igniterealtime.xiff.conference:RoomOccupant/private:_jid' type='org.igniterealtime.xiff.core:UnescapedJID' isStatic='false' isConst='false' >
</field>
<field name='_nickname' fullname='org.igniterealtime.xiff.conference:RoomOccupant/private:_nickname' type='String' isStatic='false' isConst='false' >
</field>
<field name='_role' fullname='org.igniterealtime.xiff.conference:RoomOccupant/private:_role' type='String' isStatic='false' isConst='false' >
</field>
<field name='_room' fullname='org.igniterealtime.xiff.conference:RoomOccupant/private:_room' type='org.igniterealtime.xiff.conference:IRoom' isStatic='false' isConst='false' >
</field>
<field name='_show' fullname='org.igniterealtime.xiff.conference:RoomOccupant/private:_show' type='String' isStatic='false' isConst='false' >
</field>
<field name='_uid' fullname='org.igniterealtime.xiff.conference:RoomOccupant/private:_uid' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='InviteListener' fullname='org.igniterealtime.xiff.conference:InviteListener' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\conference\InviteListener.as' namespace='org.igniterealtime.xiff.conference' access='public' baseclass='flash.events:EventDispatcher' interfaces='org.igniterealtime.xiff.core:IListener' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Manages the dispatching of events during invitations. Add event
	 listeners to an instance of this class to monitor invite and decline
	 events.
	 	 <p>You only need a single instance of this class to listen for all invite
	 or decline events.</p>
	 ]]></description>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:InviteListener' name='invited' type='org.igniterealtime.xiff.events.InviteEvent' >
<description><![CDATA[
	 Dispatched when an invitations has been received.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.InviteEvent.INVITED
	 ]]></eventType>
<see><![CDATA[org.igniterealtime.xiff.conference.Room
	 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.conference.Room.#invite
	 ]]></see>
	</Event>
</metadata>
</classRec>
<method name='InviteListener' fullname='org.igniterealtime.xiff.conference:InviteListener/InviteListener' isStatic='false' isFinal='false' isOverride='false'  param_names='aConnection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[aConnection	An XMPPConnection instance that is providing the primary server
		 connection.
		 ]]></param>
</method>
<method name='handleEvent' fullname='org.igniterealtime.xiff.conference:InviteListener/private:handleEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='org.igniterealtime.xiff.events:MessageEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.conference:InviteListener/connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
<description><![CDATA[
		 A reference to the XMPPConnection being used for incoming/outgoing XMPP data.
		 		 ]]></description>
<return><![CDATA[The XMPPConnection used
		 ]]></return>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection
		 ]]></see>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.conference:InviteListener/connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<field name='_connection' fullname='org.igniterealtime.xiff.conference:InviteListener/private:_connection' type='org.igniterealtime.xiff.core:IXMPPConnection' isStatic='false' isConst='false' >
</field>
<classRec name='Room' fullname='org.igniterealtime.xiff.conference:Room' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\conference\Room.as' namespace='org.igniterealtime.xiff.conference' access='public' baseclass='org.igniterealtime.xiff.collections:ArrayCollection' interfaces='org.igniterealtime.xiff.conference:IRoom' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Manages incoming and outgoing data from a conference room as part of multi-user conferencing (XEP-0045).
	 You will need an instance of this class for each room that the user joins.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html
	 ]]></see>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='userPresenceChange' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when a user's presence changes.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.USER_PRESENCE_CHANGE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='userKicked' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when a user is kicked from the room.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.USER_KICKED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='userJoin' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched whenever an occupant joins the room. The <code>RoomEvent</code> instance will
	 contain an attribute <code>nickname</code> with the nickname of the occupant who joined.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.USER_JOIN
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='userDeparture' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched whenever an occpant leaves the room. The <code>RoomEvent</code> instance will
	 contain an attribute <code>nickname</code> with the nickname of the occupant who left.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.USER_DEPARTURE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='userBanned' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when a user is banned from the room.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.USER_BANNED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='subjectChange' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when the room subject changes.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.SUBJECT_CHANGE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='roomLeave' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when the server acknoledges that you have the left the room.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.ROOM_LEAVE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='roomJoin' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when you have entered the room and messages that are sent
	 will be displayed to other users. The room's role and affiliation will
	 be visible from this point forward.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.ROOM_JOIN
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='roomDestroyed' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when the room is removed.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.ROOM_DESTROYED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='registrationReqError' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when the room is members-only and the user is not on the member list.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.REGISTRATION_REQ_ERROR
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='privateMessage' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched whenever a new private message is received. The <code>RoomEvent</code> class
	 contains an attribute <code>data</code> with the private message as an instance of the
	 <code>Message</code> class.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.PRIVATE_MESSAGE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='passwordError' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when the room requires a password and the user did not supply one (or
	 the password provided is incorrect).
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.PASSWORD_ERROR
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='nickConflict' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when the user's preferred nickname already exists in the room.	The
	 <code>RoomEvent</code> will contain an attribute <code>nickname</code> with the nickname
	 already existing in the room.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.NICK_CONFLICT
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='maxUsersError' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched if the room has reached its maximum number of occupants.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.MAX_USERS_ERROR
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='lockedError' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched if a user attempts to enter a room while it is "locked" (i.e., before the room
	 creator provides an initial configuration and therefore before the room officially exists).
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.LOCKED_ERROR
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='groupMessage' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched whenever a new message intented for all room occupants is received. The
	 <code>RoomEvent</code> class will contain an attribute <code>data</code> with the
	 group message as an instance of the <code>Message</code> class.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.GROUP_MESSAGE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='declined' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when an invite to this room has been declined by the invitee. The <code>RoomEvent</code>
	 <code>data</code> property that has the following attributes:
	 	 <p><code>from</code>: The JID of the user initiating the invite<br />
	 <code>reason</code>: A string containing the reason to join the room<br />
	 <code>data</code>: The original message containing the decline</p>
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.DECLINED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='configureRoomComplete' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when a room configuration form is complete.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.CONFIGURE_ROOM_COMPLETE
	 ]]></eventType>
<see><![CDATA[#configure
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='configureRoom' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when a room configuration form is required.	This can occur during the
	 creation of a room, or if a room configuration is requested.	The <code>RoomEvent</code>
	 instance will contain an attribute <code>data</code> that is an instance of an object
	 with the following attributes:
	 	 <p><code>instructions</code>: Instructions for the use of form<br />
	 <code>title</code>: Title of the configuration form<br />
	 <code>label</code>: A friendly name for the field<br />
	 <code>name</code>: A computer readable identifier for the field used to identify
	 this field in the result passed to <code>configure()</code><br />
	 <code>type</code>: The type of the field to be displayed. Type will be a constant
	 from the <code>FormField</code> class.</p>
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.CONFIGURE_ROOM
	 ]]></eventType>
<see><![CDATA[org.igniterealtime.xiff.data.forms.FormExtension
	 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.forms.FormField
	 ]]></see>
<see><![CDATA[#configure
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='bannedError' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched if the user attempted to join the room but was not allowed to do so because
	 they are banned (i.e., has an affiliation of "outcast").
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.BANNED_ERROR
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='affiliations' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when an affiliation list has been requested. The event object contains an
	 array of <code>MUCItems</code> containing the JID and affiliation properties.
	 	 <p>To grant or revoke permissions based on this list, only send the changes you wish to
	 make, calling grant/revoke with the new affiliation and existing JID.</p>
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.AFFILIATIONS
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='affiliationChangeComplete' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when an affiliation change has completed.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.AFFILIATION_CHANGE_COMPLETE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='adminError' type='org.igniterealtime.xiff.events.RoomEvent' >
<description><![CDATA[
	 Dispatched when an administration action failed.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RoomEvent.ADMIN_ERROR
	 ]]></eventType>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection.error
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.conference:Room' name='change' type='org.igniterealtime.xiff.events.PropertyChangeEvent' >
<description><![CDATA[
	 Dispatched when the active, affiliation, or role property changes.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.PropertyChangeEvent.CHANGE
	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='Room' fullname='org.igniterealtime.xiff.conference:Room/Room' isStatic='false' isFinal='false' isOverride='false'  param_names='aConnection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[aConnection  A XMPPConnection instance that is providing the primary server connection
		 ]]></param>
</method>
<method name='admin_error' fullname='org.igniterealtime.xiff.conference:Room/private:admin_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='admin_response' fullname='org.igniterealtime.xiff.conference:Room/private:admin_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='allow' fullname='org.igniterealtime.xiff.conference:Room/allow' isStatic='false' isFinal='false' isOverride='false'  param_names='jids' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Allow a previously banned JIDs to enter this room.	This is the same as:
		 <code>Room.grant(AFFILIATION_NONE, jid)</code>
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <code>RoomEvent.ADMIN_ERROR</code></p>
		 		 ]]></description>
<param><![CDATA[jids An array of unescaped JIDs to allow
		 ]]></param>
<see><![CDATA[#grant
		 ]]></see>
<see><![CDATA[#revoke
		 ]]></see>
</method>
<method name='ban_error' fullname='org.igniterealtime.xiff.conference:Room/private:ban_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='ban_response' fullname='org.igniterealtime.xiff.conference:Room/private:ban_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='ban' fullname='org.igniterealtime.xiff.conference:Room/ban' isStatic='false' isFinal='false' isOverride='false'  param_names='jids' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Bans an array of JIDs from entering the room.
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <code>RoomEvent.ADMIN_ERROR</code>.</p>
		 		 ]]></description>
<param><![CDATA[jids An arry of unescaped JIDs to ban
		 ]]></param>
</method>
<method name='cancelConfiguration' fullname='org.igniterealtime.xiff.conference:Room/cancelConfiguration' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Cancels the configuration process.	The room may still be locked if
		 you cancel the configuration process when attempting to join a
		 reserved room.
		 		 <p>You must have joined the room and have the owner affiliation to
		 configure the room.</p>
		 		 ]]></description>
<see><![CDATA[#configureRoom
		 ]]></see>
<see><![CDATA[#configure
		 ]]></see>
<see><![CDATA[#join
		 ]]></see>
</method>
<method name='changeSubject' fullname='org.igniterealtime.xiff.conference:Room/changeSubject' isStatic='false' isFinal='false' isOverride='false'  param_names='newSubject' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Changes the subject in the conference room. You must have already joined the
		 room before you can change the subject.
		 		 ]]></description>
<param><![CDATA[newSubject The new subject
		 ]]></param>
</method>
<method name='configure_error' fullname='org.igniterealtime.xiff.conference:Room/private:configure_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='configure_response' fullname='org.igniterealtime.xiff.conference:Room/private:configure_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='configure' fullname='org.igniterealtime.xiff.conference:Room/configure' isStatic='false' isFinal='false' isOverride='false'  param_names='fieldmap' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sends a configuration form to the room.
		 		 You must be joined and have owner affiliation to configure the room
		 		 ]]></description>
<param><![CDATA[fieldmap FormExtension, or a hash that is an object with keys being the room configuration
		 form variables and the values being arrays. For single value fields, use a single
		 element array.
		 ]]></param>
<see><![CDATA[#configureRoom
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#registrar-formtype-owner
		 ]]></see>
</method>
<method name='decline' fullname='org.igniterealtime.xiff.conference:Room/decline' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;reason' param_types='org.igniterealtime.xiff.core:UnescapedJID;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Actively decline an invitation.	You can optionally ignore invitations
		 but if you choose to decline an invitation, you call this method on
		 a room instance that represents the room the invite originated from.
		 		 <p>You do not need to have joined this room to decline an invitation</p>
		 		 <p>Note: mu-conference-0.6 does not allow users to send decline
		 messages without joining first.	If using this version of conferencing
		 software, it is best to ignore invites.</p>
		 		 ]]></description>
<param><![CDATA[jid	An unescaped JID of the user to invite.
		 ]]></param>
<param><![CDATA[reason A string describing why the invitiation was declined
		 ]]></param>
</method>
<method name='destroy' fullname='org.igniterealtime.xiff.conference:Room/destroy' isStatic='false' isFinal='false' isOverride='false'  param_names='reason;alternateJID;callback' param_types='String;org.igniterealtime.xiff.core:UnescapedJID;Function' param_defaults='undefined;null;null' result_type='void'>
<description><![CDATA[
		 Destroys a reserved room.	If the room has been configured to be persistent,
		 then it is optional that the server will permanently remove the room.
		 		 ]]></description>
<param><![CDATA[reason A short description of why the room is being destroyed
		 ]]></param>
<param><![CDATA[alternateJID A JID for current members to use as an alternate room to join
		 after the room has been destroyed. Like a postal forwarding address.
		 ]]></param>
</method>
<method name='dispatchChangeEvent' fullname='org.igniterealtime.xiff.conference:Room/private:dispatchChangeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='name;newValue;oldValue' param_types='String;*;*' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Helper to dispatch a property change event.
		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[newValue
		 ]]></param>
<param><![CDATA[oldValue
		 ]]></param>
</method>
<method name='getMessage' fullname='org.igniterealtime.xiff.conference:Room/getMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='body;htmlBody' param_types='String;String' param_defaults='null;null' result_type='org.igniterealtime.xiff.data:IMessage'>
<description><![CDATA[
		 Gets an instance of the <code>Message</code> class that has been pre-configured to be
		 sent from this room. Use this method to get a <code>Message</code> in order to add extensions
		 to outgoing room messages.
		 		 ]]></description>
<param><![CDATA[body The message body
		 ]]></param>
<param><![CDATA[htmlBody The message body with HTML formatting
		 ]]></param>
<return><![CDATA[A <code>Message</code> class instance
		 ]]></return>
</method>
<method name='getOccupantNamed' fullname='org.igniterealtime.xiff.conference:Room/getOccupantNamed' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='org.igniterealtime.xiff.conference:IRoomOccupant'>
<description><![CDATA[
		 Gets the <code>RoomOccupant</code> whose nickname matches the name passed in.
		 		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='grant_error' fullname='org.igniterealtime.xiff.conference:Room/private:grant_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='grant_response' fullname='org.igniterealtime.xiff.conference:Room/private:grant_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='grant' fullname='org.igniterealtime.xiff.conference:Room/grant' isStatic='false' isFinal='false' isOverride='false'  param_names='affiliation;jids' param_types='String;Array' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Grants permissions on a room to one or more JIDs by setting the
		 affiliation of a user based on their JID.
		 		 <p>If the JID currently has an existing affiliation, then the existing
		 affiliation will be replaced with the one passed. If the process could not be
		 completed, the room will dispatch the event <code>RoomEvent.ADMIN_ERROR</code>.</p>
		 		 <p>XMPP spec states that the #admin schema should be used for affiliation changes.
		 Unfortunately to this date, Openfire does not match spec and requires the #owner schema.
		 Because of this, if granting privileges fails on the first attempt using the #admin schema,
		 we try again using the #owner schema.</p>
		 		 ]]></description>
<param><![CDATA[affiliation Use one of the
		 following affiliations: <code>Room.AFFILIATION_MEMBER</code>,
		 <code>Room.AFFILIATION_ADMIN</code>,
		 <code>Room.AFFILIATION_OWNER</code>
		 ]]></param>
<param><![CDATA[jids An array of UnescapedJIDs to grant these permissions to
		 ]]></param>
<see><![CDATA[#revoke
		 ]]></see>
<see><![CDATA[#allow
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#schemas-admin
		 ]]></see>
</method>
<method name='handleEvent' fullname='org.igniterealtime.xiff.conference:Room/private:handleEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='eventObj' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[eventObj
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='invite' fullname='org.igniterealtime.xiff.conference:Room/invite' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;reason' param_types='org.igniterealtime.xiff.core:UnescapedJID;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Invites a user that is not currently a member of this room to this room.
		 		 <p>You must have joined the room and have appropriate permissions to invite
		 other memebers, because the server will format and send the invite message to
		 as if it came from the room rather that you sending the invite directly from you.</p>
		 		 <p>To listen to invite events, add an event listener on your XMPPConnection to the
		 <code>InviteEvent.INVITED</code> event.</p>
		 		 ]]></description>
<param><![CDATA[jid	An unescaped JID of the user to invite.
		 ]]></param>
<param><![CDATA[reason A string describing why you would like to invite the user.
		 ]]></param>
</method>
<method name='isThisRoom' fullname='org.igniterealtime.xiff.conference:Room/isThisRoom' isStatic='false' isFinal='false' isOverride='false'  param_names='sender' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Determines if the <code>sender</code> parameter is the same
		 as the room's JID.
		 		 ]]></description>
<param><![CDATA[the room JID to test
		 ]]></param>
<return><![CDATA[true if the passed JID matches the getRoomJID
		 ]]></return>
</method>
<method name='isThisUser' fullname='org.igniterealtime.xiff.conference:Room/isThisUser' isStatic='false' isFinal='false' isOverride='false'  param_names='sender' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Determines if the <code>sender</code> param is the
		 same as the user's JID.
		 		 ]]></description>
<param><![CDATA[sender	the room JID to test
		 ]]></param>
<return><![CDATA[true if the passed JID matches the userJID
		 ]]></return>
</method>
<method name='joinWithExplicitMUCExtension' fullname='org.igniterealtime.xiff.conference:Room/joinWithExplicitMUCExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='createReserved;mucExtension;joinPresenceExtensions' param_types='Boolean;org.igniterealtime.xiff.data.muc:IMUCExtension;Array' param_defaults='undefined;undefined;null' result_type='Boolean'>
<description><![CDATA[
		 Joins a conference room based on the parameters specified by the room
		 properties.	This call will create an instant room based on a default
		 server configuration if the room doesn't exist.
		 		 <p>To create and begin the configuration process of a reserved room, pass
		 <code>true</code> to this method to begin the configuration process.	When
		 The configuration is complete, the room will be unlocked for others to join.
		 Listen for the <code>RoomEvent.CONFIGURE_ROOM</code> event to handle and
		 either return or cancel the configuration of the room.</p>
		 		 <p>This function adds an additional parameter to allow the caller to completely customize the MUC extension that
		 gets sent to the room.  For example, you can add a history element that specifies how much discussion
		 history you want sent when you join the room (http://xmpp.org/extensions/xep-0045.html#enter-managehistory):
		 <code>
		 var muc:MUCExtension = new MUCExtension();
		 muc.history = true;
		 muc.maxchars = 0;
		 _room.joinWithExplicitMUCExtension(false, mucExt);
		 </code>
		 </p>
		 		 ]]></description>
<param><![CDATA[createReserved Set to true if you wish to create and configure a reserved room
		 ]]></param>
<param><![CDATA[mucExtension The customized MUC extension to send with initial presence to the room.
		 ]]></param>
<param><![CDATA[joinPresenceExtensions An array of additional extensions to send with the initial presence to the room.
		 ]]></param>
<return><![CDATA[A boolean indicating whether the join attempt was successfully sent.
		 ]]></return>
</method>
<method name='join' fullname='org.igniterealtime.xiff.conference:Room/join' isStatic='false' isFinal='false' isOverride='false'  param_names='createReserved;joinPresenceExtensions' param_types='Boolean;Array' param_defaults='false;null' result_type='Boolean'>
<description><![CDATA[
		 Joins a conference room based on the parameters specified by the room
		 properties.	This call will create an instant room based on a default
		 server configuration if the room doesn't exist.
		 		 <p>To create and begin the configuration process of a reserved room, pass
		 <code>true</code> to this method to begin the configuration process.	When
		 The configuration is complete, the room will be unlocked for others to join.
		 Listen for the <code>RoomEvent.CONFIGURE_ROOM</code> event to handle and
		 either return or cancel the configuration of the room.</p>
		 		 ]]></description>
<param><![CDATA[createReserved Set to true if you wish to create and configure a reserved room
		 ]]></param>
<param><![CDATA[joinPresenceExtensions An array of additional extensions to send with the initial presence to the room.
		 ]]></param>
<return><![CDATA[A boolean indicating whether the join attempt was successfully sent.
		 ]]></return>
</method>
<method name='kickOccupant' fullname='org.igniterealtime.xiff.conference:Room/kickOccupant' isStatic='false' isFinal='false' isOverride='false'  param_names='occupantNick;reason' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Kicks an occupant out of the room, assuming that the user has necessary
		 permissions in order to do so. If the user does not, the server will return an error.
		 		 ]]></description>
<param><![CDATA[occupantNick The nickname of the room occupant to kick
		 ]]></param>
<param><![CDATA[reason The reason for the kick
		 ]]></param>
</method>
<method name='leave' fullname='org.igniterealtime.xiff.conference:Room/leave' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Leaves the current conference room, assuming that the user has joined one.
		 If the user is not currently in a room, this method does nothing.
		 ]]></description>
</method>
<method name='requestAffiliations_error' fullname='org.igniterealtime.xiff.conference:Room/private:requestAffiliations_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='requestAffiliations_response' fullname='org.igniterealtime.xiff.conference:Room/private:requestAffiliations_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='requestAffiliations' fullname='org.igniterealtime.xiff.conference:Room/requestAffiliations' isStatic='false' isFinal='false' isOverride='false'  param_names='affiliation' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Requests an affiliation list for a given affiliation with with room.
		 This will either dispatch the event <code>RoomEvent.AFFILIATIONS</code> or
		 <code>RoomEvent.ADMIN_ERROR</code> depending on the result of the request.
		 		 ]]></description>
<param><![CDATA[affiliation Use one of the following affiliations: <code>Room.AFFILIATION_NONE</code>,
		 <code>Room.AFFILIATION_OUTCAST</code>,
		 <code>Room.AFFILIATION_MEMBER</code>,
		 <code>Room.AFFILIATION_ADMIN</code>,
		 <code>Room.AFFILIATION_OWNER</code>
		 ]]></param>
<see><![CDATA[#revoke
		 ]]></see>
<see><![CDATA[#grant
		 ]]></see>
<see><![CDATA[#affiliations
		 ]]></see>
</method>
<method name='requestConfiguration_error' fullname='org.igniterealtime.xiff.conference:Room/private:requestConfiguration_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='requestConfiguration_response' fullname='org.igniterealtime.xiff.conference:Room/private:requestConfiguration_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='requestConfiguration' fullname='org.igniterealtime.xiff.conference:Room/requestConfiguration' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Requests a configuration form from the room.	Listen to <code>configureRoom</code>
		 event to fill out the form then call either <code>configure</code> or
		 <code>cancelConfiguration</code> to complete the configuration process
		 		 You must be joined to the room and have the owner affiliation to request
		 a configuration form
		 		 ]]></description>
<see><![CDATA[#configureRoom
		 ]]></see>
<see><![CDATA[#configure
		 ]]></see>
<see><![CDATA[#cancelConfiguration
		 ]]></see>
</method>
<method name='revoke' fullname='org.igniterealtime.xiff.conference:Room/revoke' isStatic='false' isFinal='false' isOverride='false'  param_names='jids' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Revokes all affiliations from the JIDs. This is the same as:
		 <code>grant( Room.AFFILIATION_NONE, jids )</code>
		 		 <p>If the process could not be completed, the room will dispatch the event
		 <code>RoomEvent.ADMIN_ERROR</code>. Note: if the JID is banned from this room,
		 then this will also revoke the banned status.</p>
		 		 ]]></description>
<param><![CDATA[jids An array of UnescapedJIDs to revoke affiliations from
		 ]]></param>
<see><![CDATA[#grant
		 ]]></see>
<see><![CDATA[#allow
		 ]]></see>
</method>
<method name='sendMessageWithExtension' fullname='org.igniterealtime.xiff.conference:Room/sendMessageWithExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='message' param_types='org.igniterealtime.xiff.data:IMessage' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sends a message to the conference room with an extension attached.
		 Use this method in conjunction with the <code>getMessage</code> method.
		 		 ]]></description>
<param><![CDATA[message The message to send
		 ]]></param>
</method>
<method name='sendMessage' fullname='org.igniterealtime.xiff.conference:Room/sendMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='body;htmlBody' param_types='String;String' param_defaults='null;null' result_type='void'>
<description><![CDATA[
		 Sends a message to the conference room.
		 		 ]]></description>
<param><![CDATA[body The message body
		 ]]></param>
<param><![CDATA[htmlBody The message body with HTML formatting
		 ]]></param>
</method>
<method name='sendPrivateMessage' fullname='org.igniterealtime.xiff.conference:Room/sendPrivateMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='recipientNickname;body;htmlBody' param_types='String;String;String' param_defaults='undefined;null;null' result_type='void'>
<description><![CDATA[
		 Sends a private message to a specific participant in the conference room.
		 		 ]]></description>
<param><![CDATA[recipientNickname The conference room nickname of the recipient who should
		 receive the private message
		 ]]></param>
<param><![CDATA[body The message body
		 ]]></param>
<param><![CDATA[htmlBody The message body with HTML formatting
		 ]]></param>
</method>
<method name='setActive' fullname='org.igniterealtime.xiff.conference:Room/private:setActive' isStatic='false' isFinal='false' isOverride='false'  param_names='state' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Needs to be available only within this class
		 		 ]]></description>
<param><![CDATA[state
		 ]]></param>
</method>
<method name='setOccupantVoice' fullname='org.igniterealtime.xiff.conference:Room/setOccupantVoice' isStatic='false' isFinal='false' isOverride='false'  param_names='occupantNick;voice' param_types='String;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 In a moderated room, sets voice status to a particular occupant, assuming the user
		 has the necessary permissions to do so.
		 		 ]]></description>
<param><![CDATA[occupantNick The nickname of the occupant to give voice
		 ]]></param>
<param><![CDATA[voice Whether to add voice (true) or remove voice (false). Having voice means
		 that the user is actually able to talk. Without voice the user is effectively muted.
		 ]]></param>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.conference:Room/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='unlockRoom' fullname='org.igniterealtime.xiff.conference:Room/private:unlockRoom' isStatic='false' isFinal='false' isOverride='false'  param_names='isReserved' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#createroom
		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='updateRoomRoster' fullname='org.igniterealtime.xiff.conference:Room/private:updateRoomRoster' isStatic='false' isFinal='false' isOverride='false'  param_names='aPresence' param_types='org.igniterealtime.xiff.data:Presence' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[aPresence
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='active' fullname='org.igniterealtime.xiff.conference:Room/active/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Determines whether the connection to the room is active - that is, the user
		 is connected and has joined the room.
		 ]]></description>
</method>
<method name='affiliation' fullname='org.igniterealtime.xiff.conference:Room/affiliation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the user's affiliation for this room.
		 Possible affiliations are "owner", "admin", "member", and "outcast".
		 It is also possible to have no defined affiliation.
		 ]]></description>
</method>
<method name='anonymous' fullname='org.igniterealtime.xiff.conference:Room/anonymous/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Whether the room shows full JIDs or not.
		 ]]></description>
</method>
<method name='conferenceServer' fullname='org.igniterealtime.xiff.conference:Room/conferenceServer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The conference server to use for this room. Usually, this is a subdomain of
		 the primary XMPP server, like conference.myserver.com.
		 ]]></description>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.conference:Room/connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
<description><![CDATA[
		 A reference to the XMPPConnection being used for incoming/outgoing XMPP data.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection
		 ]]></see>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.conference:Room/nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The nickname to use when joining.
		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.conference:Room/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The password.
		 ]]></description>
</method>
<method name='role' fullname='org.igniterealtime.xiff.conference:Room/role/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the user's role in the conference room.
		 		 <p>Possible roles are "visitor", "participant", "moderator" or no defined role.</p>
		 <ul>
		 <li>ROLE_MODERATOR</li>
		 <li>ROLE_NONE</li>
		 <li>ROLE_PARTICIPANT</li>
		 <li>ROLE_VISITOR</li>
		 </ul>
		 ]]></description>
</method>
<method name='roomJID' fullname='org.igniterealtime.xiff.conference:Room/roomJID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
<description><![CDATA[
		 The unescaped JID of the room. <code>room&#64;conference.server</code>
		 Set this after initiating a new Room.
		 ]]></description>
</method>
<method name='roomName' fullname='org.igniterealtime.xiff.conference:Room/roomName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The room name that should be used when joining.
		 ]]></description>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.conference:Room/subject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The subject.
		 ]]></description>
</method>
<method name='userJID' fullname='org.igniterealtime.xiff.conference:Room/userJID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
<description><![CDATA[
		 Get the JID of the conference room user.
		 ]]></description>
</method>
<method name='conferenceServer' fullname='org.igniterealtime.xiff.conference:Room/conferenceServer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.conference:Room/connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.conference:Room/nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.conference:Room/password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='roomJID' fullname='org.igniterealtime.xiff.conference:Room/roomJID/set' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='roomName' fullname='org.igniterealtime.xiff.conference:Room/roomName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='AFFILIATION_ADMIN' fullname='org.igniterealtime.xiff.conference:Room/AFFILIATION_ADMIN' type='String' isStatic='true' isConst='true' defaultValue='admin' >
</field>
<field name='AFFILIATION_MEMBER' fullname='org.igniterealtime.xiff.conference:Room/AFFILIATION_MEMBER' type='String' isStatic='true' isConst='true' defaultValue='member' >
</field>
<field name='AFFILIATION_NONE' fullname='org.igniterealtime.xiff.conference:Room/AFFILIATION_NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
</field>
<field name='AFFILIATION_OUTCAST' fullname='org.igniterealtime.xiff.conference:Room/AFFILIATION_OUTCAST' type='String' isStatic='true' isConst='true' defaultValue='outcast' >
</field>
<field name='AFFILIATION_OWNER' fullname='org.igniterealtime.xiff.conference:Room/AFFILIATION_OWNER' type='String' isStatic='true' isConst='true' defaultValue='owner' >
</field>
<field name='ROLE_MODERATOR' fullname='org.igniterealtime.xiff.conference:Room/ROLE_MODERATOR' type='String' isStatic='true' isConst='true' defaultValue='moderator' >
</field>
<field name='ROLE_NONE' fullname='org.igniterealtime.xiff.conference:Room/ROLE_NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
</field>
<field name='ROLE_PARTICIPANT' fullname='org.igniterealtime.xiff.conference:Room/ROLE_PARTICIPANT' type='String' isStatic='true' isConst='true' defaultValue='participant' >
</field>
<field name='ROLE_VISITOR' fullname='org.igniterealtime.xiff.conference:Room/ROLE_VISITOR' type='String' isStatic='true' isConst='true' defaultValue='visitor' >
</field>
<field name='_active' fullname='org.igniterealtime.xiff.conference:Room/private:_active' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_affiliationArgs' fullname='org.igniterealtime.xiff.conference:Room/private:_affiliationArgs' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_affiliationExtension' fullname='org.igniterealtime.xiff.conference:Room/private:_affiliationExtension' type='org.igniterealtime.xiff.data.muc:MUCBaseExtension' isStatic='false' isConst='false' >
</field>
<field name='_affiliation' fullname='org.igniterealtime.xiff.conference:Room/private:_affiliation' type='String' isStatic='false' isConst='false' >
</field>
<field name='_anonymous' fullname='org.igniterealtime.xiff.conference:Room/private:_anonymous' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_connection' fullname='org.igniterealtime.xiff.conference:Room/private:_connection' type='org.igniterealtime.xiff.core:IXMPPConnection' isStatic='false' isConst='false' >
</field>
<field name='_isReserved' fullname='org.igniterealtime.xiff.conference:Room/private:_isReserved' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_nickname' fullname='org.igniterealtime.xiff.conference:Room/private:_nickname' type='String' isStatic='false' isConst='false' >
</field>
<field name='_password' fullname='org.igniterealtime.xiff.conference:Room/private:_password' type='String' isStatic='false' isConst='false' >
</field>
<field name='_pendingNickname' fullname='org.igniterealtime.xiff.conference:Room/private:_pendingNickname' type='String' isStatic='false' isConst='false' >
</field>
<field name='_role' fullname='org.igniterealtime.xiff.conference:Room/private:_role' type='String' isStatic='false' isConst='false' >
</field>
<field name='_roomJID' fullname='org.igniterealtime.xiff.conference:Room/private:_roomJID' type='org.igniterealtime.xiff.core:UnescapedJID' isStatic='false' isConst='false' >
</field>
<field name='_subject' fullname='org.igniterealtime.xiff.conference:Room/private:_subject' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='ExtensionClassRegistry' fullname='org.igniterealtime.xiff.data:ExtensionClassRegistry' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\ExtensionClassRegistry.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This is a static class that contains class constructors for all
	 extensions that could come from the network.
	 ]]></description>
</classRec>
<method name='getNamespaces' fullname='org.igniterealtime.xiff.data:ExtensionClassRegistry/getNamespaces' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Get a list of namespaces of the currently enabled extensions.
		 ]]></description>
</method>
<method name='lookup' fullname='org.igniterealtime.xiff.data:ExtensionClassRegistry/lookup' isStatic='true' isFinal='false' isOverride='false'  param_names='ns;elementName' param_types='String;String' param_defaults='undefined;null' result_type='Class'>
<description><![CDATA[
		 Find the extension with the given NS and ELEMENT_NAME if availale in the registery.
		 		 ]]></description>
<param><![CDATA[ns
		 ]]></param>
<param><![CDATA[elementName Optional ELEMENT_NAME, used if there are several extensions with the same NS
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='register' fullname='org.igniterealtime.xiff.data:ExtensionClassRegistry/register' isStatic='true' isFinal='false' isOverride='false'  param_names='extensionClass' param_types='Class' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Registers the given extension with the extension registry for it to be used,
		 in case incoming data matches its ELEMENT_NAME and NS.
		 		 ]]></description>
<return><![CDATA[In case the Extension was already added or it was not proper type, returns false.
		 ]]></return>
</method>
<method name='remove' fullname='org.igniterealtime.xiff.data:ExtensionClassRegistry/remove' isStatic='true' isFinal='false' isOverride='false'  param_names='extensionClass' param_types='Class' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Remove the given extension from the registery.
		 ]]></description>
</method>
<field name='_classes' fullname='org.igniterealtime.xiff.data:ExtensionClassRegistry/private:_classes' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Array of the Extension classes.
		 ]]></description>
</field>
<interfaceRec name='INodeProxy' fullname='org.igniterealtime.xiff.data:INodeProxy' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\INodeProxy.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 An interface for objects that abstract XML data by providing accessors
	 to the original XML data stored within.
	 	 <p>Most XMPP stanzas that will interact with the library should implement this interface.</p>
	 ]]></description>
</interfaceRec>
<method name='xml' fullname='org.igniterealtime.xiff.data:INodeProxy/org.igniterealtime.xiff.data:INodeProxy:xml/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data:INodeProxy/org.igniterealtime.xiff.data:INodeProxy:xml/set' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IExtension' fullname='org.igniterealtime.xiff.data:IExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IExtension.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 The interface describing an extension.
	 All extensions must implement this interface.
	 ]]></description>
</interfaceRec>
<method name='getElementName' fullname='org.igniterealtime.xiff.data:IExtension/org.igniterealtime.xiff.data:IExtension:getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Element name of the extension
		 ]]></description>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data:IExtension/org.igniterealtime.xiff.data:IExtension:getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Namespace of the element
		 ]]></description>
</method>
<interfaceRec name='IExtendable' fullname='org.igniterealtime.xiff.data:IExtendable' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IExtendable.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This interface provides access to contained extensions and methods to modify the contained extensions.
	 All XMPP stanzas that can be extended should implement this interface.
	 	 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.ExtensionContainer
	 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.IExtension
	 ]]></see>
</interfaceRec>
<method name='addExtension' fullname='org.igniterealtime.xiff.data:IExtendable/org.igniterealtime.xiff.data:IExtendable:addExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='extension' param_types='org.igniterealtime.xiff.data:IExtension' param_defaults='undefined' result_type='org.igniterealtime.xiff.data:IExtension'>
</method>
<method name='getAllExtensionsByNS' fullname='org.igniterealtime.xiff.data:IExtendable/org.igniterealtime.xiff.data:IExtendable:getAllExtensionsByNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace' param_types='String' param_defaults='undefined' result_type='Array'>
</method>
<method name='getAllExtensions' fullname='org.igniterealtime.xiff.data:IExtendable/org.igniterealtime.xiff.data:IExtendable:getAllExtensions' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='removeAllExtensions' fullname='org.igniterealtime.xiff.data:IExtendable/org.igniterealtime.xiff.data:IExtendable:removeAllExtensions' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='removeExtension' fullname='org.igniterealtime.xiff.data:IExtendable/org.igniterealtime.xiff.data:IExtendable:removeExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='extension' param_types='org.igniterealtime.xiff.data:IExtension' param_defaults='undefined' result_type='Boolean'>
</method>
<interfaceRec name='IXMLStanza' fullname='org.igniterealtime.xiff.data:IXMLStanza' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IXMLStanza.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='org.igniterealtime.xiff.data:IExtendable' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Since XML migration, the only job for this interace is to bring together two other
	 interfaces that it extends.
	 ]]></description>
</interfaceRec>
<method name='getAttribute' fullname='org.igniterealtime.xiff.data:IXMLStanza/org.igniterealtime.xiff.data:IXMLStanza:getAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='getField' fullname='org.igniterealtime.xiff.data:IXMLStanza/org.igniterealtime.xiff.data:IXMLStanza:getField' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='setAttribute' fullname='org.igniterealtime.xiff.data:IXMLStanza/org.igniterealtime.xiff.data:IXMLStanza:setAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name;value' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setField' fullname='org.igniterealtime.xiff.data:IXMLStanza/org.igniterealtime.xiff.data:IXMLStanza:setField' isStatic='false' isFinal='false' isOverride='false'  param_names='name;value' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.data:IXMLStanza/org.igniterealtime.xiff.data:IXMLStanza:toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<classRec name='ExtensionContainer' fullname='org.igniterealtime.xiff.data:ExtensionContainer' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\ExtensionContainer.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.data:IExtendable' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Contains the implementation for a generic extension container.
	 Use the static method "decorate" to implement the IExtendable interface on a class.
	 ]]></description>
</classRec>
<method name='ExtensionContainer' fullname='org.igniterealtime.xiff.data:ExtensionContainer/ExtensionContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='addExtension' fullname='org.igniterealtime.xiff.data:ExtensionContainer/addExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='extension' param_types='org.igniterealtime.xiff.data:IExtension' param_defaults='undefined' result_type='org.igniterealtime.xiff.data:IExtension'>
<description><![CDATA[
		 Add extension to the list of the given namespace and insert to the XML element as a child.
		 ]]></description>
<param><![CDATA[extension
		 ]]></param>
<return><![CDATA[The same IExtension that was passed via the parameter
		 ]]></return>
</method>
<method name='getAllExtensionsByNS' fullname='org.igniterealtime.xiff.data:ExtensionContainer/getAllExtensionsByNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace' param_types='String' param_defaults='undefined' result_type='Array'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[nameSpace
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getAllExtensions' fullname='org.igniterealtime.xiff.data:ExtensionContainer/getAllExtensions' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 		 ]]></description>
<return><![CDATA[]]></return>
</method>
<method name='getExtension' fullname='org.igniterealtime.xiff.data:ExtensionContainer/getExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='elementName' param_types='String' param_defaults='undefined' result_type='org.igniterealtime.xiff.data:IExtension'>
<description><![CDATA[
		 Get the extension having the given element name.
		 Unfortunetly only takes the oldest of the list...
		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<return><![CDATA[]]></return>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html#filter%28%29
		 ]]></see>
</method>
<method name='removeAllExtensions' fullname='org.igniterealtime.xiff.data:ExtensionContainer/removeAllExtensions' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[nameSpace
		 ]]></param>
</method>
<method name='removeExtension' fullname='org.igniterealtime.xiff.data:ExtensionContainer/removeExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='extension' param_types='org.igniterealtime.xiff.data:IExtension' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[extension
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data:ExtensionContainer/xml/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
<description><![CDATA[
		 The XML node that should be used for this stanza's internal XML representation,
		 base of the XMLStanza, XML element.
		 		 <p>Simply by setting this will take care of the required parsing and deserialisation.</p>
		 		 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/XML.html
		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/xml/
		 ]]></see>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data:ExtensionContainer/xml/set' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<field name='_exts' fullname='org.igniterealtime.xiff.data:ExtensionContainer/private:_exts' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 From ExtensionContainer
		 { NS: [ Extension, Extension, ... ], ... }
		 ]]></description>
</field>
<field name='_xml' fullname='org.igniterealtime.xiff.data:ExtensionContainer/private:_xml' type='XML' isStatic='false' isConst='false' >
<description><![CDATA[
		 The XML.
		 ]]></description>
</field>
<interfaceRec name='IXMPPStanza' fullname='org.igniterealtime.xiff.data:IXMPPStanza' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IXMPPStanza.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='org.igniterealtime.xiff.data:IXMLStanza;org.igniterealtime.xiff.data:IExtendable' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Interface for base XMPP stanza
	 ]]></description>
</interfaceRec>
<method name='errorCode' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorCondition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorMessage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='from' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:from/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
</method>
<method name='id' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='to' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:to/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='errorCode' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorCode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorCondition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorMessage/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:errorType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='from' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:from/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='id' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:id/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='to' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:to/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data:IXMPPStanza/org.igniterealtime.xiff.data:IXMPPStanza:type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='XMLStanza' fullname='org.igniterealtime.xiff.data:XMLStanza' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\XMLStanza.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='org.igniterealtime.xiff.data:ExtensionContainer' interfaces='org.igniterealtime.xiff.data:IXMLStanza' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This is a base class for all classes that encapsulate XML stanza data. It provides
	 a set of methods that faciliate easy manipulation of XML data.
	 ]]></description>
</classRec>
<method name='XMLStanza' fullname='org.igniterealtime.xiff.data:XMLStanza/XMLStanza' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 XMPP is based on communication with XML stanzas
		 ]]></description>
</method>
<method name='getAttribute' fullname='org.igniterealtime.xiff.data:XMLStanza/getAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Convinience method for getting element value from the XML.
		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getChildAttribute' fullname='org.igniterealtime.xiff.data:XMLStanza/getChildAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='elem;name' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[
		 Convinience method for getting child element attribute value from the XML.
		 ]]></description>
<param><![CDATA[elem
		 ]]></param>
<param><![CDATA[name
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getChildField' fullname='org.igniterealtime.xiff.data:XMLStanza/getChildField' isStatic='false' isFinal='false' isOverride='false'  param_names='elem;name' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[
		 Convinience method for getting child element value from the XML.
		 		 <p>Might seem over complex, but AS3 seems to handle different kind of
		 XML differently, thus shorthands and even methods such as <code>localName()</code>
		 do not work as expected.</p>
		 		 ]]></description>
<param><![CDATA[elem
		 ]]></param>
<param><![CDATA[name
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getField' fullname='org.igniterealtime.xiff.data:XMLStanza/getField' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Convinience method for getting element value from the XML.
		 		 <p>Might seem over complex, but AS3 seems to handle different kind of
		 XML differently, thus shorthands and even methods such as <code>localName()</code>
		 do not work as expected.</p>
		 		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='removeFields' fullname='org.igniterealtime.xiff.data:XMLStanza/removeFields' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Helper method for removing all child elements that have the given name.
		 ]]></description>
</method>
<method name='setAttribute' fullname='org.igniterealtime.xiff.data:XMLStanza/setAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name;value' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Convinience method for setting a value to a element in the XML.
		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[value
		 ]]></param>
</method>
<method name='setChildAttribute' fullname='org.igniterealtime.xiff.data:XMLStanza/setChildAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='elem;name;value' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Convinience method for setting an attribute for a child element of the XML.
		 		 <p>In case the child element does not exist, it will be created.</p>
		 		 ]]></description>
<param><![CDATA[elem
		 ]]></param>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[value
		 ]]></param>
</method>
<method name='setChildField' fullname='org.igniterealtime.xiff.data:XMLStanza/setChildField' isStatic='false' isFinal='false' isOverride='false'  param_names='elem;name;value' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Convinience method for setting a value for a child element of the XML.
		 		 ]]></description>
<param><![CDATA[elem
		 ]]></param>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[value
		 ]]></param>
</method>
<method name='setField' fullname='org.igniterealtime.xiff.data:XMLStanza/setField' isStatic='false' isFinal='false' isOverride='false'  param_names='name;value' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Convinience method for setting a value to a element in the XML.
		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[value
		 ]]></param>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.data:XMLStanza/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Converts the base stanza XML to a string.
		 		 ]]></description>
<return><![CDATA[The base XML in string form, as in <code>toXMLString()</code>
		 ]]></return>
</method>
<field name='DEFAULT_NS' fullname='org.igniterealtime.xiff.data:XMLStanza/DEFAULT_NS' type='Namespace' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[
		 Default XML namespace. Must define in AS3.
		 ]]></description>
<see><![CDATA[http://www.w3.org/XML/1998/namespace
		 ]]></see>
</field>
<field name='FLASH_NS' fullname='org.igniterealtime.xiff.data:XMLStanza/FLASH_NS' type='Namespace' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[
		 ]]></description>
<see><![CDATA[http://www.jabber.com/streams/flash
		 ]]></see>
</field>
<field name='STREAM_NS' fullname='org.igniterealtime.xiff.data:XMLStanza/STREAM_NS' type='Namespace' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[
		 ]]></description>
<see><![CDATA[http://xmpp.org/protocols/streams/
		 ]]></see>
</field>
<interfaceRec name='IIQ' fullname='org.igniterealtime.xiff.data:IIQ' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IIQ.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='org.igniterealtime.xiff.data:IXMPPStanza' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Interface for IQ
	 ]]></description>
</interfaceRec>
<method name='callback' fullname='org.igniterealtime.xiff.data:IIQ/org.igniterealtime.xiff.data:IIQ:callback/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
</method>
<method name='errorCallback' fullname='org.igniterealtime.xiff.data:IIQ/org.igniterealtime.xiff.data:IIQ:errorCallback/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
</method>
<method name='callback' fullname='org.igniterealtime.xiff.data:IIQ/org.igniterealtime.xiff.data:IIQ:callback/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='errorCallback' fullname='org.igniterealtime.xiff.data:IIQ/org.igniterealtime.xiff.data:IIQ:errorCallback/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IMessage' fullname='org.igniterealtime.xiff.data:IMessage' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IMessage.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='org.igniterealtime.xiff.data:IXMPPStanza' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Interface for Message
	 ]]></description>
</interfaceRec>
<method name='body' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:body/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='htmlBody' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:htmlBody/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='state' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:state/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:subject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='thread' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:thread/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='time' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:time/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='body' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:body/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='htmlBody' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:htmlBody/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='state' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:state/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:subject/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='thread' fullname='org.igniterealtime.xiff.data:IMessage/org.igniterealtime.xiff.data:IMessage:thread/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IPresence' fullname='org.igniterealtime.xiff.data:IPresence' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IPresence.as' namespace='org.igniterealtime.xiff.data' access='public' baseClasses='org.igniterealtime.xiff.data:IXMPPStanza' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Interface for Presence
	 ]]></description>
</interfaceRec>
<method name='priority' fullname='org.igniterealtime.xiff.data:IPresence/org.igniterealtime.xiff.data:IPresence:priority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data:IPresence/org.igniterealtime.xiff.data:IPresence:show/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data:IPresence/org.igniterealtime.xiff.data:IPresence:status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='time' fullname='org.igniterealtime.xiff.data:IPresence/org.igniterealtime.xiff.data:IPresence:time/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='priority' fullname='org.igniterealtime.xiff.data:IPresence/org.igniterealtime.xiff.data:IPresence:priority/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data:IPresence/org.igniterealtime.xiff.data:IPresence:show/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data:IPresence/org.igniterealtime.xiff.data:IPresence:status/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='XMPPStanza' fullname='org.igniterealtime.xiff.data:XMPPStanza' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\XMPPStanza.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:IXMPPStanza' isFinal='false' isDynamic='true' >
<description><![CDATA[
	 The base class for all XMPP stanza data classes.
	 	 <p>Three types can exist:</p>
	 <ul>
	 <li>message</li>
	 <li>presence</li>
	 <li>iq</li>
	 </ul>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/rfcs/rfc3920.html#stanzas
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-9
	 ]]></see>
</classRec>
<method name='XMPPStanza' fullname='org.igniterealtime.xiff.data:XMPPStanza/XMPPStanza' isStatic='false' isFinal='false' isOverride='false'  param_names='recipient;sender;theType;theID;nodeName' param_types='org.igniterealtime.xiff.core:EscapedJID;org.igniterealtime.xiff.core:EscapedJID;String;String;String' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[
		 The following four first attributes are common to message, presence, and IQ stanzas.
		 The fifth, xml:lang, is not included here.
		 		 <p>RFC 3920: 9.  XML Stanzas</p>
		 		 <p>After TLS negotiation (Section 5) if desired, SASL negotiation
		 (Section 6), and Resource Binding (Section 7) if necessary, XML
		 stanzas can be sent over the streams.  Three kinds of XML stanza are
		 defined for the 'jabber:client' and 'jabber:server' namespaces:
		 &gt;message/&lt;, &gt;presence/&lt;, and &gt;iq/&lt;.  In addition, there are five
		 common attributes for these kinds of stanza.  These common
		 attributes, as well as the basic semantics of the three stanza kinds,
		 are defined herein; more detailed information regarding the syntax of
		 XML stanzas in relation to instant messaging and presence
		 applications is provided in [XMPP-IM].</p>
		 		 <pre>
		           |  initiating to receiving  |  receiving to initiating
		  ---------+---------------------------+-----------------------
		  to       |  hostname of receiver     |  silently ignored
		  from     |  silently ignored         |  hostname of receiver
		  id       |  silently ignored         |  session key
		  xml:lang |  default language         |  default language
		  version  |  signals XMPP 1.0 support |  signals XMPP 1.0 support
		 </pre>
		 		 ]]></description>
<param><![CDATA[recipient	to
		 ]]></param>
<param><![CDATA[sender		from
		 ]]></param>
<param><![CDATA[theType		type
		 ]]></param>
<param><![CDATA[theID		id
		 ]]></param>
<param><![CDATA[nodeName	One of the four ELEMENT_constants
		 		 ]]></param>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-9
		 ]]></see>
</method>
<method name='generateID' fullname='org.igniterealtime.xiff.data:XMPPStanza/generateID' isStatic='true' isFinal='false' isOverride='false'  param_names='prefix' param_types='String' param_defaults='null' result_type='String'>
<description><![CDATA[
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 ]]></description>
<param><![CDATA[prefix The prefix for the ID to be generated
		 ]]></param>
<return><![CDATA[The generated ID
		 ]]></return>
</method>
<method name='delayedDelivery' fullname='org.igniterealtime.xiff.data:XMPPStanza/protected:delayedDelivery/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
<description><![CDATA[
		 Time of the message/presence in case of a delay. Used only for messages
		 which were sent while user was offline.
		 		 <p>Can be set only via XML as the value should come from the server.</p>
		 		 <p>There are two ways that might be possible coming from the server,
		 XEP-0203 or XEP-0091, of which the latter is legacy.</p>
		 		 <p>XEP-0203: <code>CCYY-MM-DDThh:mm:ss[.sss]TZD</code></p>
		 <p>XEP-0091: <code>CCYYMMDDThh:mm:ss</code></p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0203.html
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0091.html
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0082.html
		 ]]></see>
</method>
<method name='errorCode' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 The error code, assuming this stanza contains error information. Error codes are
		 deprecated in standard XMPP, but they are commonly used by older Jabber servers
		 like Jabberd 1.4.
		 		 <p>Use <code>NaN</code> to remove.</p>
		 		 <p>See the link for XEP-0086: Error Condition Mappings</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0086.html
		 ]]></see>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorCondition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The error condition, assuming this stanza contains error information.
		 		 <p>Use <code>null</code> to remove.</p>
		 		 <p>Error condition should be in lowercase and not contain any whitespace.</p>
		 		 <p>Error element must be qualified by urn:ietf:params:xml:ns:xmpp-stanzas namespace.</p>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-9.3.3
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0182.html
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0086.html
		 		 TODO: Conform spec... find examples
		 ]]></see>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorMessage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The error message, assuming this stanza contains error information.
		 		 <p>Use <code>null</code> to remove.</p>
		 		 <p>This is the <strong>text</strong> element that is a child
		 of <strong>error</strong> element.</p>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-9.3
		 ]]></see>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The error type, assuming this stanza contains error information.
		 		 <p>Use <code>null</code> to remove.</p>
		 		 <p>The value of the <strong>error</strong> element's 'type' attribute
		 MUST be one of the following:</p>
		 <ul>
		 <li>cancel -- do not retry (the error is unrecoverable)</li>
		 <li>continue -- proceed (the condition was only a warning)</li>
		 <li>modify -- retry after changing the data sent</li>
		 <li>auth -- retry after providing credentials</li>
		 <li>wait -- retry after waiting (the error is temporary)</li>
		 </ul>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-9.3
		 ]]></see>
</method>
<method name='from' fullname='org.igniterealtime.xiff.data:XMPPStanza/from/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The JID of the sender. Most, if not all, server implementations follow the specifications
		 that prevent this from being falsified. Thus, under normal circumstances, you don't
		 need to supply this information because the server will fill it in automatically.
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='idGenerator' fullname='org.igniterealtime.xiff.data:XMPPStanza/idGenerator/get' isStatic='true' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.id:IIDGenerator'>
<description><![CDATA[
		 The ID generator for this stanza type.
		 		 <p>ID generators must implement
		 the IIDGenerator interface. The XIFF library comes with a few default
		 ID generators that have already been implemented (see org.igniterealtime.xiff.data.id..</p>
		 		 <p>Setting the ID generator by stanza type is useful if you'd like to use
		 different ID generation schemes for each type. For instance, messages could
		 use the incremental ID generation scheme provided by the IncrementalGenerator class, while
		 IQs could use the shared object ID generation scheme provided by the SOIncrementalGenerator class.</p>
		 		 ]]></description>
<example><![CDATA[The following sets the ID generator for the Message stanza type to an IncrementalGenerator
		 found in org.igniterealtime.xiff.data.id.IncrementalGenerator:
		 <pre>Message.idGenerator = new IncrementalGenerator();</pre>
		 ]]></example>
<see><![CDATA[org.igniterealtime.xiff.data.id.IIDGenerator
		 ]]></see>
</method>
<method name='id' fullname='org.igniterealtime.xiff.data:XMPPStanza/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The unique identifier of this stanza. ID generation is accomplished using
		 the static <code>generateID</code> method of the particular stanza type.
		 		 <p>RFC: The optional 'id' attribute MAY be used by a sending entity for
		 internal tracking of stanzas that it sends and receives (especially
		 for tracking the request-response interaction inherent in the
		 semantics of IQ stanzas).  It is OPTIONAL for the value of the 'id'
		 attribute to be unique globally, within a domain, or within a stream.
		 The semantics of IQ stanzas impose additional restrictions; see IQ
		 Semantics (Section 9.2.3).</p>
		 		 <p>Use <code>null</code> to remove.</p>
		 		 ]]></description>
<see><![CDATA[#generateID
		 ]]></see>
</method>
<method name='to' fullname='org.igniterealtime.xiff.data:XMPPStanza/to/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The JID of the recipient.
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data:XMPPStanza/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The stanza type. There are MANY types available, depending on what kind of stanza this is.
		 		 <p>The XIFF Library defines the types for IQ, Presence, and Message in each respective class
		 as static string variables. Below is a listing of each:</p>
		 		 <b>IQ</b>
		 <ul>
		 <li>IQ.TYPE_ERROR</li>
		 <li>IQ.TYPE_GET</li>
		 <li>IQ.TYPE_RESULT</li>
		 <li>IQ.TYPE_SET</li>
		 </ul>
		 		 <b>Presence</b>
		 <ul>
		 <li>Presence.TYPE_ERROR</li>
		 <li>Presence.TYPE_PROBE</li>
		 <li>Presence.TYPE_SUBSCRIBE</li>
		 <li>Presence.TYPE_SUBSCRIBED</li>
		 <li>Presence.TYPE_UNAVAILABLE</li>
		 <li>Presence.TYPE_UNSUBSCRIBE</li>
		 <li>Presence.TYPE_UNSUBSCRIBED</li>
		 </ul>
		 		 <b>Message</b>
		 <ul>
		 <li>Message.TYPE_CHAT</li>
		 <li>Message.TYPE_ERROR</li>
		 <li>Message.TYPE_GROUPCHAT</li>
		 <li>Message.TYPE_HEADLINE</li>
		 <li>Message.TYPE_NORMAL</li>
		 </ul>
		 		 <p>Use <code>null</code> to remove.</p>
		 		 <p>RFC: The 'type' attribute specifies detailed information about the purpose
		 or context of the message, presence, or IQ stanza.  The particular
		 allowable values for the 'type' attribute vary depending on whether
		 the stanza is a message, presence, or IQ; the values for message and
		 presence stanzas are specific to instant messaging and presence
		 applications and therefore are defined in [XMPP-IM], whereas the
		 values for IQ stanzas specify the role of an IQ stanza in a
		 structured request-response "conversation" and thus are defined under
		 IQ Semantics (Section 9.2.3) below.  The only 'type' value common to
		 all three stanzas is "error"; see Stanza Errors (Section 9.3).</p>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-9.2.3
		 ]]></see>
</method>
<method name='errorCode' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorCode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorCondition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorMessage/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.data:XMPPStanza/errorType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='from' fullname='org.igniterealtime.xiff.data:XMPPStanza/from/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='idGenerator' fullname='org.igniterealtime.xiff.data:XMPPStanza/idGenerator/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data.id:IIDGenerator' param_defaults='undefined' result_type='void'>
</method>
<method name='id' fullname='org.igniterealtime.xiff.data:XMPPStanza/id/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='to' fullname='org.igniterealtime.xiff.data:XMPPStanza/to/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data:XMPPStanza/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data:XMPPStanza/xml/set' isStatic='false' isFinal='false' isOverride='true'  param_names='elem' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 In addition to saving the XML, check for possible Extensions that are registered for listening this XML data.
		 ]]></description>
</method>
<field name='CLIENT_NAMESPACE' fullname='org.igniterealtime.xiff.data:XMPPStanza/CLIENT_NAMESPACE' type='String' isStatic='true' isConst='true' defaultValue='jabber:client' >
</field>
<field name='CLIENT_VERSION' fullname='org.igniterealtime.xiff.data:XMPPStanza/CLIENT_VERSION' type='String' isStatic='true' isConst='true' defaultValue='1.0' >
<description><![CDATA[
		 The version of XMPP specified in RFC 3920 is "1.0"; in particular, this
		 encapsulates the stream-related protocols (Use of TLS (Section 5),
		 Use of SASL (Section 6), and Stream Errors (Section 4.7)), as well as
		 the semantics of the three defined XML stanza types (<strong>message</strong>,
		 <strong>presence</strong>, and <strong>iq</strong>).
		 ]]></description>
</field>
<field name='ELEMENT_IQ' fullname='org.igniterealtime.xiff.data:XMPPStanza/ELEMENT_IQ' type='String' isStatic='true' isConst='true' defaultValue='iq' >
</field>
<field name='ELEMENT_MESSAGE' fullname='org.igniterealtime.xiff.data:XMPPStanza/ELEMENT_MESSAGE' type='String' isStatic='true' isConst='true' defaultValue='message' >
</field>
<field name='ELEMENT_PRESENCE' fullname='org.igniterealtime.xiff.data:XMPPStanza/ELEMENT_PRESENCE' type='String' isStatic='true' isConst='true' defaultValue='presence' >
</field>
<field name='ELEMENT_TEMP' fullname='org.igniterealtime.xiff.data:XMPPStanza/ELEMENT_TEMP' type='String' isStatic='true' isConst='true' defaultValue='temp' >
<description><![CDATA[
		 Internal name in XIFF for incoming data.
		 The proper element name should be available after setting the XML.
		 ]]></description>
</field>
<field name='ERROR_AUTH' fullname='org.igniterealtime.xiff.data:XMPPStanza/ERROR_AUTH' type='String' isStatic='true' isConst='true' defaultValue='auth' >
<description><![CDATA[
		 Retry after providing credentials
		 ]]></description>
</field>
<field name='ERROR_CANCEL' fullname='org.igniterealtime.xiff.data:XMPPStanza/ERROR_CANCEL' type='String' isStatic='true' isConst='true' defaultValue='cancel' >
<description><![CDATA[
		 Do not retry (the error is unrecoverable)
		 ]]></description>
</field>
<field name='ERROR_CONTINUE' fullname='org.igniterealtime.xiff.data:XMPPStanza/ERROR_CONTINUE' type='String' isStatic='true' isConst='true' defaultValue='continue' >
<description><![CDATA[
		 Proceed (the condition was only a warning)
		 ]]></description>
</field>
<field name='ERROR_MODIFY' fullname='org.igniterealtime.xiff.data:XMPPStanza/ERROR_MODIFY' type='String' isStatic='true' isConst='true' defaultValue='modify' >
<description><![CDATA[
		 Retry after changing the data sent
		 ]]></description>
</field>
<field name='ERROR_WAIT' fullname='org.igniterealtime.xiff.data:XMPPStanza/ERROR_WAIT' type='String' isStatic='true' isConst='true' defaultValue='wait' >
<description><![CDATA[
		 Retry after waiting (the error is temporary)
		 ]]></description>
</field>
<field name='NAMESPACE_BOSH' fullname='org.igniterealtime.xiff.data:XMPPStanza/NAMESPACE_BOSH' type='String' isStatic='true' isConst='true' defaultValue='urn:xmpp:xbosh' >
</field>
<field name='NAMESPACE_FLASH' fullname='org.igniterealtime.xiff.data:XMPPStanza/NAMESPACE_FLASH' type='String' isStatic='true' isConst='true' defaultValue='http://www.jabber.com/streams/flash' >
</field>
<field name='NAMESPACE_STREAM' fullname='org.igniterealtime.xiff.data:XMPPStanza/NAMESPACE_STREAM' type='String' isStatic='true' isConst='true' defaultValue='http://etherx.jabber.org/streams' >
</field>
<field name='XML_LANG' fullname='org.igniterealtime.xiff.data:XMPPStanza/XML_LANG' type='String' isStatic='true' isConst='true' defaultValue='en' >
</field>
<field name='_idGenerator' fullname='org.igniterealtime.xiff.data:XMPPStanza/private:_idGenerator' type='org.igniterealtime.xiff.data.id:IIDGenerator' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='Extension' fullname='org.igniterealtime.xiff.data:Extension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\Extension.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This is a base class for all data extensions.
	 ]]></description>
<see><![CDATA[http://xmpp.org/registrar/namespaces.html
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/
	 ]]></see>
</classRec>
<method name='Extension' fullname='org.igniterealtime.xiff.data:Extension/Extension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent The parent node that this extension should be appended to
		 ]]></param>
</method>
<method name='remove' fullname='org.igniterealtime.xiff.data:Extension/remove' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Removes the extension from its parent.
		 ]]></description>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data:Extension/xml/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Override in order to take care of setting the Namespace and
		 checking for containing extensions.
		 ]]></description>
</method>
<classRec name='IQ' fullname='org.igniterealtime.xiff.data:IQ' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\IQ.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='org.igniterealtime.xiff.data:XMPPStanza' interfaces='org.igniterealtime.xiff.data:IIQ' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A class for abstraction and encapsulation of IQ (info-query) data.
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-9.2.3
	 ]]></see>
</classRec>
<method name='IQ' fullname='org.igniterealtime.xiff.data:IQ/IQ' isStatic='false' isFinal='false' isOverride='false'  param_names='recipient;iqType;iqID;iqCallback;iqErrorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;String;String;Function;Function' param_defaults='null;null;null;null;null' result_type='*'>
<description><![CDATA[
		 A class for abstraction and encapsulation of IQ (info-query) data.
		 		 <p>Info/Query, or <strong>IQ</strong>, is a request-response mechanism, similar in some
		 ways to [HTTP].  The semantics of IQ enable an entity to make a
		 request of, and receive a response from, another entity.  The data
		 content of the request and response is defined by the namespace
		 declaration of a direct child element of the IQ element, and the
		 interaction is tracked by the requesting entity through use of the
		 'id' attribute.  Thus, IQ interactions follow a common pattern of
		 structured data exchange such as get/result or set/result (although
		 an error may be returned in reply to a request if appropriate):</p>
		 <pre>
		    Requesting                 Responding
		      Entity                     Entity
		    ----------                 ----------
		        |                           |
		        | &lt;iq type='get' id='1'&gt;    |
		        | ------------------------&gt; |
		        |                           |
		        | &lt;iq type='result' id='1'&gt; |
		        | &lt;------------------------ |
		        |                           |
		        | &lt;iq type='set' id='2'&gt;    |
		        | ------------------------&gt; |
		        |                           |
		        | &lt;iq type='error' id='2'&gt;  |
		        | &lt;------------------------ |
		        |                           |
	     </pre>
		 		 ]]></description>
<param><![CDATA[recipient The JID of the IQ recipient
		 ]]></param>
<param><![CDATA[iqType The type of the IQ - there are static variables declared for each type
		 ]]></param>
<param><![CDATA[iqID The unique ID of the IQ, one of TYPE_constants
		 ]]></param>
<param><![CDATA[iqCallback The function to be called when the server responds to the IQ
		 ]]></param>
<param><![CDATA[iqErrorCallback The function to be called when there is an error
		 ]]></param>
</method>
<method name='generateID' fullname='org.igniterealtime.xiff.data:IQ/generateID' isStatic='true' isFinal='false' isOverride='false'  param_names='prefix' param_types='String' param_defaults='null' result_type='String'>
<description><![CDATA[
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 ]]></description>
<param><![CDATA[prefix The prefix for the ID to be generated
		 ]]></param>
<return><![CDATA[The generated ID
		 ]]></return>
</method>
<method name='callback' fullname='org.igniterealtime.xiff.data:IQ/callback/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[
		 The function that will be called when an IQ result
		 is received with the same ID as one you send.
		 		 <p>Callback functions take one parameter which will be the IQ instance
		 received from the server.</p>
		 		 <p>This isn't a required property, but is useful if you
		 need to respond to server responses to an IQ.</p>
		 ]]></description>
</method>
<method name='errorCallback' fullname='org.igniterealtime.xiff.data:IQ/errorCallback/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[
		 The function that will be called when an IQ error
		 is received with the same ID as one you send.
		 		 <p>Callback functions take one parameter which will be the IQ instance
		 received from the server.</p>
		 		 <p>This isn't a required property, but is useful if you
		 need to respond to server responses to an IQ.</p>
		 ]]></description>
</method>
<method name='idGenerator' fullname='org.igniterealtime.xiff.data:IQ/idGenerator/get' isStatic='true' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.id:IIDGenerator'>
<description><![CDATA[
		 The ID generator for this stanza type. ID generators must implement
		 the IIDGenerator interface. The XIFF library comes with a few default
		 ID generators that have already been implemented (see org.igniterealtime.xiff.data.id..
		 		 Setting the ID generator by stanza type is useful if you'd like to use
		 different ID generation schemes for each type. For instance, messages could
		 use the incremental ID generation scheme provided by the IncrementalGenerator class, while
		 IQs could use the shared object ID generation scheme provided by the SOIncrementalGenerator class.
		 		 ]]></description>
<example><![CDATA[The following sets the ID generator for the Message stanza type to an IncrementalGenerator
		 found in org.igniterealtime.xiff.data.id.IncrementalGenerator:
		 <pre>Message.idGenerator = new IncrementalGenerator();</pre>
		 ]]></example>
<param><![CDATA[generator The ID generator class
		 ]]></param>
</method>
<method name='callback' fullname='org.igniterealtime.xiff.data:IQ/callback/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='errorCallback' fullname='org.igniterealtime.xiff.data:IQ/errorCallback/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='idGenerator' fullname='org.igniterealtime.xiff.data:IQ/idGenerator/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data.id:IIDGenerator' param_defaults='undefined' result_type='void'>
</method>
<field name='TYPE_ERROR' fullname='org.igniterealtime.xiff.data:IQ/TYPE_ERROR' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[
		 The stanza reports an error that has occurred
		 regarding processing or delivery of a previously-sent get or
		 set request.
		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/draft-ietf-xmpp-3920bis-00#section-9.3
		 ]]></see>
</field>
<field name='TYPE_GET' fullname='org.igniterealtime.xiff.data:IQ/TYPE_GET' type='String' isStatic='true' isConst='true' defaultValue='get' >
<description><![CDATA[
		 The stanza requests information, inquires about what
		 data is needed in order to complete further operations, etc.
		 ]]></description>
</field>
<field name='TYPE_RESULT' fullname='org.igniterealtime.xiff.data:IQ/TYPE_RESULT' type='String' isStatic='true' isConst='true' defaultValue='result' >
<description><![CDATA[
		 The stanza is a response to a successful get or set request.
		 ]]></description>
</field>
<field name='TYPE_SET' fullname='org.igniterealtime.xiff.data:IQ/TYPE_SET' type='String' isStatic='true' isConst='true' defaultValue='set' >
<description><![CDATA[
		 The stanza provides data that is needed for an
		 operation to be completed, sets new values, replaces existing
		 values, etc.
		 ]]></description>
</field>
<field name='_callback' fullname='org.igniterealtime.xiff.data:IQ/private:_callback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_errorCallback' fullname='org.igniterealtime.xiff.data:IQ/private:_errorCallback' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_idGenerator' fullname='org.igniterealtime.xiff.data:IQ/private:_idGenerator' type='org.igniterealtime.xiff.data.id:IIDGenerator' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='Message' fullname='org.igniterealtime.xiff.data:Message' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\Message.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='org.igniterealtime.xiff.data:XMPPStanza' interfaces='org.igniterealtime.xiff.data:IMessage' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Message, nuff said.
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3921#section-2.1.1
	 ]]></see>
</classRec>
<method name='Message' fullname='org.igniterealtime.xiff.data:Message/Message' isStatic='false' isFinal='false' isOverride='false'  param_names='recipient;msgID;msgBody;msgHTMLBody;msgType;msgSubject;chatState' param_types='org.igniterealtime.xiff.core:EscapedJID;String;String;String;String;String;String' param_defaults='null;null;null;null;null;null;null' result_type='*'>
<description><![CDATA[
		 A class for abstraction and encapsulation of message data.
		 		 <p>The <strong>message</strong> stanza kind can be seen as a "push" mechanism whereby
		 one entity pushes information to another entity, similar to the
		 communications that occur in a system such as email.  All message
		 stanzas SHOULD possess a 'to' attribute that specifies the intended
		 recipient of the message; upon receiving such a stanza, a server
		 SHOULD route or deliver it to the intended recipient (see Server
		 Rules for Handling XML Stanzas (Section 10) for general routing and
		 delivery rules related to XML stanzas).</p>
		 		 ]]></description>
<param><![CDATA[recipient The JID of the message recipient
		 ]]></param>
<param><![CDATA[sender The JID of the message sender - the server should report an error if this is falsified
		 ]]></param>
<param><![CDATA[msgID The message ID
		 ]]></param>
<param><![CDATA[msgBody The message body in plain-text format
		 ]]></param>
<param><![CDATA[msgHTMLBody The message body in XHTML format
		 ]]></param>
<param><![CDATA[msgType The message type
		 ]]></param>
<param><![CDATA[msgSubject (Optional) The message subject
		 ]]></param>
<param><![CDATA[chatState (Optional) The chat state
		 ]]></param>
</method>
<method name='generateID' fullname='org.igniterealtime.xiff.data:Message/generateID' isStatic='true' isFinal='false' isOverride='false'  param_names='prefix' param_types='String' param_defaults='null' result_type='String'>
<description><![CDATA[
		 Generates a unique ID for the stanza. ID generation is handled using
		 a variety of mechanisms, but the default for the library uses the IncrementalGenerator.
		 		 ]]></description>
<param><![CDATA[prefix The prefix for the ID to be generated
		 ]]></param>
<return><![CDATA[The generated ID
		 ]]></return>
</method>
<method name='attention' fullname='org.igniterealtime.xiff.data:Message/attention/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Messages containing an attention extension SHOULD use the headline message
		 type to avoid offline storage. In case the <code>attention</code> property is used,
		 <code>type</code> is set to "headline" automatically.
		 		 <p>However there is no check for the type when removing the attention, by setting it to false.</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0224.html
		 ]]></see>
</method>
<method name='body' fullname='org.igniterealtime.xiff.data:Message/body/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The message body in plain-text format. If a client cannot render HTML-formatted
		 text, this text is typically used instead.
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='correctionId' fullname='org.igniterealtime.xiff.data:Message/correctionId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Message ID of the message that is to be corrected.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0308.html
		 ]]></see>
</method>
<method name='correction' fullname='org.igniterealtime.xiff.data:Message/correction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 When sending a message, people often introduce typing errors and send a follow-up message to correct them.
		 This property allows the sending client to flag the second message as correcting the first.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0308.html
		 ]]></see>
</method>
<method name='htmlBody' fullname='org.igniterealtime.xiff.data:Message/htmlBody/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The message body in XHTML format. Internally, this uses the XHTML data extension.
		 		 TODO: Use extension registery to solve if the proper extension is enabled...
		 		 <p>Use <code>null</code> to remove.</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0071.html
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.xhtml.XHTMLExtension
		 ]]></see>
</method>
<method name='idGenerator' fullname='org.igniterealtime.xiff.data:Message/idGenerator/get' isStatic='true' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.id:IIDGenerator'>
<description><![CDATA[
		 The ID generator for this stanza type. ID generators must implement
		 the IIDGenerator interface. The XIFF library comes with a few default
		 ID generators that have already been implemented (see org.igniterealtime.xiff.data.id..
		 		 Setting the ID generator by stanza type is useful if you'd like to use
		 different ID generation schemes for each type. For instance, messages could
		 use the incremental ID generation scheme provided by the IncrementalGenerator class, while
		 IQs could use the shared object ID generation scheme provided by the SOIncrementalGenerator class.
		 		 ]]></description>
<example><![CDATA[The following sets the ID generator for the Message stanza type to an IncrementalGenerator
		 found in org.igniterealtime.xiff.data.id.IncrementalGenerator:
		 <pre>Message.idGenerator = new IncrementalGenerator();</pre>
		 ]]></example>
<param><![CDATA[generator The ID generator class
		 ]]></param>
</method>
<method name='receiptId' fullname='org.igniterealtime.xiff.data:Message/receiptId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Message ID of the message that had receipt request.
		 Can be set only when the 'receipt' is Message.RECEIPT_RECEIVED.
		 		 <p>While sending 'received', this property must be set to
		 the message id that contained the 'request'.</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0184.html
		 ]]></see>
</method>
<method name='receipt' fullname='org.igniterealtime.xiff.data:Message/receipt/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 XEP-0184: Message Delivery Receipts
		 		 <p>This XMPP protocol extension for message delivery receipts,
		 whereby the sender of a message can request notification that the
		 message has been delivered to a client controlled by the intended
		 recipient.</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0184.html
		 ]]></see>
</method>
<method name='state' fullname='org.igniterealtime.xiff.data:Message/state/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The chat state if any. Possible values are:
		 <ul>
		 <li>Message.STATE_ACTIVE</li>
		 <li>Message.STATE_COMPOSING</li>
		 <li>Message.STATE_PAUSED</li>
		 <li>Message.STATE_INACTIVE</li>
		 <li>Message.STATE_GONE</li>
		 </ul>
		 <p>Use <code>null</code> to remove.</p>
		 		 <p>TODO: XEP states that this protocol SHOULD NOT be used
		 with message types other than "chat" or "groupchat".</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0085.html
		 ]]></see>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.data:Message/subject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The message subject. Typically chat and groupchat-type messages do not use
		 subjects. Rather, this is reserved for normal and headline-type messages.
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='thread' fullname='org.igniterealtime.xiff.data:Message/thread/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The message thread ID. Threading is used to group messages of the same discussion together.
		 The library does not perform message grouping, rather it is up to any client authors to
		 properly perform this task.
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='time' fullname='org.igniterealtime.xiff.data:Message/time/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
<description><![CDATA[
		 Time of the message in case of a delay. Used only for messages
		 which were sent while user was offline.
		 		 <p>Can be set only via XML as the value should come from the server.</p>
		 		 <p>There are two ways that might be possible coming from the server,
		 XEP-0203 or XEP-0091, of which the latter is legacy.</p>
		 		 <p>XEP-0203: <code>CCYY-MM-DDThh:mm:ss[.sss]TZD</code></p>
		 <p>XEP-0091: <code>CCYYMMDDThh:mm:ss</code></p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0203.html
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0091.html
		 ]]></see>
</method>
<method name='attention' fullname='org.igniterealtime.xiff.data:Message/attention/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='body' fullname='org.igniterealtime.xiff.data:Message/body/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='correctionId' fullname='org.igniterealtime.xiff.data:Message/correctionId/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='correction' fullname='org.igniterealtime.xiff.data:Message/correction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='htmlBody' fullname='org.igniterealtime.xiff.data:Message/htmlBody/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='idGenerator' fullname='org.igniterealtime.xiff.data:Message/idGenerator/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data.id:IIDGenerator' param_defaults='undefined' result_type='void'>
</method>
<method name='receiptId' fullname='org.igniterealtime.xiff.data:Message/receiptId/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='receipt' fullname='org.igniterealtime.xiff.data:Message/receipt/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='state' fullname='org.igniterealtime.xiff.data:Message/state/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.data:Message/subject/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='thread' fullname='org.igniterealtime.xiff.data:Message/thread/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='NS_ATTENTION' fullname='org.igniterealtime.xiff.data:Message/NS_ATTENTION' type='String' isStatic='true' isConst='true' defaultValue='urn:xmpp:attention:0' >
<description><![CDATA[
		 The namespace used in the message delivery node.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0224.html
		 ]]></see>
</field>
<field name='NS_CORRECTION' fullname='org.igniterealtime.xiff.data:Message/NS_CORRECTION' type='String' isStatic='true' isConst='true' defaultValue='urn:xmpp:message-correct:0' >
<description><![CDATA[
		 The namespace used in the XEP-0308: Last Message Correction.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0308.html
		 ]]></see>
</field>
<field name='NS_RECEIPT' fullname='org.igniterealtime.xiff.data:Message/NS_RECEIPT' type='String' isStatic='true' isConst='true' defaultValue='urn:xmpp:receipts' >
<description><![CDATA[
		 The namespace used in the message delivery node.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0184.html
		 ]]></see>
</field>
<field name='NS_STATE' fullname='org.igniterealtime.xiff.data:Message/NS_STATE' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/chatstates' >
<description><![CDATA[
		 The name space used in the Chat state node.
		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0085.html
		 ]]></see>
</field>
<field name='RECEIPT_RECEIVED' fullname='org.igniterealtime.xiff.data:Message/RECEIPT_RECEIVED' type='String' isStatic='true' isConst='true' defaultValue='received' >
<description><![CDATA[
		 Included by a receiving entity that wishes to inform the
		 sending entity that the message has been received.
		 		 <p>The <strong>received</strong> element SHOULD be the only child of
		 the <strong>message</strong> stanza and MUST mirror the 'id' of the sent message.</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0184.html
		 ]]></see>
</field>
<field name='RECEIPT_REQUEST' fullname='org.igniterealtime.xiff.data:Message/RECEIPT_REQUEST' type='String' isStatic='true' isConst='true' defaultValue='request' >
<description><![CDATA[
		 Included by a sending entity that wishes to know if
		 the message has been received.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0184.html
		 ]]></see>
</field>
<field name='STATE_ACTIVE' fullname='org.igniterealtime.xiff.data:Message/STATE_ACTIVE' type='String' isStatic='true' isConst='true' defaultValue='active' >
<description><![CDATA[
		 User is actively participating in the chat session.
		 ]]></description>
</field>
<field name='STATE_COMPOSING' fullname='org.igniterealtime.xiff.data:Message/STATE_COMPOSING' type='String' isStatic='true' isConst='true' defaultValue='composing' >
<description><![CDATA[
		 User is composing a message.
		 ]]></description>
</field>
<field name='STATE_GONE' fullname='org.igniterealtime.xiff.data:Message/STATE_GONE' type='String' isStatic='true' isConst='true' defaultValue='gone' >
<description><![CDATA[
		 User has effectively ended their participation in the chat session.
		 Suggested delay after last activity some 10 minutes.
		 ]]></description>
</field>
<field name='STATE_INACTIVE' fullname='org.igniterealtime.xiff.data:Message/STATE_INACTIVE' type='String' isStatic='true' isConst='true' defaultValue='inactive' >
<description><![CDATA[
		 User has not been actively participating in the chat session.
		 Suggested delay after last activity some 2 minutes.
		 ]]></description>
</field>
<field name='STATE_PAUSED' fullname='org.igniterealtime.xiff.data:Message/STATE_PAUSED' type='String' isStatic='true' isConst='true' defaultValue='paused' >
<description><![CDATA[
		 User had been composing but now has stopped.
		 Suggested delay after last activity some 30 seconds.
		 ]]></description>
</field>
<field name='TYPE_CHAT' fullname='org.igniterealtime.xiff.data:Message/TYPE_CHAT' type='String' isStatic='true' isConst='true' defaultValue='chat' >
<description><![CDATA[
		 The message is sent in the context of a one-to-one chat
		 session. Typically a receiving client will present message of
		 type "chat" in an interface that enables one-to-one chat between
		 the two parties, including an appropriate conversation history.
		 Detailed recommendations regarding one-to-one chat sessions are
		 provided under Section 5.1. of RFC 3921 (draft version).
		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/draft-ietf-xmpp-3921bis-00#section-5.1
		 ]]></see>
</field>
<field name='TYPE_ERROR' fullname='org.igniterealtime.xiff.data:Message/TYPE_ERROR' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[
		 The message is generated by an entity that experiences an
		 error in processing a message received from another entity (for
		 details regarding stanza error syntax, refer to [xmpp-core]).
		 A client that receives a message of type "error" SHOULD present an
		 appropriate interface informing the sender of the nature of the error.
		 ]]></description>
</field>
<field name='TYPE_GROUPCHAT' fullname='org.igniterealtime.xiff.data:Message/TYPE_GROUPCHAT' type='String' isStatic='true' isConst='true' defaultValue='groupchat' >
<description><![CDATA[
		 The message is sent in the context of a multi-user
		 chat environment (similar to that of [IRC]). Typically a
		 receiving client will present a message of type "groupchat" in an
		 interface that enables many-to-many chat between the parties,
		 including a roster of parties in the chatroom and an appropriate
		 conversation history. For detailed information about XMPP-based
		 groupchat, refer to [XEP-0045].
		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html
		 ]]></see>
</field>
<field name='TYPE_HEADLINE' fullname='org.igniterealtime.xiff.data:Message/TYPE_HEADLINE' type='String' isStatic='true' isConst='true' defaultValue='headline' >
<description><![CDATA[
		 The message provides an alert, a notification, or
		 other information to which no reply is expected (e.g., news
		 headlines, sports updates, near-real-time market data, and
		 syndicated content). Because no reply to the message is expected,
		 typically a receiving client will present a message of type
		 "headline" in an interface that appropriately differentiates the
		 message from standalone messages, chat messages, or groupchat
		 messages (e.g., by not providing the recipient with the ability to
		 reply). The receiving server SHOULD deliver the message to all of
		 the recipient’s available resources.
		 ]]></description>
</field>
<field name='TYPE_NORMAL' fullname='org.igniterealtime.xiff.data:Message/TYPE_NORMAL' type='String' isStatic='true' isConst='true' defaultValue='normal' >
<description><![CDATA[
		 The message is a standalone message that is sent outside
		 the context of a one-to-one conversation or groupchat, and to
		 which it is expected that the recipient will reply. Typically a
		 receiving client will present a message of type "normal" in an
		 interface that enables the recipient to reply, but without a
		 conversation history. The default value of the ’type’ attribute
		 is "normal".
		 ]]></description>
</field>
<field name='_idGenerator' fullname='org.igniterealtime.xiff.data:Message/private:_idGenerator' type='org.igniterealtime.xiff.data.id:IIDGenerator' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='Presence' fullname='org.igniterealtime.xiff.data:Presence' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\Presence.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='org.igniterealtime.xiff.data:XMPPStanza' interfaces='org.igniterealtime.xiff.data:IPresence' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides encapsulation for manipulation of presence data for sending and receiving.
	 	 <p>2.2.1.  Types of Presence</p>
	 	 <p>The 'type' attribute of a presence stanza is OPTIONAL.  A presence
	 stanza that does not possess a 'type' attribute is used to signal to
	 the server that the sender is online and available for communication.
	 If included, the 'type' attribute specifies a lack of availability, a
	 request to manage a subscription to another entity's presence, a
	 request for another entity's current presence, or an error related to
	 a previously-sent presence stanza.  If included, the 'type' attribute
	 MUST have one of the following values:</p>
	 <p>
	 o  unavailable -- Signals that the entity is no longer available for communication.<br />
	 o  subscribe -- The sender wishes to subscribe to the recipient's presence.<br />
	 o  subscribed -- The sender has allowed the recipient to receive their presence.<br />
	 o  unsubscribe -- The sender is unsubscribing from another entity's presence.<br />
	 o  unsubscribed -- The subscription request has been denied or a previously-granted subscription has been cancelled.<br />
	 o  probe -- A request for an entity's current presence; SHOULD be generated only by a server on behalf of a user.<br />
	 o  error -- An error has occurred regarding processing or delivery of a previously-sent presence stanza.</p>
	 	 <p>For detailed information regarding presence semantics and the
	 subscription model used in the context of XMPP-based instant
	 messaging and presence applications, refer to Exchanging Presence
	 Information (Section 5) and Managing Subscriptions (Section 6).</p>

	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3921
	 ]]></see>
</classRec>
<method name='Presence' fullname='org.igniterealtime.xiff.data:Presence/Presence' isStatic='false' isFinal='false' isOverride='false'  param_names='recipient;sender;presenceType;showVal;statusVal;priorityVal' param_types='org.igniterealtime.xiff.core:EscapedJID;org.igniterealtime.xiff.core:EscapedJID;String;String;String;int' param_defaults='null;null;null;null;null;0' result_type='*'>
<description><![CDATA[
		 According to Google Talk developers via their presentation [somewhere few years ago],
		 most of the XMPP related traffic in their service is made by Presence.
		 		 <p>The <strong>presence</strong> element can be seen as a basic broadcast or
		 "publish-subscribe" mechanism, whereby multiple entities receive
		 information about an entity to which they have subscribed (in this
		 case, network availability information).  In general, a publishing
		 entity SHOULD send a presence stanza with no 'to' attribute, in which
		 case the server to which the entity is connected SHOULD broadcast or
		 multiplex that stanza to all subscribing entities.  However, a
		 publishing entity MAY also send a presence stanza with a 'to'
		 attribute, in which case the server SHOULD route or deliver that
		 stanza to the intended recipient.  See Server Rules for Handling XML
		 Stanzas (Section 10) for general routing and delivery rules related
		 to XML stanzas, and [XMPP-IM] for presence-specific rules in the
		 context of an instant messaging and presence application.</p>
		 		 ]]></description>
<param><![CDATA[recipient The recipient of the presence, usually in the form of a JID.
		 ]]></param>
<param><![CDATA[sender The sender of the presence, usually in the form of a JID.
		 ]]></param>
<param><![CDATA[presenceType The type of presence as a string. There are predefined static variables for
		 ]]></param>
<param><![CDATA[showVal What to show for this presence (away, online, etc.) There are predefined static variables for
		 ]]></param>
<param><![CDATA[statusVal The status; usually used for the "away message."
		 ]]></param>
<param><![CDATA[priorityVal The priority of this presence; usually on a scale of 1-5.
		 ]]></param>
</method>
<method name='priority' fullname='org.igniterealtime.xiff.data:Presence/priority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 The priority of the presence, usually on a scale of 1-5.
		 		 <p>RFC: "The value MUST be an integer between -128 and +127".</p>
		 <p>If no priority is provided,
		 a server SHOULD consider the priority to be zero.</p>
		 		 <p>Use <code>NaN</code> or <code>0</code> to remove.</p>
		 ]]></description>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data:Presence/show/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The show value; away, online, etc. There are predefined static variables in the Presence
		 class for this:
		 <ul>
		 <li>Presence.SHOW_AWAY</li>
		 <li>Presence.SHOW_CHAT</li>
		 <li>Presence.SHOW_DND</li>
		 <li>Presence.SHOW_XA</li>
		 </ul>
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data:Presence/status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The status; usually used for "away messages."
		 		 <p>The OPTIONAL status element contains XML character data specifying
		 a natural-language description of availability status.  It is
		 normally used in conjunction with the show element to provide a
		 detailed description of an availability state (e.g., "In a meeting").
		 The <strong>status</strong> element MUST NOT possess any attributes, with the
		 exception of the 'xml:lang' attribute.  Multiple instances of the
		 <strong>status</strong> element MAY be included but only if each instance possesses
		 an 'xml:lang' attribute with a distinct language value.</p>
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='time' fullname='org.igniterealtime.xiff.data:Presence/time/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
<description><![CDATA[
		 Time of the presence in case of a delay. Used only for messages
		 which were sent while user was offline.
		 		 <p>Can be set only via XML as the value should come from the server.</p>
		 		 <p>There are two ways that might be possible coming from the server,
		 XEP-0203 or XEP-0091, of which the latter is legacy.</p>
		 		 <p>XEP-0203: <code>CCYY-MM-DDThh:mm:ss[.sss]TZD</code></p>
		 <p>XEP-0091: <code>CCYYMMDDThh:mm:ss</code></p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0203.html
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0091.html
		 ]]></see>
</method>
<method name='priority' fullname='org.igniterealtime.xiff.data:Presence/priority/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data:Presence/show/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data:Presence/status/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='SHOW_AWAY' fullname='org.igniterealtime.xiff.data:Presence/SHOW_AWAY' type='String' isStatic='true' isConst='true' defaultValue='away' >
<description><![CDATA[
		 The entity or resource is temporarily away.
		 ]]></description>
</field>
<field name='SHOW_CHAT' fullname='org.igniterealtime.xiff.data:Presence/SHOW_CHAT' type='String' isStatic='true' isConst='true' defaultValue='chat' >
<description><![CDATA[
		 The entity or resource is actively interested in chatting.
		 ]]></description>
</field>
<field name='SHOW_DND' fullname='org.igniterealtime.xiff.data:Presence/SHOW_DND' type='String' isStatic='true' isConst='true' defaultValue='dnd' >
<description><![CDATA[
		 The entity or resource is busy (dnd = "Do Not Disturb").
		 ]]></description>
</field>
<field name='SHOW_XA' fullname='org.igniterealtime.xiff.data:Presence/SHOW_XA' type='String' isStatic='true' isConst='true' defaultValue='xa' >
<description><![CDATA[
		 The entity or resource is away for an extended period (xa = "eXtended Away").
		 ]]></description>
</field>
<field name='TYPE_ERROR' fullname='org.igniterealtime.xiff.data:Presence/TYPE_ERROR' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[
		 An error has occurred regarding processing of a
		 previously-sent presence stanza; if the presence stanza is of type
		 "error", it MUST include an error child element.
		 ]]></description>
</field>
<field name='TYPE_PROBE' fullname='org.igniterealtime.xiff.data:Presence/TYPE_PROBE' type='String' isStatic='true' isConst='true' defaultValue='probe' >
<description><![CDATA[
		 A request for an entity's current presence; SHOULD be
		 generated only by a server on behalf of a user.
		 ]]></description>
</field>
<field name='TYPE_SUBSCRIBED' fullname='org.igniterealtime.xiff.data:Presence/TYPE_SUBSCRIBED' type='String' isStatic='true' isConst='true' defaultValue='subscribed' >
<description><![CDATA[
		 The sender has allowed the recipient to receive their presence.
		 ]]></description>
</field>
<field name='TYPE_SUBSCRIBE' fullname='org.igniterealtime.xiff.data:Presence/TYPE_SUBSCRIBE' type='String' isStatic='true' isConst='true' defaultValue='subscribe' >
<description><![CDATA[
		 The sender wishes to subscribe to the recipient's
		 presence.
		 ]]></description>
</field>
<field name='TYPE_UNAVAILABLE' fullname='org.igniterealtime.xiff.data:Presence/TYPE_UNAVAILABLE' type='String' isStatic='true' isConst='true' defaultValue='unavailable' >
<description><![CDATA[
		 Signals that the entity is no longer available for communication.
		 ]]></description>
</field>
<field name='TYPE_UNSUBSCRIBED' fullname='org.igniterealtime.xiff.data:Presence/TYPE_UNSUBSCRIBED' type='String' isStatic='true' isConst='true' defaultValue='unsubscribed' >
<description><![CDATA[
		 The subscription request has been denied or a
		 previously-granted subscription has been cancelled.
		 ]]></description>
</field>
<field name='TYPE_UNSUBSCRIBE' fullname='org.igniterealtime.xiff.data:Presence/TYPE_UNSUBSCRIBE' type='String' isStatic='true' isConst='true' defaultValue='unsubscribe' >
<description><![CDATA[
		  The sender is unsubscribing from the receiver's presence.
		 ]]></description>
</field>
<classRec name='AbstractExtension' fullname='org.igniterealtime.xiff.data:AbstractExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\AbstractExtension.as' namespace='org.igniterealtime.xiff.data' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 What is this?
	 ]]></description>
</classRec>
<method name='AbstractExtension' fullname='org.igniterealtime.xiff.data:AbstractExtension/AbstractExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data:AbstractExtension/xml/set' isStatic='false' isFinal='false' isOverride='true'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<classRec name='SASLAuth' fullname='org.igniterealtime.xiff.auth:SASLAuth' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\SASLAuth.as' namespace='org.igniterealtime.xiff.auth' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This is a base class for use with Simple Authentication and Security Layer
	 (SASL) mechanisms. Sub-class this class when creating new SASL mechanisms.
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc4422
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-6
	 ]]></see>
<see><![CDATA[http://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer
	 ]]></see>
</classRec>
<method name='SASLAuth' fullname='org.igniterealtime.xiff.auth:SASLAuth/SASLAuth' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='handleChallenge' fullname='org.igniterealtime.xiff.auth:SASLAuth/handleChallenge' isStatic='false' isFinal='false' isOverride='false'  param_names='stage;challenge' param_types='int;XML' param_defaults='undefined;undefined' result_type='XML'>
<description><![CDATA[
		 Called when a challenge to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[challenge The XML of the actual authentication challenge.
		 		 ]]></param>
<return><![CDATA[The XML response to the challenge.
		 ]]></return>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:SASLAuth/handleResponse' isStatic='false' isFinal='false' isOverride='false'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[
		 Called when a response to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[response The XML of the actual authentication response.
		 		 ]]></param>
<return><![CDATA[An object specifying the current state of the authentication.
		 ]]></return>
</method>
<method name='request' fullname='org.igniterealtime.xiff.auth:SASLAuth/request/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
<description><![CDATA[
		 The XML for the authentication request.
		 ]]></description>
</method>
<field name='NS' fullname='org.igniterealtime.xiff.auth:SASLAuth/NS' type='String' isStatic='true' isConst='true' defaultValue='urn:ietf:params:xml:ns:xmpp-sasl' >
</field>
<field name='RESPONSE_SUCCESS' fullname='org.igniterealtime.xiff.auth:SASLAuth/RESPONSE_SUCCESS' type='String' isStatic='true' isConst='true' defaultValue='success' >
</field>
<field name='connection' fullname='org.igniterealtime.xiff.auth:SASLAuth/protected:connection' type='org.igniterealtime.xiff.core:IXMPPConnection' isStatic='false' isConst='false' >
<description><![CDATA[
		 Connection that is used to authenticate, if any
		 ]]></description>
</field>
<field name='req' fullname='org.igniterealtime.xiff.auth:SASLAuth/protected:req' type='XML' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 The XML of the authentication request.
		 ]]></description>
</field>
<field name='response' fullname='org.igniterealtime.xiff.auth:SASLAuth/protected:response' type='XML' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 The XML of the challenge response.
		 ]]></description>
</field>
<field name='stage' fullname='org.igniterealtime.xiff.auth:SASLAuth/protected:stage' type='int' isStatic='false' isConst='false' >
<description><![CDATA[
		 The current response stage.
		 ]]></description>
</field>
<interfaceRec name='ISASLAuth' fullname='org.igniterealtime.xiff.auth:ISASLAuth' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\ISASLAuth.as' namespace='org.igniterealtime.xiff.auth' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This is a base class for use with Simple Authentication and Security Layer
	 (SASL) mechanisms. Implement this class when creating new SASL mechanisms.
	 ]]></description>
</interfaceRec>
<method name='handleChallenge' fullname='org.igniterealtime.xiff.auth:ISASLAuth/org.igniterealtime.xiff.auth:ISASLAuth:handleChallenge' isStatic='false' isFinal='false' isOverride='false'  param_names='stage;challenge' param_types='int;XML' param_defaults='undefined;undefined' result_type='XML'>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:ISASLAuth/org.igniterealtime.xiff.auth:ISASLAuth:handleResponse' isStatic='false' isFinal='false' isOverride='false'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
</method>
<method name='request' fullname='org.igniterealtime.xiff.auth:ISASLAuth/org.igniterealtime.xiff.auth:ISASLAuth:request/get' isStatic='false' isFinal='false' isOverride='false'  result_type='XML'>
</method>
<classRec name='Anonymous' fullname='org.igniterealtime.xiff.auth:Anonymous' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\Anonymous.as' namespace='org.igniterealtime.xiff.auth' access='public' baseclass='org.igniterealtime.xiff.auth:SASLAuth' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides SASL authentication using the ANONYMOUS mechanism.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0175.html
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc4505
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-6
	 ]]></see>
</classRec>
<method name='Anonymous' fullname='org.igniterealtime.xiff.auth:Anonymous/Anonymous' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Creates a new Anonymous authentication object.
		 		 ]]></description>
<param><![CDATA[connection A reference to the XMPPConnection instance to use.
		 ]]></param>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:Anonymous/handleResponse' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[
		 Called when a response to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[response The XML of the actual authentication response.
		 		 ]]></param>
<return><![CDATA[An object specifying the current state of the authentication.
		 ]]></return>
</method>
<field name='MECHANISM' fullname='org.igniterealtime.xiff.auth:Anonymous/MECHANISM' type='String' isStatic='true' isConst='true' defaultValue='ANONYMOUS' >
</field>
<classRec name='DigestMD5' fullname='org.igniterealtime.xiff.auth:DigestMD5' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\DigestMD5.as' namespace='org.igniterealtime.xiff.auth' access='public' baseclass='org.igniterealtime.xiff.auth:SASLAuth' interfaces='org.igniterealtime.xiff.auth:ISASLAuth' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides SASL authentication using the DIGEST-MD5 mechanism, a HTTP Digest
	 compatible challenge-response scheme based upon MD5. DIGEST-MD5 offers a data security layer.
	 	 ]]></description>
<see><![CDATA[http://en.wikipedia.org/wiki/Digest_access_authentication
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc1321
	 ]]></see>
<see><![CDATA[http://www.ietf.org/rfc/rfc2831.txt
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-6
	 ]]></see>
</classRec>
<method name='DigestMD5' fullname='org.igniterealtime.xiff.auth:DigestMD5/DigestMD5' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		Creates a new External authentication object.
				]]></description>
<param><![CDATA[connection A reference to the XMPPConnection instance in use.
		]]></param>
</method>
<method name='convertToBase16String' fullname='org.igniterealtime.xiff.auth:DigestMD5/private:convertToBase16String' isStatic='false' isFinal='false' isOverride='false'  param_names='bytes' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='String'>
</method>
<method name='formatResponse' fullname='org.igniterealtime.xiff.auth:DigestMD5/private:formatResponse' isStatic='false' isFinal='false' isOverride='false'  param_names='map' param_types='flash.utils:Dictionary' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Construct the response as described by DIGEST-MD5 documentation.
		 ]]></description>
</method>
<method name='handleChallenge' fullname='org.igniterealtime.xiff.auth:DigestMD5/handleChallenge' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;challenge' param_types='int;XML' param_defaults='undefined;undefined' result_type='XML'>
<description><![CDATA[
		 Called when a challenge to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[challenge The XML of the actual authentication challenge.
		 		 ]]></param>
<return><![CDATA[The XML response to the challenge.
		 ]]></return>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:DigestMD5/handleResponse' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[
		Called when a response to this authentication is received.
				]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		]]></param>
<param><![CDATA[response The XML of the actual authentication response.
				]]></param>
<return><![CDATA[An object specifying the current state of the authentication.
		]]></return>
</method>
<field name='MECHANISM' fullname='org.igniterealtime.xiff.auth:DigestMD5/MECHANISM' type='String' isStatic='true' isConst='true' defaultValue='DIGEST-MD5' >
</field>
<classRec name='XOAuth2' fullname='org.igniterealtime.xiff.auth:XOAuth2' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\XOAuth2.as' namespace='org.igniterealtime.xiff.auth' access='public' baseclass='org.igniterealtime.xiff.auth:SASLAuth' interfaces='org.igniterealtime.xiff.auth:ISASLAuth' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides SASL authentication using the X-OAUTH2 mechanism.
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-6
	 ]]></see>
<see><![CDATA[https://developers.google.com/accounts/docs/OAuth2
	 ]]></see>
<see><![CDATA[https://developers.google.com/cloud-print/docs/rawxmpp
	 ]]></see>
</classRec>
<method name='XOAuth2' fullname='org.igniterealtime.xiff.auth:XOAuth2/XOAuth2' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Creates a OAuth v2 authentication object.
		 		 ]]></description>
<param><![CDATA[connection A reference to the XMPPConnection instance in use.
		 ]]></param>
</method>
<method name='handleChallenge' fullname='org.igniterealtime.xiff.auth:XOAuth2/handleChallenge' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;challenge' param_types='int;XML' param_defaults='undefined;undefined' result_type='XML'>
<description><![CDATA[
		 Called when a challenge to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[challenge The XML of the actual authentication challenge.
		 		 ]]></param>
<return><![CDATA[The XML response to the challenge.
		 ]]></return>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:XOAuth2/handleResponse' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[
		 Called when a response to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[response The XML of the actual authentication response.
		 		 ]]></param>
<return><![CDATA[An object specifying the current state of the authentication.
		 ]]></return>
</method>
<field name='MECHANISM' fullname='org.igniterealtime.xiff.auth:XOAuth2/MECHANISM' type='String' isStatic='true' isConst='true' defaultValue='X-OAUTH2' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.auth:XOAuth2/NS' type='String' isStatic='true' isConst='true' defaultValue='urn:ietf:params:xml:ns:xmpp-sasl' >
</field>
<classRec name='XFacebookPlatform' fullname='org.igniterealtime.xiff.auth:XFacebookPlatform' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\XFacebookPlatform.as' namespace='org.igniterealtime.xiff.auth' access='public' baseclass='org.igniterealtime.xiff.auth:SASLAuth' interfaces='org.igniterealtime.xiff.auth:ISASLAuth' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides SASL authentication using the X-FACEBOOK-PLATFORM mechanism.
	 	 <p>Facebook Chat currently supports the following features, related to authentication:</p>
	 <ul>
	 <li>Facebook Platform authentication using the X-FACEBOOK-PLATFORM SASL authentication mechanism</li>
	 <li>Username/password authentication using the DIGEST-MD5 authentication mechanism</li>
	 </ul>
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-6
	 ]]></see>
<see><![CDATA[https://developers.facebook.com/docs/chat/
	 ]]></see>
</classRec>
<method name='XFacebookPlatform' fullname='org.igniterealtime.xiff.auth:XFacebookPlatform/XFacebookPlatform' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Creates a new XFacebookPlatform authentication object.
		 		 ]]></description>
<param><![CDATA[connection A reference to the XMPPConnection instance in use.
		 ]]></param>
</method>
<method name='handleChallenge' fullname='org.igniterealtime.xiff.auth:XFacebookPlatform/handleChallenge' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;challenge' param_types='int;XML' param_defaults='undefined;undefined' result_type='XML'>
<description><![CDATA[
		 Called when a challenge to this authentication is received.
		 		 <p>The mechanism starts with a server challenge, in the form of a common HTTP query string:
		 an ampersand-separated sequence of equals-sign-delimited key/value pairs.
		 The keys and values are UTF-8-encoded and URL-encoded.
		 The query string contains two items: method and nonce.</p>
		 		 <p>The client's reply should be a similarly-encoded query string prepared as if it were
		 going to call a method against the Facebook API. The call should contain the
		 following parameters:</p>
		 <ul>
		 <li>string method: Should be the same as the method specified by the server.</li>
		 <li>string api_key: The application key associated with the calling application.</li>
		 <li>string access_token: The access_token obtained in the above step.</li>
		 <li>float call_id: The request's sequence number.</li>
		 <li>string v: This must be set to 1.0 to use this version of the API.</li>
		 <li>string format: Optional - Ignored.</li>
		 <li>string cnonce: Optional - Client-selected nonce. Ignored.</li>
		 <li>string nonce: Should be the same as the nonce specified by the server.</li>
		 </ul>
		 		 <p>The server will then respond with a success or failure message.
		 Note that this needs to be over TLS or you'll get an error.</p>
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[challenge The XML of the actual authentication challenge.
		 		 ]]></param>
<return><![CDATA[The XML response to the challenge.
		 ]]></return>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:XFacebookPlatform/handleResponse' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[
		 Called when a response to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[response The XML of the actual authentication response.
		 		 ]]></param>
<return><![CDATA[An object specifying the current state of the authentication.
		 ]]></return>
</method>
<field name='MECHANISM' fullname='org.igniterealtime.xiff.auth:XFacebookPlatform/MECHANISM' type='String' isStatic='true' isConst='true' defaultValue='X-FACEBOOK-PLATFORM' >
</field>
<field name='fb_access_token' fullname='org.igniterealtime.xiff.auth:XFacebookPlatform/fb_access_token' type='String' isStatic='true' isConst='false' >
</field>
<field name='fb_app_id' fullname='org.igniterealtime.xiff.auth:XFacebookPlatform/fb_app_id' type='String' isStatic='true' isConst='false' >
</field>
<classRec name='External' fullname='org.igniterealtime.xiff.auth:External' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\External.as' namespace='org.igniterealtime.xiff.auth' access='public' baseclass='org.igniterealtime.xiff.auth:SASLAuth' interfaces='org.igniterealtime.xiff.auth:ISASLAuth' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides SASL authentication using the EXTERNAL mechanism.
	 This is particularly useful when TLS authentication is required.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0178.html
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-6
	 ]]></see>
</classRec>
<method name='External' fullname='org.igniterealtime.xiff.auth:External/External' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Creates a new External authentication object.
		 ]]></description>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:External/handleResponse' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[
		 Called when a response to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[response The XML of the actual authentication response.
		 		 ]]></param>
<return><![CDATA[An object specifying the current state of the authentication.
		 ]]></return>
</method>
<field name='MECHANISM' fullname='org.igniterealtime.xiff.auth:External/MECHANISM' type='String' isStatic='true' isConst='true' defaultValue='EXTERNAL' >
</field>
<classRec name='Plain' fullname='org.igniterealtime.xiff.auth:Plain' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\auth\Plain.as' namespace='org.igniterealtime.xiff.auth' access='public' baseclass='org.igniterealtime.xiff.auth:SASLAuth' interfaces='org.igniterealtime.xiff.auth:ISASLAuth' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides SASL authentication using the PLAIN mechanism.
	 This is used for plain text (base64 encoded) password authentication with an XMPP
	 server.
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc4616
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-6
	 ]]></see>
</classRec>
<method name='Plain' fullname='org.igniterealtime.xiff.auth:Plain/Plain' isStatic='false' isFinal='false' isOverride='false'  param_names='connection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Creates a new Plain authentication object.
		 ]]></description>
</method>
<method name='handleResponse' fullname='org.igniterealtime.xiff.auth:Plain/handleResponse' isStatic='false' isFinal='false' isOverride='true'  param_names='stage;response' param_types='int;XML' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[
		 Called when a response to this authentication is received.
		 		 ]]></description>
<param><![CDATA[stage The current stage in the authentication process.
		 ]]></param>
<param><![CDATA[response The XML of the actual authentication response.
		 		 ]]></param>
<return><![CDATA[An object specifying the current state of the authentication.
		 ]]></return>
</method>
<field name='MECHANISM' fullname='org.igniterealtime.xiff.auth:Plain/MECHANISM' type='String' isStatic='true' isConst='true' defaultValue='PLAIN' >
</field>
<classRec name='MUC' fullname='org.igniterealtime.xiff.data.muc:MUC' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUC.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class contains a series of static constants that are used throughout the
	 multi-user conferencing extensions.
	 	 <p>The constants include the following for
	 conference room affiliations:</p>
	 <ul>
	 <li>AFFILIATION_ADMIN</li>
	 <li>AFFILIATION_MEMBER</li>
	 <li>AFFILIATION_NONE</li>
	 <li>AFFILIATION_OUTCAST</li>
	 <li>AFFILIATION_OWNER</li>
	 </ul>
	 	 <p>And the following constants for room roles:</p>
	 <ul>
	 <li>ROLE_MODERATOR</li>
	 <li>ROLE_NONE</li>
	 <li>ROLE_PARTICIPANT</li>
	 <li>ROLE_VISITOR</li>
	 </ul>
	 	 <p>Support for the owner affiliation is REQUIRED. Support for the admin, member,
	 and outcast affiliations is RECOMMENDED. (The "None" affiliation is
	 the absence of an affiliation.)</p>
	 	 ]]></description>
<see><![CDATA[http://www.xmpp.org/extensions/xep-0045.html
	 ]]></see>
</classRec>
<field name='AFFILIATION_ADMIN' fullname='org.igniterealtime.xiff.data.muc:MUC/AFFILIATION_ADMIN' type='String' isStatic='true' isConst='true' defaultValue='admin' >
</field>
<field name='AFFILIATION_MEMBER' fullname='org.igniterealtime.xiff.data.muc:MUC/AFFILIATION_MEMBER' type='String' isStatic='true' isConst='true' defaultValue='member' >
</field>
<field name='AFFILIATION_NONE' fullname='org.igniterealtime.xiff.data.muc:MUC/AFFILIATION_NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
</field>
<field name='AFFILIATION_OUTCAST' fullname='org.igniterealtime.xiff.data.muc:MUC/AFFILIATION_OUTCAST' type='String' isStatic='true' isConst='true' defaultValue='outcast' >
</field>
<field name='AFFILIATION_OWNER' fullname='org.igniterealtime.xiff.data.muc:MUC/AFFILIATION_OWNER' type='String' isStatic='true' isConst='true' defaultValue='owner' >
</field>
<field name='ROLE_MODERATOR' fullname='org.igniterealtime.xiff.data.muc:MUC/ROLE_MODERATOR' type='String' isStatic='true' isConst='true' defaultValue='moderator' >
</field>
<field name='ROLE_NONE' fullname='org.igniterealtime.xiff.data.muc:MUC/ROLE_NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
</field>
<field name='ROLE_PARTICIPANT' fullname='org.igniterealtime.xiff.data.muc:MUC/ROLE_PARTICIPANT' type='String' isStatic='true' isConst='true' defaultValue='participant' >
</field>
<field name='ROLE_VISITOR' fullname='org.igniterealtime.xiff.data.muc:MUC/ROLE_VISITOR' type='String' isStatic='true' isConst='true' defaultValue='visitor' >
</field>
<interfaceRec name='IMUCExtension' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\IMUCExtension.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseClasses='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='addChildNode' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:addChildNode' isStatic='false' isFinal='false' isOverride='false'  param_names='childNode' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='history' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:history/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='maxchars' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:maxchars/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='maxstanzas' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:maxstanzas/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='seconds' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:seconds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='since' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:since/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='history' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:history/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='maxchars' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:maxchars/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='maxstanzas' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:maxstanzas/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='seconds' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:seconds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='since' fullname='org.igniterealtime.xiff.data.muc:IMUCExtension/org.igniterealtime.xiff.data.muc:IMUCExtension:since/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='MUCItem' fullname='org.igniterealtime.xiff.data.muc:MUCItem' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUCItem.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class is used by the MUCExtension for internal representation of
	 information pertaining to occupants in a multi-user conference room.
	 	 <p>The information given inside Precense of a given room user</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#associations
	 ]]></see>
</classRec>
<method name='MUCItem' fullname='org.igniterealtime.xiff.data.muc:MUCItem/MUCItem' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='actorNick' fullname='org.igniterealtime.xiff.data.muc:MUCItem/actorNick/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Optional. Nickname of the room user or server that made changes to the given item.
		 Most likely when kicking someone from a room.
		 		 <p>This property was added to Version 1.25 (2012-02-08) of the specification.</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#kick
		 ]]></see>
</method>
<method name='actor' fullname='org.igniterealtime.xiff.data.muc:MUCItem/actor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 Optional. JID of the room user or server that made changes to the given item.
		 Most likely when kicking someone from a room.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#kick
		 ]]></see>
</method>
<method name='affiliation' fullname='org.igniterealtime.xiff.data.muc:MUCItem/affiliation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Can be one of the following: owner, admin, member, outcast, or none.
		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.muc:MUCItem/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='nick' fullname='org.igniterealtime.xiff.data.muc:MUCItem/nick/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The nickname of the conference occupant.
		 		 ]]></description>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.data.muc:MUCItem/reason/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Rason given by the actor for the action that was made for the given item.
		 Most likely the reson why someone was kicked out from a room.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html#kick
		 ]]></see>
</method>
<method name='role' fullname='org.igniterealtime.xiff.data.muc:MUCItem/role/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Can be one of the following: moderator, participant,
		 visitor, or none.
		 ]]></description>
</method>
<method name='actorNick' fullname='org.igniterealtime.xiff.data.muc:MUCItem/actorNick/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='actor' fullname='org.igniterealtime.xiff.data.muc:MUCItem/actor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='affiliation' fullname='org.igniterealtime.xiff.data.muc:MUCItem/affiliation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.muc:MUCItem/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='nick' fullname='org.igniterealtime.xiff.data.muc:MUCItem/nick/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.data.muc:MUCItem/reason/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='role' fullname='org.igniterealtime.xiff.data.muc:MUCItem/role/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.muc:MUCItem/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='item' >
</field>
<classRec name='MUCStatus' fullname='org.igniterealtime.xiff.data.muc:MUCStatus' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUCStatus.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0306: Extensible Status Conditions for Multi-User Chat
	 	 <p>Traditionally, Multi-User Chat [1] has used numerical status codes similar to
	 those used in HTTP and SMTP. Numerical codes were deprecated in the core of
	 XMPP by RFC 3920 [2] and are no longer even defined in the core schemas provided in
	 RFC 6120 [3] (see also Error Condition Mappings [4]). In an effort to modernize
	 the Multi-User Chat (MUC) protocol, this document defines an extensible
	 format for status conditions in MUC.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0306.html
	 ]]></see>
</classRec>
<method name='MUCStatus' fullname='org.igniterealtime.xiff.data.muc:MUCStatus/MUCStatus' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='code' fullname='org.igniterealtime.xiff.data.muc:MUCStatus/code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Property used to add or retrieve a status code describing the condition that occurs.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0306.html#mapping
		 ]]></see>
</method>
<method name='message' fullname='org.igniterealtime.xiff.data.muc:MUCStatus/message/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Property that contains some text with a description of a condition.
		 		 <p> One of the following values:</p>
		 		 <ul>
		 <li>affiliation-changed</li>
		 <li>banned</li>
		 <li>configuration-changed</li>
		 <li>fully-anonymous</li>
		 <li>kicked</li>
		 <li>logging-disabled</li>
		 <li>logging-enabled</li>
		 <li>new-nick</li>
		 <li>nick-assigned</li>
		 <li>non-anonymous</li>
		 <li>realjid-public</li>
		 <li>removed-affiliation</li>
		 <li>removed-membership</li>
		 <li>removed-shutdown</li>
		 <li>room-created</li>
		 <li>self-presence</li>
		 <li>semi-anonymous</li>
		 <li>unavailable-not-shown</li>
		 <li>unavailable-shown</li>
		 </ul>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0306.html#mapping
		 ]]></see>
</method>
<method name='code' fullname='org.igniterealtime.xiff.data.muc:MUCStatus/code/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='message' fullname='org.igniterealtime.xiff.data.muc:MUCStatus/message/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.muc:MUCStatus/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='status' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.muc:MUCStatus/NS' type='String' isStatic='true' isConst='true' defaultValue='urn:xmpp:muc:conditions:1' >
<description><![CDATA[
		 Note that this namespace is for the message element
		 ]]></description>
</field>
<classRec name='MUCExtension' fullname='org.igniterealtime.xiff.data.muc:MUCExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUCExtension.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data.muc:IMUCExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements the base MUC protocol schema from <a href="http://www.xmpp.org/extensions/xep-0045.html">XEP-0045</a> for multi-user chat.
	 	 This extension is typically used to test for the presence of MUC enabled conferencing
	 service, or a MUC related error condition.
	 	 ]]></description>
<see><![CDATA[http://www.xmpp.org/extensions/xep-0045.html
	 ]]></see>
</classRec>
<method name='MUCExtension' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/MUCExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
		 ]]></param>
</method>
<method name='addChildNode' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/addChildNode' isStatic='false' isFinal='false' isOverride='false'  param_names='childNode' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='history' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/history/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 This is property allows a user to retrieve a server defined collection of previous messages.
		 Set this property to "true" to retrieve a history of the dicussions.
		 ]]></description>
</method>
<method name='maxchars' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/maxchars/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Size based condition to evaluate by the server for the maximum
		 characters to return during history retrieval
		 ]]></description>
</method>
<method name='maxstanzas' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/maxstanzas/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Protocol based condition for the number of stanzas to return during history retrieval
		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 If a room is password protected, add this extension and set the password.
		 Use <code>null</code> to remove.
		 ]]></description>
</method>
<method name='seconds' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/seconds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 Time based condition to retrive all messages for the last N seconds.
		 ]]></description>
</method>
<method name='since' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/since/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Time base condition to retrieve all messages from a given time formatted in the format described in
		 <a href="http://xmpp.org/extensions/xep-0082.html">XEP-0082</a>.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0082.html
		 ]]></see>
</method>
<method name='history' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/history/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='maxchars' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/maxchars/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='maxstanzas' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/maxstanzas/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='seconds' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/seconds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='since' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/since/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='x' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.muc:MUCExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/muc' >
</field>
<classRec name='MUCBaseExtension' fullname='org.igniterealtime.xiff.data.muc:MUCBaseExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUCBaseExtension.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtendable;org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements the base functionality shared by all MUC extensions
	 	 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
	 ]]></param>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html
	 ]]></see>
</classRec>
<method name='MUCBaseExtension' fullname='org.igniterealtime.xiff.data.muc:MUCBaseExtension/MUCBaseExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='addItem' fullname='org.igniterealtime.xiff.data.muc:MUCBaseExtension/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='affiliation;role;nick;jid;actor;reason' param_types='String;String;String;org.igniterealtime.xiff.core:EscapedJID;String;String' param_defaults='null;null;null;null;null;null' result_type='org.igniterealtime.xiff.data.muc:MUCItem'>
<description><![CDATA[
		 Use this method to create a new item.  Either the affiliation or role are requried.
		 		 ]]></description>
<param><![CDATA[affiliation A predefined string defining the affiliation the JID or nick has in relation to the room
		 ]]></param>
<param><![CDATA[role The role the jid or nick has in the room
		 ]]></param>
<param><![CDATA[nick The nickname of the new item
		 ]]></param>
<param><![CDATA[jid The jid of the new item
		 ]]></param>
<param><![CDATA[actor The user that is actually creating the request
		 ]]></param>
<param><![CDATA[reason The reason why the action associated with this item is being preformed
		 ]]></param>
<return><![CDATA[The newly created MUCItem
		 ]]></return>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.muc:MUCBaseExtension/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Item interface to MUCItems if they are contained in this extension
		 		 ]]></description>
<return><![CDATA[Array of MUCItem objects
		 ]]></return>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.muc:MUCBaseExtension/items/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<classRec name='MUCUserExtension' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUCUserExtension.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='org.igniterealtime.xiff.data.muc:MUCBaseExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements the base MUC user protocol schema from
	 <a href="http://www.xmpp.org/extensions/xep-0045.html">XEP-0045</a> for multi-user chat.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html
	 ]]></see>
</classRec>
<method name='MUCUserExtension' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/MUCUserExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
		 ]]></param>
</method>
<method name='decline' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/decline' isStatic='false' isFinal='false' isOverride='false'  param_names='to;from;reason' param_types='org.igniterealtime.xiff.core:EscapedJID;org.igniterealtime.xiff.core:EscapedJID;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Use this extension to decline an invitation
		 ]]></description>
</method>
<method name='destroy' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/destroy' isStatic='false' isFinal='false' isOverride='false'  param_names='room;reason' param_types='org.igniterealtime.xiff.core:EscapedJID;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Use this extension to destroy a room
		 ]]></description>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='hasStatusCode' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/hasStatusCode' isStatic='false' isFinal='false' isOverride='false'  param_names='code' param_types='Number' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Does the given status code exist in the list of statuses saved in this extension.
		 ]]></description>
<param><![CDATA[code
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='invite' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/invite' isStatic='false' isFinal='false' isOverride='false'  param_names='to;from;reason' param_types='org.igniterealtime.xiff.core:EscapedJID;org.igniterealtime.xiff.core:EscapedJID;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Use this extension to invite another user
		 ]]></description>
</method>
<method name='updateActionNode' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/private:updateActionNode' isStatic='false' isFinal='false' isOverride='false'  param_names='type;attrs;reason' param_types='String;Object;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Internal method that manages the type of node that we will use for invite/destroy/decline messages
		 		 ]]></description>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[attrs
		 ]]></param>
<param><![CDATA[reason
		 ]]></param>
</method>
<method name='from' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/from/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The from property for invite and decline action types
		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The jid property for destroy the action type
		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Property to use if the concerned room is password protected
		 ]]></description>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/reason/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The reason for the invite/decline/destroy
		 ]]></description>
</method>
<method name='statuses' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/statuses/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 List of MUCStatus.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.muc.MUCStatus
		 ]]></see>
</method>
<method name='to' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/to/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The to property for invite and decline action types
		 ]]></description>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The type of user extension this is
		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/reason/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='statuses' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/statuses/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='x' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/muc#user' >
</field>
<field name='TYPE_DECLINE' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/TYPE_DECLINE' type='String' isStatic='true' isConst='true' defaultValue='decline' >
</field>
<field name='TYPE_DESTROY' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/TYPE_DESTROY' type='String' isStatic='true' isConst='true' defaultValue='destroy' >
</field>
<field name='TYPE_INVITE' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/TYPE_INVITE' type='String' isStatic='true' isConst='true' defaultValue='invite' >
</field>
<field name='TYPE_OTHER' fullname='org.igniterealtime.xiff.data.muc:MUCUserExtension/TYPE_OTHER' type='String' isStatic='true' isConst='true' defaultValue='other' >
</field>
<classRec name='MUCOwnerExtension' fullname='org.igniterealtime.xiff.data.muc:MUCOwnerExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUCOwnerExtension.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='org.igniterealtime.xiff.data.muc:MUCBaseExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements the administration command data model in <a href="http://xmpp.org/extensions/xep-0045.html">XEP-0045</a> for multi-user chat.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html
	 ]]></see>
</classRec>
<method name='MUCOwnerExtension' fullname='org.igniterealtime.xiff.data.muc:MUCOwnerExtension/MUCOwnerExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
		 ]]></param>
</method>
<method name='destroy' fullname='org.igniterealtime.xiff.data.muc:MUCOwnerExtension/destroy' isStatic='false' isFinal='false' isOverride='false'  param_names='reason;alternateJID' param_types='String;org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[
	     Replaces the <code>destroy</code> node with a new node and sets
	     the <code>reason</code> element and <code>jid</code> attribute
	     	     ]]></description>
<param><![CDATA[reason A string describing the reason for room destruction. Use <code>null</code> to remove.
	     ]]></param>
<param><![CDATA[alternateJID A string containing a JID that room members can use instead of this room
	     ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.muc:MUCOwnerExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.muc:MUCOwnerExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.muc:MUCOwnerExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.muc:MUCOwnerExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/muc#owner' >
</field>
<classRec name='MUCAdminExtension' fullname='org.igniterealtime.xiff.data.muc:MUCAdminExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\muc\MUCAdminExtension.as' namespace='org.igniterealtime.xiff.data.muc' access='public' baseclass='org.igniterealtime.xiff.data.muc:MUCBaseExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements the administration command data model in <a href="http://xmpp.org/extensions/xep-0045.html">XEP-0045</a> for multi-user chat.
	 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
	 ]]></param>
<see><![CDATA[http://xmpp.org/extensions/xep-0045.html
	 	 ]]></see>
</classRec>
<method name='MUCAdminExtension' fullname='org.igniterealtime.xiff.data.muc:MUCAdminExtension/MUCAdminExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.muc:MUCAdminExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.muc:MUCAdminExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.muc:MUCAdminExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.muc:MUCAdminExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/muc#admin' >
</field>
<field name='_items' fullname='org.igniterealtime.xiff.data.muc:MUCAdminExtension/private:_items' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='CollectionEventKind' fullname='org.igniterealtime.xiff.collections.events:CollectionEventKind' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\collections\events\CollectionEventKind.as' namespace='org.igniterealtime.xiff.collections.events' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[
	  The CollectionEventKind class contains constants for the valid values
	  of the CollectionEvent class kind property.
	 ]]></description>
</classRec>
<field name='ADD' fullname='org.igniterealtime.xiff.collections.events:CollectionEventKind/ADD' type='String' isStatic='true' isConst='true' defaultValue='add' >
<description><![CDATA[
		  Indicates that the collection added an item or items.
		 ]]></description>
</field>
<field name='REMOVE' fullname='org.igniterealtime.xiff.collections.events:CollectionEventKind/REMOVE' type='String' isStatic='true' isConst='true' defaultValue='remove' >
<description><![CDATA[
		  Indicates that the collection removed an item or items.
		 ]]></description>
</field>
<field name='REPLACE' fullname='org.igniterealtime.xiff.collections.events:CollectionEventKind/REPLACE' type='String' isStatic='true' isConst='true' defaultValue='replace' >
<description><![CDATA[
		  Indicates that the item at the position identified by the
		  CollectionEvent location property has been replaced.
		 ]]></description>
</field>
<field name='RESET' fullname='org.igniterealtime.xiff.collections.events:CollectionEventKind/RESET' type='String' isStatic='true' isConst='true' defaultValue='reset' >
<description><![CDATA[
		  Indicates that the collection has changed so drastically that
		  a reset is required.
		 ]]></description>
</field>
<field name='UPDATE' fullname='org.igniterealtime.xiff.collections.events:CollectionEventKind/UPDATE' type='String' isStatic='true' isConst='true' defaultValue='update' >
<description><![CDATA[
		  Indicates that one or more items were updated within the collection.
		  The affected item(s)
		  are stored in the items property.
		 ]]></description>
</field>
<classRec name='CollectionEvent' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\collections\events\CollectionEvent.as' namespace='org.igniterealtime.xiff.collections.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
	  The CollectionEvent class represents an event that is
	  dispatched when the associated collection changes.
	 ]]></description>
</classRec>
<method name='CollectionEvent' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/CollectionEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;kind;location;oldLocation;items' param_types='String;Boolean;Boolean;String;int;int;Array' param_defaults='undefined;false;false;null;-1;-1;null' result_type='*'>
<description><![CDATA[
		 Constructor.
		 ]]></description>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<field name='COLLECTION_CHANGE' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/COLLECTION_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='collectionChange' >
<description><![CDATA[
		  The CollectionEvent.COLLECTION_CHANGE constant defines the value of the
		  type property of the event object for an event that is
		  dispatched when a collection has changed.
		 ]]></description>
</field>
<field name='items' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/items' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[
		  When the kind is CollectionEventKind.ADD
		  or CollectionEventKind.REMOVE the items property
		  is an Array of added/removed items.
		  When the kind is CollectionEventKind.REPLACE
		  or CollectionEventKind.UPDATE the items property
		  is an Array of PropertyChangeEvent objects with information about the items
		  affected by the event.
		  When a value changes, query the newValue and
		  oldValue fields of the PropertyChangeEvent objects
		  to find out what the old and new values were.
		  When the kind is CollectionEventKind.REFRESH
		  or CollectionEventKind.RESET, this array has zero length.
		 ]]></description>
</field>
<field name='kind' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/kind' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		  Indicates the kind of event that occurred.
		 ]]></description>
</field>
<field name='location' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/location' type='int' isStatic='false' isConst='false' >
<description><![CDATA[
		  When the kind value is CollectionEventKind.ADD,
		  CollectionEventKind.MOVE,
		  CollectionEventKind.REMOVE, or
		  CollectionEventKind.REPLACE, this property is the
		  zero-base index in the collection of the item(s) specified in the
		  items property.
		 ]]></description>
</field>
<field name='oldLocation' fullname='org.igniterealtime.xiff.collections.events:CollectionEvent/oldLocation' type='int' isStatic='false' isConst='false' >
<description><![CDATA[
		  When the kind value is CollectionEventKind.MOVE,
		  this property is the zero-based index in the target collection of the
		  previous location of the item(s) specified by the items property.
		 ]]></description>
</field>
<classRec name='FormFieldType' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\forms\enum\FormFieldType.as' namespace='org.igniterealtime.xiff.data.forms.enum' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Different field types of form that can exist according to XEP-0004.
	 	 <p>The following field types represent data "types" that are commonly exchanged between
	 Jabber/XMPP entities. These field types are not intended to be as comprehensive as
	 the datatypes defined in, for example, XML Schema Part 2, nor do they define
	 user interface elements.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0004.html#protocol-fieldtypes
	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/xmlschema-2/
	 ]]></see>
</classRec>
<field name='BOOLEAN' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/BOOLEAN' type='String' isStatic='true' isConst='true' defaultValue='boolean' >
<description><![CDATA[
		 The field enables an entity to gather or provide an either-or choice between two options.
		 The default value is "false".
		 ]]></description>
</field>
<field name='FIXED' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/FIXED' type='String' isStatic='true' isConst='true' defaultValue='fixed' >
<description><![CDATA[
		 The field is intended for data description (e.g., human-readable text such as "section"
		 headers) rather than data gathering or provision. The <code>value</code> child SHOULD NOT contain
		 newlines (the \\n and \\r characters); instead an application SHOULD generate multiple
		 fixed fields, each with one <code>value</code> child.
		 ]]></description>
</field>
<field name='HIDDEN' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/HIDDEN' type='String' isStatic='true' isConst='true' defaultValue='hidden' >
<description><![CDATA[
		 The field is not shown to the form-submitting entity, but instead is returned with
		 the form. The form-submitting entity SHOULD NOT modify the value of a hidden field,
		 but MAY do so if such behavior is defined for the "using protocol".
		 ]]></description>
</field>
<field name='JID_MULTI' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/JID_MULTI' type='String' isStatic='true' isConst='true' defaultValue='jid-multi' >
<description><![CDATA[
		 The field enables an entity to gather or provide multiple Jabber IDs. Each provided JID
		 SHOULD be unique (as determined by comparison that includes application of the Nodeprep,
		 Nameprep, and Resourceprep profiles of Stringprep as specified in XMPP Core), and
		 duplicate JIDs MUST be ignored.
		 		 <p>Note: Data provided for fields of type "jid-single" or "jid-multi" MUST contain one
		 or more valid Jabber IDs, where validity is determined by the addressing rules
		 defined in XMPP Core.</p>
		 ]]></description>
</field>
<field name='JID_SINGLE' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/JID_SINGLE' type='String' isStatic='true' isConst='true' defaultValue='jid-single' >
<description><![CDATA[
		 The field enables an entity to gather or provide a single Jabber ID.
		 		 <p>Note: Data provided for fields of type "jid-single" or "jid-multi" MUST contain
		 one or more valid Jabber IDs, where validity is determined by the addressing
		 rules defined in XMPP Core.</p>
		 ]]></description>
</field>
<field name='LIST_MULTI' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/LIST_MULTI' type='String' isStatic='true' isConst='true' defaultValue='list-multi' >
<description><![CDATA[
		 The field enables an entity to gather or provide one or more options from among many.
		 A form-submitting entity chooses one or more items from among the options presented
		 by the form-processing entity and MUST NOT insert new options. The form-submitting
		 entity MUST NOT modify the order of items as received from the form-processing entity,
		 since the order of items MAY be significant.
		 		 <p>Note: The <code>option</code> elements in list-multi and list-single fields MUST
		 be unique, where uniqueness is determined by the value of the 'label' attribute and
		 the XML character data of the <code>value</code> element (i.e., both must be unique).</p>
		 ]]></description>
</field>
<field name='LIST_SINGLE' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/LIST_SINGLE' type='String' isStatic='true' isConst='true' defaultValue='list-single' >
<description><![CDATA[
		 The field enables an entity to gather or provide one option from among many.
		 A form-submitting entity chooses one item from among the options presented by the
		 form-processing entity and MUST NOT insert new options.
		 		 <p>Note: The <code>option</code> elements in list-multi and list-single fields MUST
		 be unique, where uniqueness is determined by the value of the 'label' attribute and
		 the XML character data of the <code>value</code> element (i.e., both must be unique).</p>
		 ]]></description>
</field>
<field name='TEXT_MULTI' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/TEXT_MULTI' type='String' isStatic='true' isConst='true' defaultValue='text-multi' >
<description><![CDATA[
		 The field enables an entity to gather or provide multiple lines of text.
		 		 <p>Note: Data provided for fields of type "text-multi" SHOULD NOT contain any newlines
		 (the \\n and \\r characters). Instead, the application SHOULD split the data into
		 multiple strings (based on the newlines inserted by the platform), then specify
		 each string as the XML character data of a distinct <code>value</code> element. Similarly,
		 an application that receives multiple <code>value</code> elements for a field of
		 type "text-multi" SHOULD merge the XML character data of the value elements into
		 one text block for presentation to a user, with each string separated by a
		 newline character as appropriate for that platform.</p>
		 ]]></description>
</field>
<field name='TEXT_PRIVATE' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/TEXT_PRIVATE' type='String' isStatic='true' isConst='true' defaultValue='text-private' >
<description><![CDATA[
		 The field enables an entity to gather or provide a single line or word of text,
		 which shall be obscured in an interface (e.g., with multiple instances of the
		 asterisk character).
		 ]]></description>
</field>
<field name='TEXT_SINGLE' fullname='org.igniterealtime.xiff.data.forms.enum:FormFieldType/TEXT_SINGLE' type='String' isStatic='true' isConst='true' defaultValue='text-single' >
<description><![CDATA[
		 The field enables an entity to gather or provide a single line or word of text,
		 which may be shown in an interface. This field type is the default and MUST be
		 assumed if a form-submitting entity receives a field type it does not understand.
		 ]]></description>
</field>
<classRec name='FormType' fullname='org.igniterealtime.xiff.data.forms.enum:FormType' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\forms\enum\FormType.as' namespace='org.igniterealtime.xiff.data.forms.enum' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Four different types of form that can exist according to XEP-0004.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0004.html#protocol-formtypes
	 ]]></see>
</classRec>
<field name='CANCEL' fullname='org.igniterealtime.xiff.data.forms.enum:FormType/CANCEL' type='String' isStatic='true' isConst='true' defaultValue='cancel' >
<description><![CDATA[
		 The form-submitting entity has cancelled submission of data
		 to the form-processing entity.
		 ]]></description>
</field>
<field name='FORM' fullname='org.igniterealtime.xiff.data.forms.enum:FormType/FORM' type='String' isStatic='true' isConst='true' defaultValue='form' >
<description><![CDATA[
		 The form-processing entity is asking the form-submitting entity to complete a form.
		 ]]></description>
</field>
<field name='RESULT' fullname='org.igniterealtime.xiff.data.forms.enum:FormType/RESULT' type='String' isStatic='true' isConst='true' defaultValue='result' >
<description><![CDATA[
		 The form-processing entity is returning data (e.g., search results) to
		 the form-submitting entity, or the data is a generic data set.
		 ]]></description>
</field>
<field name='SUBMIT' fullname='org.igniterealtime.xiff.data.forms.enum:FormType/SUBMIT' type='String' isStatic='true' isConst='true' defaultValue='submit' >
<description><![CDATA[
		 The form-submitting entity is submitting data to the form-processing entity.
		 The submission MAY include fields that were not provided in the empty form,
		 but the form-processing entity MUST ignore any fields that it does not understand.
		 ]]></description>
</field>
<interfaceRec name='IRosterGroup' fullname='org.igniterealtime.xiff.data.im:IRosterGroup' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\im\IRosterGroup.as' namespace='org.igniterealtime.xiff.data.im' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='addItem' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='void'>
</method>
<method name='contains' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:contains' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='removeItem' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:removeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.collections:ICollection'>
</method>
<method name='label' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:label/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='shared' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:shared/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='label' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:label/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='shared' fullname='org.igniterealtime.xiff.data.im:IRosterGroup/org.igniterealtime.xiff.data.im:IRosterGroup:shared/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IContact' fullname='org.igniterealtime.xiff.data.im:IContact' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\im\IContact.as' namespace='org.igniterealtime.xiff.data.im' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='jid' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='online' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:online/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:show/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='online' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:online/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data.im:IContact/org.igniterealtime.xiff.data.im:IContact:show/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='RosterGroup' fullname='org.igniterealtime.xiff.data.im:RosterGroup' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\im\RosterGroup.as' namespace='org.igniterealtime.xiff.data.im' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.data.im:IRosterGroup' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Represents the groups in users roster.
	 ]]></description>
</classRec>
<method name='RosterGroup' fullname='org.igniterealtime.xiff.data.im:RosterGroup/RosterGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='label' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Create a new group with the given name
		 ]]></description>
<param><![CDATA[label
		 ]]></param>
</method>
<method name='addItem' fullname='org.igniterealtime.xiff.data.im:RosterGroup/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Insert a new roster item if it does not already exist in this group
		 ]]></description>
<param><![CDATA[item
		 ]]></param>
</method>
<method name='contains' fullname='org.igniterealtime.xiff.data.im:RosterGroup/contains' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Does the given item exist in this group?
		 ]]></description>
<param><![CDATA[item
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='removeItem' fullname='org.igniterealtime.xiff.data.im:RosterGroup/removeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Remove the given roster item from this group.
		 ]]></description>
<param><![CDATA[item
		 ]]></param>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.im:RosterGroup/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.collections:ICollection'>
<description><![CDATA[
		 Roster items in this group.
		 ]]></description>
</method>
<method name='label' fullname='org.igniterealtime.xiff.data.im:RosterGroup/label/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='shared' fullname='org.igniterealtime.xiff.data.im:RosterGroup/shared/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='label' fullname='org.igniterealtime.xiff.data.im:RosterGroup/label/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='shared' fullname='org.igniterealtime.xiff.data.im:RosterGroup/shared/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_items' fullname='org.igniterealtime.xiff.data.im:RosterGroup/private:_items' type='org.igniterealtime.xiff.collections:ArrayCollection' isStatic='false' isConst='false' >
</field>
<field name='_label' fullname='org.igniterealtime.xiff.data.im:RosterGroup/private:_label' type='String' isStatic='false' isConst='false' >
</field>
<field name='_shared' fullname='org.igniterealtime.xiff.data.im:RosterGroup/private:_shared' type='Boolean' isStatic='false' isConst='false' >
</field>
<interfaceRec name='IRosterItemVO' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\im\IRosterItemVO.as' namespace='org.igniterealtime.xiff.data.im' access='public' baseClasses='org.igniterealtime.xiff.data.im:IContact' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='askType' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:askType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='pending' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:pending/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='priority' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:priority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='subscribeType' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:subscribeType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='askType' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:askType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='priority' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:priority/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:status/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='subscribeType' fullname='org.igniterealtime.xiff.data.im:IRosterItemVO/org.igniterealtime.xiff.data.im:IRosterItemVO:subscribeType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='RosterItemVO' fullname='org.igniterealtime.xiff.data.im:RosterItemVO' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\im\RosterItemVO.as' namespace='org.igniterealtime.xiff.data.im' access='public' baseclass='flash.events:EventDispatcher' interfaces='org.igniterealtime.xiff.data.im:IRosterItemVO' isFinal='false' isDynamic='false' >
<metadata>
	<Event owner='org.igniterealtime.xiff.data.im:RosterItemVO' name='change' type='org.igniterealtime.xiff.events.PropertyChangeEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.PropertyChangeEvent.CHANGE
	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='RosterItemVO' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/RosterItemVO' isStatic='false' isFinal='false' isOverride='false'  param_names='newJID' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='*'>
</method>
<method name='dispatchChangeEvent' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:dispatchChangeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='name;newValue;oldValue' param_types='String;*;*' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Helper to dispatch a property change event.
		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[newValue
		 ]]></param>
<param><![CDATA[oldValue
		 ]]></param>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
<return><![CDATA[]]></return>
</method>
<method name='askType' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/askType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Type of asking
		 ]]></description>
</method>
<method name='get' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/get' isStatic='true' isFinal='false' isOverride='false'  param_names='jid;create' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;false' result_type='org.igniterealtime.xiff.data.im:RosterItemVO'>
<description><![CDATA[
		 Returns an Roster item value object if it exists,
		 use the "create" parameter to create one if it does not.
		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
<param><![CDATA[create
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='online' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/online/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 User online?
		 ]]></description>
</method>
<method name='pending' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/pending/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Pending
		 ]]></description>
</method>
<method name='priority' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/priority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Priority. The value MUST be an integer between -128 and +127
		 ]]></description>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/show/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Show
		 ]]></description>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Status
		 ]]></description>
</method>
<method name='subscribeType' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/subscribeType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Type of subscription. One of "none", "both", "from", "to"...
		 ]]></description>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/uid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='askType' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/askType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='online' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/online/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='priority' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/priority/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='show' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/show/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='status' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/status/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='subscribeType' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/subscribeType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='uid' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/uid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_askType' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_askType' type='String' isStatic='false' isConst='false' >
</field>
<field name='_groups' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_groups' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_jid' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_jid' type='org.igniterealtime.xiff.core:UnescapedJID' isStatic='false' isConst='false' >
</field>
<field name='_nickname' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_nickname' type='String' isStatic='false' isConst='false' >
</field>
<field name='_online' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_online' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_priority' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_priority' type='int' isStatic='false' isConst='false' >
</field>
<field name='_show' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_show' type='String' isStatic='false' isConst='false' >
</field>
<field name='_status' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_status' type='String' isStatic='false' isConst='false' >
</field>
<field name='_subscribeType' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:_subscribeType' type='String' isStatic='false' isConst='false' >
</field>
<field name='allContacts' fullname='org.igniterealtime.xiff.data.im:RosterItemVO/private:allContacts' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='RosterItem' fullname='org.igniterealtime.xiff.data.im:RosterItem' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\im\RosterItem.as' namespace='org.igniterealtime.xiff.data.im' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class is used internally by the RosterExtension class for managing items
	 received and sent as roster data. Usually, each item in the roster represents a single
	 contact, and this class is used to represent, abstract, and serialize/deserialize
	 this data.
	 	 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.im.RosterExtension
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0144.html
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3921#section-8
	 ]]></see>
</classRec>
<method name='RosterItem' fullname='org.igniterealtime.xiff.data.im:RosterItem/RosterItem' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent The parent XML
		 ]]></param>
</method>
<method name='addGroupNamed' fullname='org.igniterealtime.xiff.data.im:RosterItem/addGroupNamed' isStatic='false' isFinal='false' isOverride='false'  param_names='groupName' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Adds a group to the roster item. Contacts in the roster can be associated
		 with multiple groups.
		 		 ]]></description>
<param><![CDATA[groupName The name of the group to add
		 ]]></param>
</method>
<method name='removeAllGroups' fullname='org.igniterealtime.xiff.data.im:RosterItem/removeAllGroups' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Remove all group elements
		 ]]></description>
</method>
<method name='removeGroupByName' fullname='org.igniterealtime.xiff.data.im:RosterItem/removeGroupByName' isStatic='false' isFinal='false' isOverride='false'  param_names='groupName' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Remove a single group with the given name
		 ]]></description>
<param><![CDATA[groupName
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='askType' fullname='org.igniterealtime.xiff.data.im:RosterItem/askType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The ask type for this roster item.  Ask types have
		 been enumerated by static variables in the RosterExtension:
		 <ul>
		 <li>RosterExtension.ASK_TYPE_NONE</li>
		 <li>RosterExtension.ASK_TYPE_SUBSCRIBE</li>
		 <li>RosterExtension.ASK_TYPE_UNSUBSCRIBE</li>
		 </ul>
		 		 ]]></description>
</method>
<method name='groupCount' fullname='org.igniterealtime.xiff.data.im:RosterItem/groupCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Get the number of <code>group</code> elements in this roster item.
		 ]]></description>
</method>
<method name='groupNames' fullname='org.igniterealtime.xiff.data.im:RosterItem/groupNames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Gets a list of all the groups associated with this roster item.
		 		 ]]></description>
<return><![CDATA[An array of strings containing the name of each group
		 ]]></return>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.im:RosterItem/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The JID for this roster item.
		 Required.
		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.im:RosterItem/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The display name for this roster item.
		 		 ]]></description>
</method>
<method name='pending' fullname='org.igniterealtime.xiff.data.im:RosterItem/pending/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Convenience routine to determine if a roster item is considered "pending" or not.
		 ]]></description>
</method>
<method name='subscription' fullname='org.igniterealtime.xiff.data.im:RosterItem/subscription/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The subscription type for this roster item. Subscription types
		 have been enumerated by static variables in the RosterExtension:
		 <ul>
		 <li>RosterExtension.SUBSCRIBE_TYPE_NONE</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_TO</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_FROM</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_BOTH</li>
		 <li>RosterExtension.SUBSCRIBE_TYPE_REMOVE</li>
		 </ul>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3921#section-8.1
		 ]]></see>
</method>
<method name='askType' fullname='org.igniterealtime.xiff.data.im:RosterItem/askType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.im:RosterItem/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.im:RosterItem/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='subscription' fullname='org.igniterealtime.xiff.data.im:RosterItem/subscription/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.im:RosterItem/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='item' >
</field>
<classRec name='RosterExtension' fullname='org.igniterealtime.xiff.data.im:RosterExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\im\RosterExtension.as' namespace='org.igniterealtime.xiff.data.im' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 An IQ extension for roster data. Roster data is typically any data
	 that is sent or received with the "jabber:iq:roster" namespace.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/rfcs/rfc3921.html#roster
	 ]]></see>
</classRec>
<method name='RosterExtension' fullname='org.igniterealtime.xiff.data.im:RosterExtension/RosterExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='addItem' fullname='org.igniterealtime.xiff.data.im:RosterExtension/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;subscription;nickname;groups' param_types='org.igniterealtime.xiff.core:EscapedJID;String;String;Array' param_defaults='null;;;null' result_type='void'>
<description><![CDATA[
		 Adds a single roster item to the extension payload.
		 		 ]]></description>
<param><![CDATA[jid The JID of the contact to add
		 ]]></param>
<param><![CDATA[subscription The subscription type of the roster item contact.
		 			There are pre-defined static variables for these string options in this class definition.
		 ]]></param>
<param><![CDATA[nickname The display name or nickname of the contact.
		 ]]></param>
<param><![CDATA[groups An array of strings of the group names that this contact should be placed in.
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.im:RosterExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 		 ]]></description>
<return><![CDATA[The element name
		 ]]></return>
</method>
<method name='getItemByJID' fullname='org.igniterealtime.xiff.data.im:RosterExtension/getItemByJID' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:EscapedJID' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.im:RosterItem'>
<description><![CDATA[
		 Gets one item from the roster query, returning the first item found with the JID specified.
		 If none is found, then it returns null.
		 		 ]]></description>
<return><![CDATA[A roster item object with the following attributes: "jid", "subscription", "nickname", and "groups".
		 ]]></return>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.im:RosterExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the namespace associated with this extension.
		 The namespace for the RosterExtension is "jabber:iq:roster".
		 		 ]]></description>
<return><![CDATA[The namespace
		 ]]></return>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.im:RosterExtension/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 		 Array of RosterItem objects
		 ]]></description>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.im:RosterExtension/items/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='ASK_TYPE_NONE' fullname='org.igniterealtime.xiff.data.im:RosterExtension/ASK_TYPE_NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
</field>
<field name='ASK_TYPE_SUBSCRIBE' fullname='org.igniterealtime.xiff.data.im:RosterExtension/ASK_TYPE_SUBSCRIBE' type='String' isStatic='true' isConst='true' defaultValue='subscribe' >
</field>
<field name='ASK_TYPE_UNSUBSCRIBE' fullname='org.igniterealtime.xiff.data.im:RosterExtension/ASK_TYPE_UNSUBSCRIBE' type='String' isStatic='true' isConst='true' defaultValue='unsubscribe' >
</field>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.im:RosterExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.im:RosterExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:roster' >
</field>
<field name='SHOW_PENDING' fullname='org.igniterealtime.xiff.data.im:RosterExtension/SHOW_PENDING' type='String' isStatic='true' isConst='true' defaultValue='Pending' >
</field>
<field name='SHOW_UNAVAILABLE' fullname='org.igniterealtime.xiff.data.im:RosterExtension/SHOW_UNAVAILABLE' type='String' isStatic='true' isConst='true' defaultValue='unavailable' >
</field>
<field name='SUBSCRIBE_TYPE_BOTH' fullname='org.igniterealtime.xiff.data.im:RosterExtension/SUBSCRIBE_TYPE_BOTH' type='String' isStatic='true' isConst='true' defaultValue='both' >
</field>
<field name='SUBSCRIBE_TYPE_FROM' fullname='org.igniterealtime.xiff.data.im:RosterExtension/SUBSCRIBE_TYPE_FROM' type='String' isStatic='true' isConst='true' defaultValue='from' >
</field>
<field name='SUBSCRIBE_TYPE_NONE' fullname='org.igniterealtime.xiff.data.im:RosterExtension/SUBSCRIBE_TYPE_NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
</field>
<field name='SUBSCRIBE_TYPE_REMOVE' fullname='org.igniterealtime.xiff.data.im:RosterExtension/SUBSCRIBE_TYPE_REMOVE' type='String' isStatic='true' isConst='true' defaultValue='remove' >
</field>
<field name='SUBSCRIBE_TYPE_TO' fullname='org.igniterealtime.xiff.data.im:RosterExtension/SUBSCRIBE_TYPE_TO' type='String' isStatic='true' isConst='true' defaultValue='to' >
</field>
<interfaceRec name='IPacketFilter' fullname='org.igniterealtime.xiff.filter:IPacketFilter' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\filter\IPacketFilter.as' namespace='org.igniterealtime.xiff.filter' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='accept' fullname='org.igniterealtime.xiff.filter:IPacketFilter/org.igniterealtime.xiff.filter:IPacketFilter:accept' isStatic='false' isFinal='false' isOverride='false'  param_names='packet' param_types='org.igniterealtime.xiff.data:XMPPStanza' param_defaults='undefined' result_type='void'>
</method>
<classRec name='CallbackPacketFilter' fullname='org.igniterealtime.xiff.filter:CallbackPacketFilter' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\filter\CallbackPacketFilter.as' namespace='org.igniterealtime.xiff.filter' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.filter:IPacketFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 	 ]]></description>
</classRec>
<method name='CallbackPacketFilter' fullname='org.igniterealtime.xiff.filter:CallbackPacketFilter/CallbackPacketFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='callback;filterFunction;processFunction' param_types='org.igniterealtime.xiff.util:Callback;Function;Function' param_defaults='undefined;null;null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[callback
		 ]]></param>
<param><![CDATA[filterFunction
		 ]]></param>
<param><![CDATA[processFunction
		 ]]></param>
</method>
<method name='accept' fullname='org.igniterealtime.xiff.filter:CallbackPacketFilter/accept' isStatic='false' isFinal='false' isOverride='false'  param_names='packet' param_types='org.igniterealtime.xiff.data:XMPPStanza' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[packet
		 ]]></param>
</method>
<field name='_callback' fullname='org.igniterealtime.xiff.filter:CallbackPacketFilter/private:_callback' type='org.igniterealtime.xiff.util:Callback' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_filterFunction' fullname='org.igniterealtime.xiff.filter:CallbackPacketFilter/private:_filterFunction' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_processFunction' fullname='org.igniterealtime.xiff.filter:CallbackPacketFilter/private:_processFunction' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<interfaceRec name='IBrowser' fullname='org.igniterealtime.xiff.core:IBrowser' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\IBrowser.as' namespace='org.igniterealtime.xiff.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='browseItem' fullname='org.igniterealtime.xiff.core:IBrowser/org.igniterealtime.xiff.core:IBrowser:browseItem' isStatic='false' isFinal='false' isOverride='false'  param_names='id;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;Function;Function' param_defaults='undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
</method>
<method name='getNodeInfo' fullname='org.igniterealtime.xiff.core:IBrowser/org.igniterealtime.xiff.core:IBrowser:getNodeInfo' isStatic='false' isFinal='false' isOverride='false'  param_names='service;node;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;String;Function;Function' param_defaults='undefined;undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
</method>
<method name='getNodeItems' fullname='org.igniterealtime.xiff.core:IBrowser/org.igniterealtime.xiff.core:IBrowser:getNodeItems' isStatic='false' isFinal='false' isOverride='false'  param_names='service;node;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;String;Function;Function' param_defaults='undefined;undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
</method>
<method name='getServiceInfo' fullname='org.igniterealtime.xiff.core:IBrowser/org.igniterealtime.xiff.core:IBrowser:getServiceInfo' isStatic='false' isFinal='false' isOverride='false'  param_names='server;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;Function;Function' param_defaults='undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
</method>
<method name='getServiceItems' fullname='org.igniterealtime.xiff.core:IBrowser/org.igniterealtime.xiff.core:IBrowser:getServiceItems' isStatic='false' isFinal='false' isOverride='false'  param_names='server;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;Function;Function' param_defaults='undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.core:IBrowser/org.igniterealtime.xiff.core:IBrowser:connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.core:IBrowser/org.igniterealtime.xiff.core:IBrowser:connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<classRec name='AbstractJID' fullname='org.igniterealtime.xiff.core:AbstractJID' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\AbstractJID.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This is a base class for the JID (Jabber Identifier) classes.
	 	 <p>This class should not be instantiated directly, but should be subclassed
	 instead.</p>
	 	 <p>It provides functionality to determine if a JID is valid, as well as extract the
	 node, domain and resource from the JID.</p>
	 	 <p>The structure of JID is defined in RFC3920:</p>
	 <ul>
	 <li><code>jid = [ node "&#64;" ] domain [ "/" resource ]</code></li>
	 <li><code>domain = fqdn / address-literal</code></li>
	 <li><code>fqdn = (sub-domain 1"." sub-domain))</code></li>
	 <li><code>sub-domain = (internationalized domain label)</code></li>
	 <li><code>address-literal = IPv4address / IPv6address</code></li>
	 </ul>
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-3
	 ]]></see>
<exampleText><![CDATA[room&#64;service/nick
	 ]]></exampleText>
</classRec>
<method name='AbstractJID' fullname='org.igniterealtime.xiff.core:AbstractJID/AbstractJID' isStatic='false' isFinal='false' isOverride='false'  param_names='inJID;validate' param_types='String;Boolean' param_defaults='undefined;false' result_type='*'>
<description><![CDATA[
		 Creates a new AbstractJID object. Used via EscapedJID or UnescapedJID.
		 		 <p>Each allowable portion of a JID (node identifier, domain identifier, and resource identifier)
		 MUST NOT be more than 1023 bytes in length, resulting in a maximum total size
		 (including the &#64; and / separators) of 3071 bytes.</p>
		 		 ]]></description>
<param><![CDATA[inJID The JID as a String.
		 ]]></param>
<param><![CDATA[validate True if the JID should be validated.
		 ]]></param>
</method>
<method name='escapedNode' fullname='org.igniterealtime.xiff.core:AbstractJID/escapedNode' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Provides functionality to convert a JID to an escaped format.
		 		 ]]></description>
<param><![CDATA[n The string to escape.
		 		 ]]></param>
<return><![CDATA[The escaped string.
		 		 TODO: simplify with native methods
		 ]]></return>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/package.html#encodeURIComponent%28%29
		 ]]></see>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.core:AbstractJID/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Converts JID represented by this class to a String.
		 		 ]]></description>
<return><![CDATA[The JID as a String.
		 ]]></return>
</method>
<method name='unescapedNode' fullname='org.igniterealtime.xiff.core:AbstractJID/unescapedNode' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Provides functionality to return an escaped JID into a normal String.
		 		 ]]></description>
<param><![CDATA[n The string to unescape.
		 		 ]]></param>
<return><![CDATA[The unescaped string.
		 ]]></return>
</method>
<method name='bareJID' fullname='org.igniterealtime.xiff.core:AbstractJID/bareJID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The JID without the resource.
		 ]]></description>
</method>
<method name='domain' fullname='org.igniterealtime.xiff.core:AbstractJID/domain/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The domain portion of the JID.
		 ]]></description>
</method>
<method name='node' fullname='org.igniterealtime.xiff.core:AbstractJID/node/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The node portion of the JID.
		 ]]></description>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.core:AbstractJID/resource/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The resource portion of the JID.
		 ]]></description>
</method>
<field name='BYTE_LIMIT_ITEM' fullname='org.igniterealtime.xiff.core:AbstractJID/private:BYTE_LIMIT_ITEM' type='uint' isStatic='false' isConst='true' defaultValue='1023' >
</field>
<field name='BYTE_LIMIT_TOTAL' fullname='org.igniterealtime.xiff.core:AbstractJID/private:BYTE_LIMIT_TOTAL' type='uint' isStatic='false' isConst='true' defaultValue='3071' >
</field>
<field name='_domain' fullname='org.igniterealtime.xiff.core:AbstractJID/protected:_domain' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_node' fullname='org.igniterealtime.xiff.core:AbstractJID/protected:_node' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_resource' fullname='org.igniterealtime.xiff.core:AbstractJID/protected:_resource' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='jidNodeValidator' fullname='org.igniterealtime.xiff.core:AbstractJID/protected:jidNodeValidator' type='RegExp' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='quoteregex2' fullname='org.igniterealtime.xiff.core:AbstractJID/private:quoteregex2' type='RegExp' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='quoteregex' fullname='org.igniterealtime.xiff.core:AbstractJID/private:quoteregex' type='RegExp' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='Browser' fullname='org.igniterealtime.xiff.core:Browser' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\Browser.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.core:IBrowser' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0030: Service Discovery
	 	 <p>This class provides a means of querying for available services on an XMPP
	 server using the Disco protocol extension. For more information on Disco,
	 take a look at
	 <a href="http://xmpp.org/extensions/xep-0030.html">XEP-0030</a> and
	 <a href="http://xmpp.org/extensions/xep-0011.html">XEP-0011 (obsolete)</a> for the
	 protocol enhancement specifications.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0011.html
	 ]]></see>
</classRec>
<method name='Browser' fullname='org.igniterealtime.xiff.core:Browser/Browser' isStatic='false' isFinal='false' isOverride='false'  param_names='aConnection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Creates a new Browser object.
		 		 ]]></description>
<param><![CDATA[aConnection A reference to the <code>XMPPConnection</code> instance to use.
		 ]]></param>
</method>
<method name='browseItem' fullname='org.igniterealtime.xiff.core:Browser/browseItem' isStatic='false' isFinal='false' isOverride='false'  param_names='id;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;Function;Function' param_defaults='undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
<description><![CDATA[
		 Use the <strong>OBSOLETE</strong> <code>BrowseExtension</code> (jabber:iq:browse namespace)
		 to query a resource for supported features and children.
		 		 ]]></description>
<param><![CDATA[id The full JabberID to query for service items
		 ]]></param>
<param><![CDATA[callback The callback function to call when results are retrieved
		 ]]></param>
<param><![CDATA[errorCallback The callback function to call when errors are received
		 ]]></param>
<return><![CDATA[org.igniterealtime.xiff.data.IQ
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0011.html
		 ]]></see>
</method>
<method name='getNodeInfo' fullname='org.igniterealtime.xiff.core:Browser/getNodeInfo' isStatic='false' isFinal='false' isOverride='false'  param_names='service;node;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;String;Function;Function' param_defaults='undefined;undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[service
		 ]]></param>
<param><![CDATA[node
		 ]]></param>
<param><![CDATA[callback
		 ]]></param>
<param><![CDATA[errorCallback
		 ]]></param>
<return><![CDATA[org.igniterealtime.xiff.data.IQ
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html#info-nodes
		 ]]></see>
</method>
<method name='getNodeItems' fullname='org.igniterealtime.xiff.core:Browser/getNodeItems' isStatic='false' isFinal='false' isOverride='false'  param_names='service;node;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;String;Function;Function' param_defaults='undefined;undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[service
		 ]]></param>
<param><![CDATA[node
		 ]]></param>
<param><![CDATA[callback
		 ]]></param>
<param><![CDATA[errorCallback
		 ]]></param>
<return><![CDATA[org.igniterealtime.xiff.data.IQ
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html#items-nodes
		 ]]></see>
</method>
<method name='getServiceInfo' fullname='org.igniterealtime.xiff.core:Browser/getServiceInfo' isStatic='false' isFinal='false' isOverride='false'  param_names='server;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;Function;Function' param_defaults='undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
<description><![CDATA[
		 Retrieves a list of available service information from the server specified. On successful query,
		 the callback specified will be called and passed a single parameter containing
		 a reference to an <code>IQ</code> containing the query results.
		 		 <pre>
		 <iq to="192.168.1.37" type="get" id="iq_4">
		  <query xmlns="http://jabber.org/protocol/disco#info"/>
		 </iq>
		 </pre>
		 		 ]]></description>
<param><![CDATA[server The server to query for available service information
		 ]]></param>
<param><![CDATA[callback The callback function to call when results are retrieved
		 ]]></param>
<param><![CDATA[errorCallback The callback function to call when errors are received
		 ]]></param>
<return><![CDATA[org.igniterealtime.xiff.data.IQ
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html#info
		 ]]></see>
</method>
<method name='getServiceItems' fullname='org.igniterealtime.xiff.core:Browser/getServiceItems' isStatic='false' isFinal='false' isOverride='false'  param_names='server;callback;errorCallback' param_types='org.igniterealtime.xiff.core:EscapedJID;Function;Function' param_defaults='undefined;undefined;null' result_type='org.igniterealtime.xiff.data:IIQ'>
<description><![CDATA[
		 Retrieves a list of available services items from the server specified. Items include things such
		 as available transports and user directories. On successful query, the callback specified in the will be
		 called and passed a single parameter containing the query results.
		 		 <pre>
		 <iq to="192.168.1.37" type="get" id="iq_3">
		 <query xmlns="http://jabber.org/protocol/disco#items"/>
		 </iq>
		 </pre>
		 		 ]]></description>
<param><![CDATA[server The server to query for service items
		 ]]></param>
<param><![CDATA[callback The callback function to call when results are retrieved
		 ]]></param>
<param><![CDATA[errorCallback The callback function to call when errors are received
		 ]]></param>
<return><![CDATA[org.igniterealtime.xiff.data.IQ
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html#items
		 ]]></see>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.core:Browser/connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
<description><![CDATA[
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.
		 ]]></description>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.core:Browser/connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<field name='_connection' fullname='org.igniterealtime.xiff.core:Browser/private:_connection' type='org.igniterealtime.xiff.core:IXMPPConnection' isStatic='false' isConst='false' >
</field>
<field name='_pending' fullname='org.igniterealtime.xiff.core:Browser/private:_pending' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='EscapedJID' fullname='org.igniterealtime.xiff.core:EscapedJID' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\EscapedJID.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='org.igniterealtime.xiff.core:AbstractJID' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides access to a JID (Jabber ID) in escaped form.
	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0106.html
	 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-3
	 ]]></see>
</classRec>
<method name='EscapedJID' fullname='org.igniterealtime.xiff.core:EscapedJID/EscapedJID' isStatic='false' isFinal='false' isOverride='false'  param_names='inJID;validate' param_types='String;Boolean' param_defaults='undefined;false' result_type='*'>
<description><![CDATA[
		 Creates a new EscapedJID object.
		 		 ]]></description>
<param><![CDATA[inJID The JID in String form.
		 ]]></param>
<param><![CDATA[validate Will validate the JID string if true. Invalid
		 JIDs will throw an error.
		 ]]></param>
</method>
<method name='equals' fullname='org.igniterealtime.xiff.core:EscapedJID/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='testJID;shouldTestBareJID' param_types='org.igniterealtime.xiff.core:EscapedJID;Boolean' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[
		 Determines if two escaped JIDs are equivalent.
		 		 ]]></description>
<param><![CDATA[testJID The JID with which to test equivalency.
		 		 ]]></param>
<return><![CDATA[True if the JIDs are equivalent.
		 ]]></return>
</method>
<method name='unescaped' fullname='org.igniterealtime.xiff.core:EscapedJID/unescaped/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
<description><![CDATA[
		 The escaped JID in unescaped form.
		 ]]></description>
</method>
<classRec name='UnescapedJID' fullname='org.igniterealtime.xiff.core:UnescapedJID' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\UnescapedJID.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='org.igniterealtime.xiff.core:AbstractJID' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class provides access to a JID (Jabber ID) in unescaped form.
	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-3
	 ]]></see>
</classRec>
<method name='UnescapedJID' fullname='org.igniterealtime.xiff.core:UnescapedJID/UnescapedJID' isStatic='false' isFinal='false' isOverride='false'  param_names='inJID;validate' param_types='String;Boolean' param_defaults='undefined;false' result_type='*'>
<description><![CDATA[
		 Creates a new UnescapedJID object.
		 		 ]]></description>
<param><![CDATA[inJID The JID in String form.
		 ]]></param>
<param><![CDATA[validate Will validate the JID string if true. Invalid
		 JIDs will throw an error.
		 ]]></param>
</method>
<method name='equals' fullname='org.igniterealtime.xiff.core:UnescapedJID/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='testJID;shouldTestBareJID' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[
		 Determines if two unescaped JIDs are equivalent.
		 		 ]]></description>
<param><![CDATA[testJID The JID with which to test equivalency.
		 		 ]]></param>
<return><![CDATA[True if the JIDs are equivalent.
		 ]]></return>
</method>
<method name='escaped' fullname='org.igniterealtime.xiff.core:UnescapedJID/escaped/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The unescaped JID in escaped form.
		 ]]></description>
</method>
<interfaceRec name='IXMPPConnection' fullname='org.igniterealtime.xiff.core:IXMPPConnection' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\IXMPPConnection.as' namespace='org.igniterealtime.xiff.core' access='public' baseClasses='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Interface for the XMPP Connection classes
	 ]]></description>
</interfaceRec>
<method name='connect' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:connect' isStatic='false' isFinal='false' isOverride='false'  param_names='streamType' param_types='uint' param_defaults='0' result_type='void'>
</method>
<method name='disableExtensions' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:disableExtensions' isStatic='false' isFinal='false' isOverride='false'  param_names='exts' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='disconnect' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:disconnect' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='enableExtensions' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:enableExtensions' isStatic='false' isFinal='false' isOverride='false'  param_names='exts' param_types='restParam' param_defaults='undefined' result_type='void'>
</method>
<method name='sendKeepAlive' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:sendKeepAlive' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='send' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:send' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='org.igniterealtime.xiff.data:IXMPPStanza' param_defaults='undefined' result_type='void'>
</method>
<method name='active' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:active/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='compress' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:compress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='domain' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:domain/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='incomingBytes' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:incomingBytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
</method>
<method name='loggedIn' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:loggedIn/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='outgoingBytes' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:outgoingBytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='port' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:port/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='queuePresences' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:queuePresences/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:resource/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='server' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:server/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='useAnonymousLogin' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:useAnonymousLogin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='username' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:username/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='active' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:active/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='compress' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:compress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='domain' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:domain/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='loggedIn' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:loggedIn/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='port' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:port/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='queuePresences' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:queuePresences/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:resource/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='server' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:server/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='useAnonymousLogin' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:useAnonymousLogin/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='username' fullname='org.igniterealtime.xiff.core:IXMPPConnection/org.igniterealtime.xiff.core:IXMPPConnection:username/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IListener' fullname='org.igniterealtime.xiff.core:IListener' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\IListener.as' namespace='org.igniterealtime.xiff.core' access='public' baseClasses='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='connection' fullname='org.igniterealtime.xiff.core:IListener/org.igniterealtime.xiff.core:IListener:connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.core:IListener/org.igniterealtime.xiff.core:IListener:connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<classRec name='XMPPConnection' fullname='org.igniterealtime.xiff.core:XMPPConnection' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\XMPPConnection.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='flash.events:EventDispatcher' interfaces='org.igniterealtime.xiff.core:IXMPPConnection' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class is used to connect to and manage data coming from an XMPP server.
	 Use one instance of this class per connection.
	 ]]></description>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' type='org.igniterealtime.xiff.events.IQEvent' >
<description><![CDATA[
	 Dispatched on incoming IQ data that has an enabled extension.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.IQEvent
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='presence' type='org.igniterealtime.xiff.events.PresenceEvent' >
<description><![CDATA[
	 Dispatched on incoming presence data.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.PresenceEvent.PRESENCE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='outgoingData' type='org.igniterealtime.xiff.events.OutgoingDataEvent' >
<description><![CDATA[
	 Dispatched whenever data is sent to the server.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.OutgoingDataEvent.OUTGOING_DATA
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='message' type='org.igniterealtime.xiff.events.MessageEvent' >
<description><![CDATA[
	 Dispatched on incoming messages.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.MessageEvent.MESSAGE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='login' type='org.igniterealtime.xiff.events.LoginEvent' >
<description><![CDATA[
	 Dispatched on successful authentication (login) with the server.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.LoginEvent.LOGIN
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='incomingData' type='org.igniterealtime.xiff.events.IncomingDataEvent' >
<description><![CDATA[
	 Dispatched whenever there is incoming XML data.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.IncomingDataEvent.INCOMING_DATA
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='error' type='org.igniterealtime.xiff.events.XIFFErrorEvent' >
<description><![CDATA[
	 Dispatched when there is some type of XMPP error.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.XIFFErrorEvent.XIFF_ERROR
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='disconnection' type='org.igniterealtime.xiff.events.DisconnectionEvent' >
<description><![CDATA[
	 Dispatched when there is a disconnection from the server.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.DisconnectionEvent.DISCONNECT
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:XMPPConnection' name='connection' type='org.igniterealtime.xiff.events.ConnectionSuccessEvent' >
<description><![CDATA[
	 Dispatched when the connection is successfully made to the server.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.ConnectionSuccessEvent.CONNECT_SUCCESS
	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='XMPPConnection' fullname='org.igniterealtime.xiff.core:XMPPConnection/XMPPConnection' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 Constructor. By default will enable the following extensions:
		 		 <ul>
		 <li>AuthExtension, any kind of authentication</li>
		 <li>BindExtension, resource binding</li>
		 <li>SessionExtension</li>
		 <li>PingExtension, for keeping the connection alive</li>
		 <li>InfoDiscoExtension, for outgoing Service Discovery</li>
		 </ul>
		 ]]></description>
</method>
<method name='addIQCallbackToPending' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:addIQCallbackToPending' isStatic='false' isFinal='false' isOverride='false'  param_names='id;callback;errorCallback' param_types='String;Function;Function' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[id
		 ]]></param>
<param><![CDATA[callback
		 ]]></param>
<param><![CDATA[errorCallback
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='beginAuthentication' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:beginAuthentication' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 SASL Authentication should been set up, begin the authentication
		 process by sending the initial request.
		 		 <p>Make sure that the username and password are set, or the connection is using
		 anonymous authentication before calling this method.</p>
		 ]]></description>
</method>
<method name='bindConnection_error' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:bindConnection_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='bindConnection_response' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:bindConnection_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='bindConnection' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:bindConnection' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Upon being so informed that resource binding is required, the client
		 MUST bind a resource to the stream by sending to the server an IQ
		 stanza of type "set" (see IQ Semantics (Section 9.2.3)) containing
		 data qualified by the 'urn:ietf:params:xml:ns:xmpp-bind' namespace.
		 		 <p>If the client wishes to allow the server to generate the resource
		 identifier on its behalf, it sends an IQ stanza of type "set" that
		 contains an empty <strong>bind</strong> element.</p>
		 		 <p>Client asks server to bind a resource:
		 <pre>
		 <iq type='set' id='bind_1'>
		  <bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/>
		 </iq>
		 </pre></p>
		 ]]></description>
</method>
<method name='checkIncomingData' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:checkIncomingData' isStatic='false' isFinal='false' isOverride='false'  param_names='bytedata' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='XML'>
<description><![CDATA[
		 Check if the incoming data is complete once added to any existing
		 incoming data.
		 		 ]]></description>
<param><![CDATA[data
		 ]]></param>
<return><![CDATA[XML that is complete, or just null in case it is not complete
		 ]]></return>
</method>
<method name='chooseStreamTags' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:chooseStreamTags' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='uint' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Choose the stream start and ending tags based on the given type.
		 		 ]]></description>
<param><![CDATA[type	One of the <code>STREAM_TYPE_...</code> constants of this class.
		 ]]></param>
</method>
<method name='configureAuthMechanisms' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:configureAuthMechanisms' isStatic='false' isFinal='false' isOverride='false'  param_names='mechanisms' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Use the authentication which is first in the list (<code>saslMechanisms</code>) if possible.
		 		 ]]></description>
<param><![CDATA[mechanisms
		 ]]></param>
<see><![CDATA[#saslMechanisms
		 ]]></see>
</method>
<method name='configureStreamCompression' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:configureStreamCompression' isStatic='false' isFinal='false' isOverride='false'  param_names='method' param_types='String' param_defaults='zlib' result_type='void'>
<description><![CDATA[
		 Zlib is the most common and the one which is required to be implemented in case
		 Stream Compression is used.
		 		 <p>Ask the server to enable Zlib compression of the stream.</p>
		 <p>Supported types in XMPP are <code>zlib</code> and <code>lzw</code>.</p>
		 <p>XIFF however only supports <code>zlib</code> and only after the Adler32 checksum is somehow implemented.</p>
		 		 <p>Flash Player 11.4, code named "Dolores" (second half of 2012) will have LZMA ByteArray compression available...</p>
		 		 ]]></description>
<see><![CDATA[http://www.adobe.com/devnet/flashplatform/whitepapers/roadmap.html
		 ]]></see>
<see><![CDATA[http://xmpp.org/registrar/compress.html
		 ]]></see>
</method>
<method name='connect' fullname='org.igniterealtime.xiff.core:XMPPConnection/connect' isStatic='false' isFinal='false' isOverride='false'  param_names='streamType' param_types='uint' param_defaults='0' result_type='void'>
<description><![CDATA[
		 Connects to the server. Use one of the STREAM_TYPE_.. constants.
		 Possible options are:
		 <ul>
		 <li>standard (default)</li>
		 <li>standard terminated</li>
		 <li>flash</li>
		 <li>flash terminated</li>
		 </ul>
		 Some servers, like Jabber, Inc.'s XCP and Jabberd 1.4 expect &lt;flash:stream&gt; from
		 a Flash client instead of the standard &lt;stream:stream&gt;.
		 		 ]]></description>
<param><![CDATA[streamType Any of the STREAM_TYPE_.. constants.
		 ]]></param>
</method>
<method name='createConnection' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:createConnection' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Set up the connection and listeners related to this class.
		 		 <p>This method should be overridden in any class that would extend this one
		 and provide alternative way for connectiong, such as BOSH or TLSSocket.</p>
		 		 ]]></description>
<see><![CDATA[flash.net.Socket
		 ]]></see>
</method>
<method name='disableExtensions' fullname='org.igniterealtime.xiff.core:XMPPConnection/disableExtensions' isStatic='false' isFinal='false' isOverride='false'  param_names='exts' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Disable the given extensions from the registery.
		 This is mainly useful only at runtime.
		 ]]></description>
</method>
<method name='disableSASLMechanism' fullname='org.igniterealtime.xiff.core:XMPPConnection/disableSASLMechanism' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Remove a SASL mechanism from this connection
		 		 ]]></description>
<param><![CDATA[name
		 ]]></param>
</method>
<method name='disconnect' fullname='org.igniterealtime.xiff.core:XMPPConnection/disconnect' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Disconnects from the server if currently connected. After disconnect,
		 a <code>DisconnectionEvent.DISCONNECT</code> event is broadcast.
		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.events.DisconnectionEvent
		 ]]></see>
</method>
<method name='dispatchError' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:dispatchError' isStatic='false' isFinal='false' isOverride='false'  param_names='condition;message;type;code;extension' param_types='String;String;String;int;org.igniterealtime.xiff.data:Extension' param_defaults='undefined;undefined;undefined;0;null' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[condition
		 ]]></param>
<param><![CDATA[message
		 ]]></param>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[code Legacy code, try not to use. Will be removed in XIFF 3.2.0
		 ]]></param>
<param><![CDATA[extension
		 ]]></param>
<exampleText><![CDATA[dispatchError("bind-failed", "BindExtension came without a JID");
		 		 ]]></exampleText>
</method>
<method name='enableExtensions' fullname='org.igniterealtime.xiff.core:XMPPConnection/enableExtensions' isStatic='false' isFinal='false' isOverride='false'  param_names='exts' param_types='restParam' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Enable the given extensions for interacting with the incoming data.
		 Once an extension is enabled, it can be listened by adding an event
		 listener to its namespace.
		 		 <p>Some extensions might responce to an incoming request, such as
		 SoftwareVersionExtension if enabled</p>
		 		 <p>Notes about extension dependencies:</p>
		 		 <ul>
		 <li>If you will need <code>Message.htmlBody</code>, use <code>XHTMLExtension</code>.</li>
		 <li><code>SearchExtension</code> will need <code>FormExtension</code> to be enabled.</li>
		 <li>Plan to use <code>Roster</code>? Enable <code>RosterExtension</code></li>
		 <li><code>BookmarkManager</code> needs <code>BookmarkPrivatePayload</code> to be enabled</li>
		 <li><code>Browser</code> needs <code>ItemDiscoExtension</code>, <code>InfoDiscoExtension</code> and <code>BrowseExtension</code></li>
		 <li><code>Room</code> will enable <code>MUC</code> and <code>FormExtension</code> by itself</li>
		 </ul>
		 ]]></description>
</method>
<method name='enableSASLMechanism' fullname='org.igniterealtime.xiff.core:XMPPConnection/enableSASLMechanism' isStatic='false' isFinal='false' isOverride='false'  param_names='name;authClass' param_types='String;Class' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Add a SASL mechanism available for this connection
		 		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[authClass
		 ]]></param>
</method>
<method name='establishSession_error' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:establishSession_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='establishSession_response' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:establishSession_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='establishSession' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:establishSession' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Runs after binding
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3921#section-3
		 ]]></see>
</method>
<method name='flushPresenceQueue' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:flushPresenceQueue' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Dispatches a single PresenceEvent in case there are any in the
		 queue. This event will contain all the presences available at this
		 given moment.
		 		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='handleAuthentication' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleAuthentication' isStatic='false' isFinal='false' isOverride='false'  param_names='response' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Upon receiving a success indication within the SASL negotiation, the
		 client MUST send a new stream header to the server, to which the
		 server MUST respond with a stream header as well as a list of
		 available stream features.
		 		 ]]></description>
<param><![CDATA[response
		 ]]></param>
</method>
<method name='handleChallenge' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleChallenge' isStatic='false' isFinal='false' isOverride='false'  param_names='challenge' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[challenge
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='handleIQ' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleIQ' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='org.igniterealtime.xiff.data:IQ'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[node
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='handleMessage' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 TODO: Add similar extension handling as in IQ,
		 after message specific extensions are separated from Message class, v3.2.0
		 		 ]]></description>
<param><![CDATA[node
		 ]]></param>
</method>
<method name='handleNodeType' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleNodeType' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Calls a appropriate parser base on the nodeName.
		 ]]></description>
<param><![CDATA[node
		 ]]></param>
</method>
<method name='handlePresence' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handlePresence' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='org.igniterealtime.xiff.data:Presence'>
<description><![CDATA[
		 Handle the incoming <code>Presence</code> either with the queue timer or directly
		 dispatching the <code>PresenceEvent</code>. In both cases the event occurs right after
		 this method.
		 		 ]]></description>
<param><![CDATA[node
		 ]]></param>
</method>
<method name='handleStreamError' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleStreamError' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Handle stream error related element.
		 		 <p>RFC 3920 (XMPP Core, published October 2004),
		 in chapters 4.7. defines Stream Errors:</p>
		 		 <p>MUST contain a child element corresponding to one of the defined
		 stanza error conditions defined below; this element MUST be
		 qualified by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace.</p>
		 		 <p>MAY contain a <strong>text</strong> child containing XML character data that
		 describes the error in more detail; this element MUST be qualified
		 by the 'urn:ietf:params:xml:ns:xmpp-streams' namespace and SHOULD
		 possess an 'xml:lang' attribute specifying the natural language of
		 the XML character data.</p>
		 		 ]]></description>
<param><![CDATA[node Error node
		 ]]></param>
<see><![CDATA[http://xmpp.org/protocols/urn_ietf_params_xml_ns_xmpp-streams/
		 ]]></see>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-4.7
		 ]]></see>
</method>
<method name='handleStreamFeatures' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleStreamFeatures' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Handle features that are available in the connected server.
		 		 <table>
		 <tbody>
		 <tr>
		 <th>Feature</th>
		 <th>XML Element</th>
		 <th>Description</th>
		 <th>Documentation</th>
		 </tr>
		 <tr>
		 <td>amp</td>
		 <td>&lt;amp xmlns='http://jabber.org/features/amp'&gt;</td><td>Support for Advanced Message Processing</td>
		 <td><a href="http://www.xmpp.org/extensions/xep-0079.html">XEP-0079: Advanced Message Processing</a></td>
		 </tr>
		 <tr>
		 <td>compress</td>
		 <td>&lt;compression xmlns='http://jabber.org/features/compress'&gt;</td>
		 <td>Support for Stream Compression</td>
		 <td><a href="http://www.xmpp.org/extensions/xep-0138.html">XEP-0138: Stream Compression</a></td>
		 </tr>
		 <tr>
		 <td>iq-auth</td>
		 <td>&lt;auth xmlns='http://jabber.org/features/iq-auth'&gt;</td>
		 <td>Support for Non-SASL Authentication</td>
		 <td><a href="http://www.xmpp.org/extensions/xep-0078.html">XEP-0078: Non-SASL Authentication</a></td>
		 </tr>
		 <tr>
		 <td>iq-register</td>
		 <td>&lt;register xmlns='http://jabber.org/features/iq-register'&gt;</td>
		 <td>Support for In-Band Registration</td>
		 <td><a href="http://www.xmpp.org/extensions/xep-0077.html">XEP-0077: In-Band Registration</a></td>
		 </tr>
		 <tr>
		 <td>bind</td>
		 <td>&lt;bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'&gt;</td>
		 <td>Support for Resource Binding</td>
		 <td><a href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</a></td>
		 </tr>
		 <tr>
		 <td>mechanisms</td>
		 <td>&lt;mechanisms xmlns='urn:ietf:params:xml:ns:xmpp-sasl'&gt;</td>
		 <td>Support for Simple Authentication and Security Layer (SASL)</td>
		 <td><a href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</a></td>
		 </tr>
		 <tr>
		 <td>session</td><td>&lt;session xmlns='urn:ietf:params:xml:ns:xmpp-session'&gt;</td>
		 <td>Support for IM Session Establishment</td>
		 <td><a href="http://www.ietf.org/rfc/rfc6121.txt">RFC 6121: XMPP IM</a></td>
		 </tr>
		 <tr>
		 <td>starttls</td>
		 <td>&lt;starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'&gt;</td>
		 <td>Support for Transport Layer Security (TLS)</td>
		 <td><a href="http://www.ietf.org/rfc/rfc6120.txt">RFC 6120: XMPP Core</a></td>
		 </tr>
		 <tr>
		 <td>sm</td>
		 <td>&lt;sm xmlns='urn:xmpp:sm:3'&gt;</td><td>Support for Stream Management</td>
		 <td><a href="http://www.xmpp.org/extensions/xep-0198.html">XEP-0198: Stream Management</a></td>
		 </tr>
		 </tbody>
		 </table>
		 		 <p>The XMPP RFCs define an ordering for the features defined therein, namely:</p>
		 <ol>
		   <li>TLS, requires the use of <code>XMPPTLSConnection</code></li>
		   <li>In-band registration, if registration needed</li>
		   <li>SASL</li>
		   <li>Stream compression, if used</li>
		   <li>Resource binding</li>
		 </ol>
		 		 ]]></description>
<param><![CDATA[node
		 ]]></param>
<see><![CDATA[http://xmpp.org/registrar/stream-features.html
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0170.html
		 ]]></see>
</method>
<method name='handleStreamTLS' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleStreamTLS' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Checks if the TLS feature available is required or not and dispatches
		 an error in case it is.
		 		 <p>A connection class supporting TLS should override this handler.</p>
		 		 ]]></description>
<param><![CDATA[node The feature containing starttls tag.
		 ]]></param>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPRTMPConnection#handleStreamTLS
		 ]]></see>
</method>
<method name='handleStream' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:handleStream' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Initial stream element has been received once this method is called.
		 		 ]]></description>
<param><![CDATA[node
		 ]]></param>
</method>
<method name='onIOError' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:onIOError' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:IOErrorEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 This fires the standard dispatchError method
		 		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='onSecurityError' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:onSecurityError' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:SecurityErrorEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[event
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='onSocketClosed' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:onSocketClosed' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[event
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='onSocketConnected' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:onSocketConnected' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[event
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='onSocketDataReceived' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:onSocketDataReceived' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:ProgressEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[event
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='parseDataReceived' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:parseDataReceived' isStatic='false' isFinal='false' isOverride='false'  param_names='bytedata' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Parses the data which the socket just received.
		 Used to simplify the overrides from classes extending this one.
		 		 <p>Dispatches the <code>IncomingDataEvent</code>. Also takes care
		 of increasing the incoming bytes statistic.</p>
		 		 ]]></description>
<param><![CDATA[bytedata
		 ]]></param>
</method>
<method name='removeSocketEventListeners' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:removeSocketEventListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Remove those listeners that the <code>createConnection</code> method added.
		 ]]></description>
</method>
<method name='restartStream' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:restartStream' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='sendDataToServer' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:sendDataToServer' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Overwrite this method to use other kind of socket,
		 request or connection, if needed.
		 <p>Then use the sendXML method when sending XML.</p>
		 ]]></description>
</method>
<method name='sendData' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:sendData' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Dispatches <code>OutgoingDataEvent</code>, handles possible Stream Compression and
		 calls <code>sendDataToServer</code>.
		 		 <p>Also takes care of increasing the outgoing bytes statistic.</p>
		 		 ]]></description>
<param><![CDATA[data XML that is not always complete for a reason, like sending the closing element
		 ]]></param>
</method>
<method name='sendKeepAlive_error' fullname='org.igniterealtime.xiff.core:XMPPConnection/private:sendKeepAlive_error' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='sendKeepAlive_response' fullname='org.igniterealtime.xiff.core:XMPPConnection/private:sendKeepAlive_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='sendKeepAlive' fullname='org.igniterealtime.xiff.core:XMPPConnection/sendKeepAlive' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Sends ping to server in order to keep the connection alive, in case the server
		 has not indicated that it would not support it.
		 		 TODO: Whitespace keepalive if ping not supported...
		 ]]></description>
</method>
<method name='sendXML' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:sendXML' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Pass through to <code>sendData</code> which takes care of the common
		 data handling between all connection classes.
		 		 ]]></description>
<param><![CDATA[data
		 ]]></param>
</method>
<method name='send' fullname='org.igniterealtime.xiff.core:XMPPConnection/send' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='org.igniterealtime.xiff.data:IXMPPStanza' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sends data to the server. If the data to send cannot be serialized properly,
		 this method throws a <code>SerializeException</code>.
		 		 ]]></description>
<example><![CDATA[The following example sends a basic chat message to the user with the
		 JID "sideshowbob&#64;springfieldpenitentiary.gov".<br />
		 <code>var message:Message = new Message( "sideshowbob&#64;springfieldpenitentiary.gov", null, "Hi Bob.",
		 "<b>Hi Bob.</b>", Message.TYPE_CHAT );
		 myXMPPConnection.send( message );</code>
		 ]]></example>
<param><![CDATA[data The data to send. This must be an instance of a class that implements the INodeProxy interface.
		 ]]></param>
<see><![CDATA[org.igniterealtime.xiff.data.INodeProxy
		 ]]></see>
</method>
<method name='serviceDiscoveryResponce' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:serviceDiscoveryResponce' isStatic='false' isFinal='false' isOverride='false'  param_names='to;id' param_types='org.igniterealtime.xiff.core:EscapedJID;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Send a response to the Service Discovery query.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
		 ]]></see>
</method>
<method name='active' fullname='org.igniterealtime.xiff.core:XMPPConnection/active/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Determines whether the connection with the server is currently active.
		 		 <p>Not necessarily logged in. For login status, use the
		 <code>loggedIn</code> method.</p>
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection#loggedIn
		 ]]></see>
</method>
<method name='compress' fullname='org.igniterealtime.xiff.core:XMPPConnection/compress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Shall the Stream Compression be allowed if the server supports it.
		 		 <p><code>compressor</code> needs to be set too.</p>
		 		 ]]></description>
<default><![CDATA[false
		 ]]></default>
<see><![CDATA[http://xmpp.org/extensions/xep-0138.html
		 ]]></see>
</method>
<method name='compressor' fullname='org.igniterealtime.xiff.core:XMPPConnection/compressor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.util:ICompressor'>
<description><![CDATA[
		 The class that is to be used for Stream Compression if enabled.
		 		 ]]></description>
<default><![CDATA[null
		 ]]></default>
<see><![CDATA[http://xmpp.org/extensions/xep-0138.html
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.util.Zlib
		 ]]></see>
<exampleText><![CDATA[_connection.compressor = new Zlib();
		 ]]></exampleText>
</method>
<method name='domain' fullname='org.igniterealtime.xiff.core:XMPPConnection/domain/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The XMPP domain to use with the server.
		 User domain. Used as the server unless <code>server</code> is specifically set to something different.
		 ]]></description>
<exampleText><![CDATA[gmail.com
		 ]]></exampleText>
</method>
<method name='incomingBytes' fullname='org.igniterealtime.xiff.core:XMPPConnection/incomingBytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Get the total count of the received bytes in the current session.
		 <p>Mainly useful for tracking network traffic.</p>
		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.core:XMPPConnection/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
<description><![CDATA[
		 Gets the fully qualified unescaped JID of the user.
		 <p>A fully-qualified JID includes the resource. A bare JID does not.
		 To get the bare JID, use the <code>bareJID</code> property of the UnescapedJID.</p>
		 		 ]]></description>
<return><![CDATA[The fully qualified unescaped JID
		 ]]></return>
<see><![CDATA[org.igniterealtime.xiff.core.UnescapedJID#bareJID
		 ]]></see>
</method>
<method name='loggedIn' fullname='org.igniterealtime.xiff.core:XMPPConnection/loggedIn/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Determines whether the user is connected and logged into the server.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection#active
		 ]]></see>
</method>
<method name='openConnections' fullname='org.igniterealtime.xiff.core:XMPPConnection/openConnections/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Reference to all active connections.
		 ]]></description>
</method>
<method name='outgoingBytes' fullname='org.igniterealtime.xiff.core:XMPPConnection/outgoingBytes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Get the total count of the bytes sent in the current session.
		 Mainly useful for tracking network traffic.
		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.core:XMPPConnection/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The password to use when logging in.
		 ]]></description>
</method>
<method name='port' fullname='org.igniterealtime.xiff.core:XMPPConnection/port/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 The port to use when connecting.
		 ]]></description>
<default><![CDATA[5222
		 ]]></default>
</method>
<method name='queuePresences' fullname='org.igniterealtime.xiff.core:XMPPConnection/queuePresences/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Should the connection queue presence events for a small interval so that it can
		 send multiple in a batch?
		 		 ]]></description>
<default><![CDATA[true To maintain original behavior -- has to be explicitly set to false to disable.
		 ]]></default>
</method>
<method name='registrationSupported' fullname='org.igniterealtime.xiff.core:XMPPConnection/registrationSupported/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Does the connection support registration.
		 Find out after initial features have arrived.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.core.InBandRegistrator
		 ]]></see>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.core:XMPPConnection/resource/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The resource to use when logging in. A resource is required (defaults to "XIFF") and
		 allows a user to login using the same account simultaneously (most likely from multiple machines).
		 Typical examples of the resource include "Home" or "Office" to indicate the user's current location.
		 ]]></description>
</method>
<method name='server' fullname='org.igniterealtime.xiff.core:XMPPConnection/server/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The XMPP server to use for connection.
		 Server to connect, could be different of the login/user domain.
		 ]]></description>
<exampleText><![CDATA[talk.google.com
		 ]]></exampleText>
</method>
<method name='useAnonymousLogin' fullname='org.igniterealtime.xiff.core:XMPPConnection/useAnonymousLogin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Whether to use anonymous login or not.
		 ]]></description>
</method>
<method name='username' fullname='org.igniterealtime.xiff.core:XMPPConnection/username/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The username to use for connection. If this property is null when <code>connect()</code> is called,
		 the class will fetch registration field data rather than attempt to login.
		 ]]></description>
</method>
<method name='active' fullname='org.igniterealtime.xiff.core:XMPPConnection/active/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='compress' fullname='org.igniterealtime.xiff.core:XMPPConnection/compress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='compressor' fullname='org.igniterealtime.xiff.core:XMPPConnection/compressor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.util:ICompressor' param_defaults='undefined' result_type='void'>
</method>
<method name='domain' fullname='org.igniterealtime.xiff.core:XMPPConnection/domain/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='loggedIn' fullname='org.igniterealtime.xiff.core:XMPPConnection/loggedIn/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.core:XMPPConnection/password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='port' fullname='org.igniterealtime.xiff.core:XMPPConnection/port/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='queuePresences' fullname='org.igniterealtime.xiff.core:XMPPConnection/queuePresences/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.core:XMPPConnection/resource/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='server' fullname='org.igniterealtime.xiff.core:XMPPConnection/server/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='useAnonymousLogin' fullname='org.igniterealtime.xiff.core:XMPPConnection/useAnonymousLogin/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='username' fullname='org.igniterealtime.xiff.core:XMPPConnection/username/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='STREAM_TYPE_FLASH_TERMINATED' fullname='org.igniterealtime.xiff.core:XMPPConnection/STREAM_TYPE_FLASH_TERMINATED' type='uint' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[
		 Stream type lets user set opening/closing tag.
		 <code>&lt;flash:stream /&gt;</code>
		 ]]></description>
</field>
<field name='STREAM_TYPE_FLASH' fullname='org.igniterealtime.xiff.core:XMPPConnection/STREAM_TYPE_FLASH' type='uint' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[
		 Stream type lets user set opening/closing tag.
		 <code>&lt;flash:stream&gt;</code>
		 ]]></description>
</field>
<field name='STREAM_TYPE_STANDARD_TERMINATED' fullname='org.igniterealtime.xiff.core:XMPPConnection/STREAM_TYPE_STANDARD_TERMINATED' type='uint' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[
		 Stream type lets user set opening/closing tag.
		 <code>&lt;stream:stream /&gt;</code>
		 ]]></description>
</field>
<field name='STREAM_TYPE_STANDARD' fullname='org.igniterealtime.xiff.core:XMPPConnection/STREAM_TYPE_STANDARD' type='uint' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[
		 Stream type lets user set opening/closing tag.
		 <code>&lt;stream:stream&gt;</code>
		 ]]></description>
</field>
<field name='_active' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_active' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_compress' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_compress' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_compressor' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_compressor' type='org.igniterealtime.xiff.util:ICompressor' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[
		 Static class that is used to handle the compression
		 ]]></description>
</field>
<field name='_domain' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_domain' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
<exampleText><![CDATA[gmail.com
		 ]]></exampleText>
</field>
<field name='_incomingBytes' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_incomingBytes' type='uint' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_loggedIn' fullname='org.igniterealtime.xiff.core:XMPPConnection/private:_loggedIn' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_openConnections' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_openConnections' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_outgoingBytes' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_outgoingBytes' type='uint' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_password' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_password' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_port' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_port' type='uint' isStatic='false' isConst='false' defaultValue='5222' >
<description><![CDATA[
		 ]]></description>
<default><![CDATA[5222
		 ]]></default>
<private><![CDATA[]]></private>
</field>
<field name='_queuePresences' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_queuePresences' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_registrationSupported' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_registrationSupported' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_resource' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_resource' type='String' isStatic='false' isConst='false' defaultValue='xiff' >
<description><![CDATA[
		 ]]></description>
<default><![CDATA[xiff
		 ]]></default>
<private><![CDATA[]]></private>
</field>
<field name='_server' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_server' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 Server to connect, could be different of the login domain.
		 ]]></description>
<exampleText><![CDATA[talk.google.com
		 ]]></exampleText>
</field>
<field name='_useAnonymousLogin' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_useAnonymousLogin' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_username' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:_username' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='auth' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:auth' type='org.igniterealtime.xiff.auth:SASLAuth' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='closingStreamTag' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:closingStreamTag' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 Depending of the STREAM_TYPE_used in the <code>connect()</code> method,
		 this variable will contain a matching closing element for it.
		 <code>parseDataReceived()</code> method will use this value.
		 ]]></description>
</field>
<field name='compressionNegotiated' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:compressionNegotiated' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='expireTagSearch' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:expireTagSearch' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 Once received data from the socket, should the closing tag be seached?
		 Initially this should be <code>true</code> as for the first incoming data
		 there might be an error available.
		 		 TODO: Not used, not needed?
		 ]]></description>
</field>
<field name='featuresAvailable' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:featuresAvailable' type='XML' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Features as provided by the server, in their original XML form.
		 ]]></description>
</field>
<field name='incompleteRawXML' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:incompleteRawXML' type='String' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='openingStreamTag' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:openingStreamTag' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 Opening part of the stream tag, such as
		 <code>&lt;stream:stream</code> or <code>&lt;flash:stream</code>
		 ]]></description>
</field>
<field name='pendingIQs' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:pendingIQs' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Hash to hold callbacks for IQs
		 ]]></description>
</field>
<field name='pingNotSupported' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:pingNotSupported' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
		 Server supports keeping the connection alive with Ping extension
		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0199.html
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.ping.PingExtension
		 ]]></see>
</field>
<field name='presenceQueueTimer' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:presenceQueueTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='presenceQueue' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:presenceQueue' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 List of incoming presences that are waiting to be dispatched
		 ]]></description>
</field>
<field name='saslMechanisms' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:saslMechanisms' type='Object' isStatic='false' isConst='true' defaultValue='unknown' >
<description><![CDATA[
		 The types of SASL mechanisms available. Indexed by their MECHANISM constant.
		 		 <p>By default, only <code>Anonymous</code> and <code>DigestMD5</code> are enabled.</p>
		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.auth.Anonymous
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.auth.DigestMD5
		 ]]></see>
</field>
<field name='sessionID' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:sessionID' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='socket' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:socket' type='flash.net:Socket' isStatic='false' isConst='false' >
<description><![CDATA[
		 Binary socket used to connect to the XMPP server.
		 ]]></description>
</field>
<field name='streamTagSearch' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:streamTagSearch' type='String' isStatic='false' isConst='false' defaultValue='stream:stream' >
<description><![CDATA[
		 Depending of the STREAM_TYPE_used in the <code>connect()</code> method,
		 the name of the opening tag for stream is saved in this variable, such as
		 <code>stream:stream</code> or <code>flash:stream</code>.
		 		 <p>Default value matches the default value of <code>connect()</code> method,
		 which is STREAM_TYPE_STANDARD.</p>
		 ]]></description>
</field>
<field name='streamType' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:streamType' type='uint' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[
		 ]]></description>
<default><![CDATA[STREAM_TYPE_STANDARD
		 ]]></default>
<private><![CDATA[]]></private>
</field>
<field name='tlsEnabled' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:tlsEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='tlsRequired' fullname='org.igniterealtime.xiff.core:XMPPConnection/protected:tlsRequired' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 Even if this class is not implementing TLS, it needs to be aware
		 if it has been extended by <code>XMPPTLSConnection</code> that will
		 set this value to <code>true</code>.
		 		 <p>For example <code>handleStreamFeatures</code> uses this value.</p>
		 		 ]]></description>
<see><![CDATA[#handleStreamFeatures
		 ]]></see>
</field>
<classRec name='InBandRegistrator' fullname='org.igniterealtime.xiff.core:InBandRegistrator' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\InBandRegistrator.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Manager for XEP-0077: In-Band Registration
	 	 <p>Once the connection has been established and the server has provided feature
	 information, check <code>XMPPConnection.registrationSupported</code> before trying to use
	 the registration.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0077.html
	 ]]></see>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:InBandRegistrator' name='registrationFields' type='org.igniterealtime.xiff.events.RegistrationFieldsEvent' >
<description><![CDATA[
	 Dispatched on when new user account registration is successful.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RegistrationFieldsEvent.REG_FIELDS
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:InBandRegistrator' name='registrationSuccess' type='org.igniterealtime.xiff.events.RegistrationSuccessEvent' >
<description><![CDATA[
	 Dispatched on when new user account registration is successful.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RegistrationSuccessEvent.REGISTRATION_SUCCESS
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.core:InBandRegistrator' name='changePasswordSuccess' type='org.igniterealtime.xiff.events.ChangePasswordSuccessEvent' >
<description><![CDATA[
	 Dispatched when a password change is successful.
	 	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.ChangePasswordSuccessEvent.PASSWORD_SUCCESS
	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='InBandRegistrator' fullname='org.igniterealtime.xiff.core:InBandRegistrator/InBandRegistrator' isStatic='false' isFinal='false' isOverride='false'  param_names='aConnection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='null' result_type='*'>
<description><![CDATA[
		 Manage client registration and password changing.
		 		 ]]></description>
<param><![CDATA[aConnection A reference to the <code>XMPPConnection</code> instance to use.
		 ]]></param>
</method>
<method name='changePassword_response' fullname='org.igniterealtime.xiff.core:InBandRegistrator/protected:changePassword_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='changePassword' fullname='org.igniterealtime.xiff.core:InBandRegistrator/changePassword' isStatic='false' isFinal='false' isOverride='false'  param_names='newPassword' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Changes the user's account password on the server. If the password change is successful,
		 the class will broadcast a <code>ChangePasswordSuccessEvent.PASSWORD_SUCCESS</code> event.
		 		 ]]></description>
<param><![CDATA[newPassword The new password
		 ]]></param>
</method>
<method name='getRegistrationFields_response' fullname='org.igniterealtime.xiff.core:InBandRegistrator/protected:getRegistrationFields_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='getRegistrationFields' fullname='org.igniterealtime.xiff.core:InBandRegistrator/getRegistrationFields' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Issues a request for the information that must be submitted for registration with the server.
		 When the data returns, a <code>RegistrationFieldsEvent.REG_FIELDS</code> event is dispatched
		 containing the requested data.
		 ]]></description>
</method>
<method name='sendRegistrationFields_response' fullname='org.igniterealtime.xiff.core:InBandRegistrator/protected:sendRegistrationFields_response' isStatic='false' isFinal='false' isOverride='false'  param_names='iq' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[iq
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='sendRegistrationFields' fullname='org.igniterealtime.xiff.core:InBandRegistrator/sendRegistrationFields' isStatic='false' isFinal='false' isOverride='false'  param_names='fieldMap;key' param_types='Object;String' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[
		 Registers a new account with the server, sending the registration data as specified in the fieldMap]]></description>
<param><![CDATA[fieldMap An object map containing the data to use for registration. The map should be composed of
		 			attribute:value pairs for each registration data item.
		 ]]></param>
<param><![CDATA[key This element is obsolete, but is included here for historical completeness.
		 ]]></param>
<paramter.><![CDATA[		 ]]></paramter.>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.core:InBandRegistrator/connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
<description><![CDATA[
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.
		 ]]></description>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.core:InBandRegistrator/connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<field name='_connection' fullname='org.igniterealtime.xiff.core:InBandRegistrator/private:_connection' type='org.igniterealtime.xiff.core:IXMPPConnection' isStatic='false' isConst='false' >
</field>
<classRec name='XMPPBOSHConnection' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\XMPPBOSHConnection.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='org.igniterealtime.xiff.core:XMPPConnection' interfaces='org.igniterealtime.xiff.core:IXMPPConnection' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0124: Bidirectional-streams Over Synchronous HTTP (BOSH) and
	 XEP-0206: XMPP Over BOSH.
	 	 <p>Using BOSH does not prevent your application from respecting
	 Adobe Flash Player policy file issues. HTTP requests to your
	 server must be authorized with a <code>crossdomain.xml</code> file
	 in your webserver root.</p>
	 	 <p>Warning: if you are using BOSH through HTTPS, your crossdomain
	 policy file must also be served through HTTPS. Your application
	 (if online) must also be served through HTTPS else you will
	 have a crossdomain policy issue. This issue can be solved by
	 using the secure property of the allow-access-from node in the
	 crossdomain.xml file. But this is not recommended by Adobe.</p>
	 	 <p>If your crossdomain policy file cannot
	 be served by your server, this issue could be solved with an
	 Apache proxy redirect so that any automatic Flash/Flex calls
	 to an URL like <code>http://xmppserver:5280/crossdomain.xml</code> will be
	 redirected as an URL of your choice such as
	 <code>http://webserver/crossdomain.xml</code>.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0124.html
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0206.html
	 ]]></see>
</classRec>
<method name='XMPPBOSHConnection' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/XMPPBOSHConnection' isStatic='false' isFinal='false' isOverride='false'  param_names='secure' param_types='Boolean' param_defaults='false' result_type='void'>
<description><![CDATA[
		 TLS compression (as defined in RFC 3920) and Stream Compression (as defined
		 in Stream Compression [XEP-0138]) are NOT RECOMMENDED in BOSH since compression
		 SHOULD be negotiated at the HTTP layer using the 'accept' attribute
		 of the BOSH session creation response.
		 		 <p>TLS compression and Stream Compression SHOULD NOT be used at
		 the same time as HTTP content encoding.</p>
		 		 ]]></description>
<param><![CDATA[secure	Determines which port is used
		 ]]></param>
</method>
<method name='connect' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/connect' isStatic='false' isFinal='false' isOverride='true'  param_names='streamType' param_types='uint' param_defaults='0' result_type='void'>
<description><![CDATA[
		 The first request from the client to the connection manager requests a new session.
		 		 <p>The <strong>body</strong> element of the first request SHOULD possess
		 the following attributes (they SHOULD NOT be included in any other requests
		 except as specified under Adding Streams To A Session):</p>
		 		 <ul>
		 <li>'to' -- This attribute specifies the target domain of the first stream.</li>
		 <li>'xml:lang' -- This attribute (as defined in Section 2.12 of XML 1.0 [17])
		   specifies the default language of any human-readable XML character data
		   sent or received during the session.</li>
		 <li>'ver' -- This attribute specifies the highest version of the BOSH protocol
		   that the client supports. The numbering scheme is "major.minor" (where
		   the minor number MAY be incremented higher than a single digit, so it
		   MUST be treated as a separate integer). Note: The 'ver' attribute should
		   not be confused with the version of any protocol being transported.</li>
		 <li>'wait' -- This attribute specifies the longest time (in seconds) that
		   the connection manager is allowed to wait before responding to any request
		   during the session. This enables the client to limit the delay before it
		   discovers any network failure, and to prevent its HTTP/TCP connection
		   from expiring due to inactivity.</li>
		 <li>'hold' -- This attribute specifies the maximum number of requests the
		   connection manager is allowed to keep waiting at any one time during the
		   session. If the client is not able to use HTTP Pipelining then this SHOULD
		   be set to "1".</li>
		 </ul>
		 		 <p>Note: Clients that only support Polling Sessions MAY prevent the connection
		 manager from waiting by setting 'wait' or 'hold' to "0". However, polling is
		 NOT RECOMMENDED since the associated increase in bandwidth consumption and
		 the decrease in responsiveness are both typically one or two orders of
		 magnitude!</p>
		 		 ]]></description>
<param><![CDATA[streamType Not used
		 ]]></param>
<see><![CDATA[http://xmpp.org/extensions/xep-0206.html#initiate
		 ]]></see>
</method>
<method name='createRequest' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:createRequest' isStatic='false' isFinal='false' isOverride='false'  param_names='bodyContent' param_types='Array' param_defaults='null' result_type='XML'>
<description><![CDATA[
		 Helper method for creating XML which contains the data to be sent to server.
		 		 <p>Also called as "Body wrapper element".</p>
		 		 ]]></description>
<param><![CDATA[bodyContent
		 ]]></param>
<return><![CDATA[]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0124.html#wrapper
		 ]]></see>
</method>
<method name='disconnect' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/disconnect' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0124.html#terminate
		 ]]></see>
</method>
<method name='handleLogin' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:handleLogin' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='org.igniterealtime.xiff.events:LoginEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='handleNodeType' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/protected:handleNodeType' isStatic='false' isFinal='false' isOverride='true'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 TODO: Is this somthing that could be safely removed?
		 ]]></description>
</method>
<method name='handlePauseTimeout' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:handlePauseTimeout' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='onHTTPStatus' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:onHTTPStatus' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:HTTPStatusEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onRequestComplete' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:onRequestComplete' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Outgoing request has completed.
		 		 <p>If the BOSH <strong>body</strong> wrapper is not empty, then it SHOULD
		 contain one of the following:</p>
		 		 <ul>
		 <li>A complete <stream:features/> element (in which case the BOSH <strong>body</strong>
		 element MUST include the namespace xmlns:stream='http://etherx.jabber.org/streams').</li>
		 <li>A complete element used for SASL negotiation and qualified by the
		 'urn:ietf:params:xml:ns:xmpp-sasl' namespace.</li>
		 <li>One or more complete <strong>message</strong>, <strong>presence</strong>, and/or
		 <strong>iq</strong> elements qualified by the 'jabber:client' namespace.</li>
		 <li>A <stream:error/> element (in which case the BOSH <strong>body</strong> element
		 MUST include the namespace xmlns:stream='http://etherx.jabber.org/streams' and it MUST
		 feature the 'remote-stream-error' terminal error condition), preceded by zero or more
		 complete <strong>message</strong>, <strong>presence</strong>, and/or <strong>iq</strong>
		 elements qualified by the 'jabber:client' namespace.</li>
		 </ul>
		 		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='pauseSession' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/pauseSession' isStatic='false' isFinal='false' isOverride='false'  param_names='seconds' param_types='uint' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 ]]></description>
<return><![CDATA[true if pause request is sent
		 ]]></return>
</method>
<method name='pollServer' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:pollServer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='processConnectionResponse' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/processConnectionResponse' isStatic='false' isFinal='false' isOverride='false'  param_names='responseBody' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Session Creation Response
		 		 <p>After receiving a new session request, the connection manager MUST generate
		 an opaque, unpredictable session identifier (or SID). The SID MUST be unique
		 within the context of the connection manager application. The <strong>body</strong>
		 element of the connection manager's response to the client's session creation
		 request MUST possess the following attributes (they SHOULD NOT be included in
		 any other responses):</p>
		 		 <ul>
		 <li>'sid' -- This attribute specifies the SID</li>
		 <li>'wait' -- This is the longest time (in seconds) that the connection manager
		   will wait before responding to any request during the session. The time MUST be
		   less than or equal to the value specified in the session request.</li>
		 </ul>
		 		 <p>The <strong>body</strong> element SHOULD also include the following attributes
		 (they SHOULD NOT be included in any other responses):</p>
		 		 <ul>
		 <li>'ver' -- This attribute specifies the highest version of the BOSH protocol
		   that the connection manager supports, or the version specified by the client in
		   its request, whichever is lower.</li>
		 <li>'polling' -- This attribute specifies the shortest allowable polling
		   interval (in seconds). This enables the client to not send empty request
		   elements more often than desired (see Polling Sessions and Overactivity).</li>
		 <li>'inactivity' -- This attribute specifies the longest allowable inactivity
		   period (in seconds). This enables the client to ensure that the periods with
		   no requests pending are never too long (see Polling Sessions and Inactivity).</li>
		 <li>'requests' -- This attribute enables the connection manager to limit the
		   number of simultaneous requests the client makes (see Overactivity and
		   Polling Sessions). The RECOMMENDED values are either "2" or one more than
		   the value of the 'hold' attribute specified in the session request.</li>
		 <li>'hold' -- This attribute informs the client about the maximum number
		   of requests the connection manager will keep waiting at any one time during
		   the session. This value MUST NOT be greater than the value specified by the
		   client in the session request.</li>
		 <li>'to' -- This attribute communicates the identity of the backend server
		   to which the client is attempting to connect.</li>
		 </ul>
		 		 <p>The connection manager MAY include an 'accept' attribute in the session
		 creation response element, to specify a space-separated list of the content
		 encodings it can decompress. After receiving a session creation response
		 with an 'accept' attribute, clients MAY include an HTTP Content-Encoding
		 header in subsequent requests (indicating one of the encodings specified
		 in the 'accept' attribute) and compress the bodies of the requests
		 accordingly.</p>
		 		 ]]></description>
<param><![CDATA[responseBody
		 ]]></param>
<see><![CDATA[http://xmpp.org/extensions/xep-0124.html#session-response
		 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0206.html#create
		 ]]></see>
</method>
<method name='processResponse' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:processResponse' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='null' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[event
		 ]]></param>
</method>
<method name='resetResponseProcessor' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:resetResponseProcessor' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Reset the response time if there are items in the queue
		 ]]></description>
</method>
<method name='restartStream' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/protected:restartStream' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
		 Upon receiving the <strong>success</strong> element, the client
		 MUST then ask the connection manager to restart the stream by
		 sending a "restart request".
		 ]]></description>
</method>
<method name='sendDataToServer' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/protected:sendDataToServer' isStatic='false' isFinal='false' isOverride='true'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Connection to the server in BOSH is a simple URLRequest.
		 		 <p>All information is encoded in the body of standard HTTP POST
		 requests and responses. Each HTTP body contains a single
		 <strong>body</strong> wrapper which encapsulates the XML elements
		 being transferred.</p>
		 		 <p>BOSH requires all incoming and outgoing data to be wrapped in
		 <code>body</code> element. That should be taken care of before possible
		 Stream Compression.</p>
		 		 ]]></description>
<param><![CDATA[data ByteArray that might be compressed if enabled
		 ]]></param>
<see><![CDATA[http://xmpp.org/extensions/xep-0124.html#overview
		 ]]></see>
</method>
<method name='sendKeepAlive' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/sendKeepAlive' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
		 Does nothing, BOSH uses polling instead.
		 ]]></description>
</method>
<method name='sendQueuedRequests' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:sendQueuedRequests' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='null' result_type='Boolean'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[body
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='sendRequests' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:sendRequests' isStatic='false' isFinal='false' isOverride='false'  param_names='data;isPoll' param_types='XML;Boolean' param_defaults='null;false' result_type='Boolean'>
<description><![CDATA[
		 Returns true if any requests were sent.
		 		 TODO: Handle compression
		 		 ]]></description>
<param><![CDATA[data
		 ]]></param>
<param><![CDATA[isPoll
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='sendXML' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/protected:sendXML' isStatic='false' isFinal='false' isOverride='true'  param_names='data' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Pass through to <code>sendRequests</code> method for having the
		 <code>body</code> wrapper around the given data.
		 ]]></description>
<param><![CDATA[data
		 ]]></param>
</method>
<method name='boshPath' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/boshPath/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Local part of the address in which the server responds.
		 ]]></description>
<default><![CDATA[http-bind/
		 ]]></default>
</method>
<method name='hold' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/hold/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 This attribute specifies the maximum number of requests the connection
		 manager is allowed to keep waiting at any one time during the session.
		 If the client is not able to use HTTP Pipelining then this SHOULD be set to "1".
		 ]]></description>
</method>
<method name='httpServer' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/httpServer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Server URI
		 ]]></description>
</method>
<method name='maxConcurrentRequests' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/maxConcurrentRequests/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Defaults to 2. Value retrieved from the server once stream is initiating.
		 ]]></description>
</method>
<method name='nextRID' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:nextRID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Request ID
		 ]]></description>
</method>
<method name='secure' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/secure/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 HTTP bind requests type. If secure, the requests will be sent
		 through HTTPS. If not, through HTTP.
		 		 <p>Please note that the <code>port</code> needs to be set separately.</p>
		 ]]></description>
</method>
<method name='wait' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/wait/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 This attribute specifies the longest time (in seconds) that the connection
		 manager is allowed to wait before responding to any request during the session.
		 This enables the client to limit the delay before it discovers any network
		 failure, and to prevent its HTTP/TCP connection from expiring due to inactivity.
		 ]]></description>
</method>
<method name='boshPath' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/boshPath/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='hold' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/hold/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='maxConcurrentRequests' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/maxConcurrentRequests/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='secure' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/secure/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='wait' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/wait/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='BOSH_NS' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/BOSH_NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/httpbind' >
<description><![CDATA[
		 Namespace used by BOSH body wrapper
		 ]]></description>
</field>
<field name='BOSH_VERSION' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/BOSH_VERSION' type='String' isStatic='true' isConst='true' defaultValue='1.6' >
<description><![CDATA[
		 Current version of the BOSH defined in the XEP and the
		 version which this class implements.
		 ]]></description>
<default><![CDATA[1.6
		 ]]></default>
</field>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='body' >
<description><![CDATA[
		 BOSH body wrapper element name
		 ]]></description>
</field>
<field name='HTTPS_PORT' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/HTTPS_PORT' type='uint' isStatic='true' isConst='true' defaultValue='7443' >
<description><![CDATA[
		 The default secure port as per XMPP specification.
		 ]]></description>
<default><![CDATA[7443
		 ]]></default>
</field>
<field name='HTTP_PORT' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/HTTP_PORT' type='uint' isStatic='true' isConst='true' defaultValue='7070' >
<description><![CDATA[
		 The default port as per XMPP specification.
		 ]]></description>
<default><![CDATA[7070
		 ]]></default>
</field>
<field name='_boshPath' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_boshPath' type='String' isStatic='false' isConst='false' defaultValue='http-bind/' >
</field>
<field name='_boshPollingInterval' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_boshPollingInterval' type='uint' isStatic='false' isConst='false' defaultValue='10' >
<description><![CDATA[
		 Polling interval, in seconds
		 ]]></description>
</field>
<field name='_hold' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_hold' type='uint' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[
		 Maximum number of requests kept on hold
		 ]]></description>
</field>
<field name='_inactivity' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_inactivity' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[
		 Inactivity time, in seconds
		 ]]></description>
</field>
<field name='_lastPollTime' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_lastPollTime' type='Date' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[
		 The most recent poll to the server occured at this time
		 ]]></description>
</field>
<field name='_maxConcurrentRequests' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_maxConcurrentRequests' type='uint' isStatic='false' isConst='false' defaultValue='2' >
<description><![CDATA[
		 Value fecthed from the server
		 ]]></description>
</field>
<field name='_maxPause' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_maxPause' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[
		 Maximum pausing time, in seconds
		 ]]></description>
</field>
<field name='_pauseEnabled' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_pauseEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 Server had the 'maxpause' attribute in the initial connection
		 openining element, thus supports pausing the connection.
		 ]]></description>
</field>
<field name='_pollingEnabled' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_pollingEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
		 Connection is polling at the moment
		 ]]></description>
</field>
<field name='_requestCount' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_requestCount' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[
		 Counter for current outgoing requests.
		 Once a request is being setn, this counter is increased.
		 Once the request has been succesfuly received by the server,
		 this value is degreased.
		 ]]></description>
</field>
<field name='_requestQueue' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_requestQueue' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Outgoing XML requests
		 ]]></description>
</field>
<field name='_responseQueue' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_responseQueue' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Incoming XML responses
		 ]]></description>
</field>
<field name='_responseTimer' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_responseTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
<description><![CDATA[
		 Timer that triggers <code>processResponse</code> handler.
		 ]]></description>
</field>
<field name='_rid' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_rid' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[
		 Optional, positive integer.
		 ]]></description>
</field>
<field name='_secure' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_secure' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
		 Is the secure port used or not, according to the application developer
		 ]]></description>
</field>
<field name='_sid' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_sid' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 Session ID, as defined by the server
		 ]]></description>
</field>
<field name='_streamRestarted' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_streamRestarted' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
		 Has the stream been restarted by <code>restartStream</code> method.
		 For some "workaround" reason, <code>handleNodeType</code> has a sole purpose
		 of setting this to <code>false</code> in case 'features' are available.
		 ]]></description>
</field>
<field name='_wait' fullname='org.igniterealtime.xiff.core:XMPPBOSHConnection/private:_wait' type='uint' isStatic='false' isConst='false' defaultValue='20' >
<description><![CDATA[
		 Seconds between traffic
		 ]]></description>
</field>
<classRec name='XMPPTLSConnection' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\XMPPTLSConnection.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='org.igniterealtime.xiff.core:XMPPConnection' interfaces='org.igniterealtime.xiff.core:IXMPPConnection' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class is used to connect to and manage data coming from an XMPP server that supports TLS.
	 Use one instance of this class per connection.
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-5
	 ]]></see>
</classRec>
<method name='XMPPTLSConnection' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/XMPPTLSConnection' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 Constructor.
		 <p>The connection socket created in XMPPConnection is used until the server responds as "proceed".</p>
		 ]]></description>
</method>
<method name='configureTLSSocket' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:configureTLSSocket' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 ]]></description>
<see><![CDATA[com.hurlant.crypto.tls.TLSSocket
		 ]]></see>
</method>
<method name='connect' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/connect' isStatic='false' isFinal='false' isOverride='true'  param_names='streamType' param_types='uint' param_defaults='0' result_type='void'>
<description><![CDATA[
		 ]]></description>
</method>
<method name='disconnect' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/disconnect' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[
		 ]]></description>
</method>
<method name='handleNodeType' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:handleNodeType' isStatic='false' isFinal='false' isOverride='true'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 
		 Calls a appropriate parser base on the nodeName.
		 ]]></description>
<param><![CDATA[node
		 ]]></param>
</method>
<method name='handleStreamTLS' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:handleStreamTLS' isStatic='false' isFinal='false' isOverride='true'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 In case the user or the server requires the use of TLS, this method
		 will initiate the handshake.
		 ]]></description>
</method>
<method name='onAcceptPeerCertPrompt' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:onAcceptPeerCertPrompt' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[event
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='removeTLSSocketEventListeners' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:removeTLSSocketEventListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Remove those listeners that the <code>configureTLSSocket</code> method added.
		 ]]></description>
</method>
<method name='startTLS' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:startTLS' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='config' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/config/get' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.crypto.tls:TLSConfig'>
<description><![CDATA[
		 TLS configuration.
		 ]]></description>
</method>
<method name='tls' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/tls/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Specifies whether to enable TLS.
		 ]]></description>
<default><![CDATA[false
		 ]]></default>
</method>
<method name='config' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/config/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='com.hurlant.crypto.tls:TLSConfig' param_defaults='undefined' result_type='void'>
</method>
<method name='tls' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/tls/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_config' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:_config' type='com.hurlant.crypto.tls:TLSConfig' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='tlsSocket' fullname='org.igniterealtime.xiff.core:XMPPTLSConnection/protected:tlsSocket' type='com.hurlant.crypto.tls:TLSSocket' isStatic='false' isConst='false' >
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='XMPPRTMPConnection' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\core\XMPPRTMPConnection.as' namespace='org.igniterealtime.xiff.core' access='public' baseclass='org.igniterealtime.xiff.core:XMPPConnection' interfaces='org.igniterealtime.xiff.core:IXMPPConnection' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A child of <code>XMPPConnection</code>, this class makes use of the

	 Flash RTMP connection instead of the <code>Socket</code>.

	 
	 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection

	 ]]></see>
</classRec>
<method name='XMPPRTMPConnection' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/XMPPRTMPConnection' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='String' param_defaults='rtmp:/xmpp' result_type='*'>
<description><![CDATA[

		 
		 ]]></description>
<param><![CDATA[url

		 ]]></param>
</method>
<method name='connect' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/connect' isStatic='false' isFinal='false' isOverride='true'  param_names='streamType' param_types='uint' param_defaults='0' result_type='void'>
</method>
<method name='createConnection' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/protected:createConnection' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[

		 Called from <code>XMPPConnection()</code> constructor.

		 ]]></description>
</method>
<method name='disconnect' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/disconnect' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='onAsyncError' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/private:onAsyncError' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:AsyncErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onNetStatus' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/private:onNetStatus' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:NetStatusEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onResult' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/private:onResult' isStatic='false' isFinal='false' isOverride='false'  param_names='success' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='restartStream' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/protected:restartStream' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='sendDataToServer' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/protected:sendDataToServer' isStatic='false' isFinal='false' isOverride='true'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='sendKeepAlive' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/sendKeepAlive' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[

		 No need for keepalive

		 ]]></description>
</method>
<method name='xmppRecieve' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/xmppRecieve' isStatic='false' isFinal='false' isOverride='false'  param_names='rawXML' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Is the name of this method locked in the server side?

		 ]]></description>
</method>
<field name='_netConnection' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/private:_netConnection' type='flash.net:NetConnection' isStatic='false' isConst='false' >
</field>
<field name='_rtmpUrl' fullname='org.igniterealtime.xiff.core:XMPPRTMPConnection/private:_rtmpUrl' type='String' isStatic='false' isConst='false' defaultValue='rtmp:/xmpp' >
</field>
<interfaceRec name='IIDGenerator' fullname='org.igniterealtime.xiff.data.id:IIDGenerator' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\id\IIDGenerator.as' namespace='org.igniterealtime.xiff.data.id' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 To use custom ID generators call the static function on the
	 XMPPStanza class with an instance that implements IIDGenerator.
	 	 ]]></description>
<example><![CDATA[<code>XMPPStanza.idGenerator = new SOIncrementalGenerator();</code>
	 ]]></example>
</interfaceRec>
<method name='generateID' fullname='org.igniterealtime.xiff.data.id:IIDGenerator/org.igniterealtime.xiff.data.id:IIDGenerator:generateID' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Generates an ID.
		 		 ]]></description>
<return><![CDATA[The generated ID
		 ]]></return>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.data.id:IIDGenerator/org.igniterealtime.xiff.data.id:IIDGenerator:prefix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The prefix to use for the generated ID (for namespacing purposes).
		 ]]></description>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.data.id:IIDGenerator/org.igniterealtime.xiff.data.id:IIDGenerator:prefix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<classRec name='UUIDGenerator' fullname='org.igniterealtime.xiff.data.id:UUIDGenerator' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\id\UUIDGenerator.as' namespace='org.igniterealtime.xiff.data.id' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.data.id:IIDGenerator' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Generates a universally unique identifier.
	 RFC4122 Version 4.
	 http://tools.ietf.org/html/rfc4122#section-4.4
	 ]]></description>
</classRec>
<method name='UUIDGenerator' fullname='org.igniterealtime.xiff.data.id:UUIDGenerator/UUIDGenerator' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='generateID' fullname='org.igniterealtime.xiff.data.id:UUIDGenerator/generateID' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Generates the unique ID.
		 		 ]]></description>
<return><![CDATA[The generated ID
		 ]]></return>
</method>
<method name='replaceChar' fullname='org.igniterealtime.xiff.data.id:UUIDGenerator/private:replaceChar' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.data.id:UUIDGenerator/prefix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The prefix to use for the generated ID (for namespacing purposes).
		 ]]></description>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.data.id:UUIDGenerator/prefix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_prefix' fullname='org.igniterealtime.xiff.data.id:UUIDGenerator/private:_prefix' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='IncrementalGenerator' fullname='org.igniterealtime.xiff.data.id:IncrementalGenerator' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\id\IncrementalGenerator.as' namespace='org.igniterealtime.xiff.data.id' access='public' baseclass='Object' interfaces='org.igniterealtime.xiff.data.id:IIDGenerator' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Uses a simple incrementation of a variable to generate new IDs.
	 ]]></description>
</classRec>
<method name='IncrementalGenerator' fullname='org.igniterealtime.xiff.data.id:IncrementalGenerator/IncrementalGenerator' isStatic='false' isFinal='false' isOverride='false'  param_names='prefix' param_types='String' param_defaults='null' result_type='*'>
</method>
<method name='generateID' fullname='org.igniterealtime.xiff.data.id:IncrementalGenerator/generateID' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Generates a unique ID.
		 		 ]]></description>
<return><![CDATA[The generated ID
		 ]]></return>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.data.id:IncrementalGenerator/prefix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The prefix to use for the generated ID (for namespacing purposes).
		 ]]></description>
</method>
<method name='prefix' fullname='org.igniterealtime.xiff.data.id:IncrementalGenerator/prefix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_prefix' fullname='org.igniterealtime.xiff.data.id:IncrementalGenerator/protected:_prefix' type='String' isStatic='false' isConst='false' >
</field>
<field name='counter' fullname='org.igniterealtime.xiff.data.id:IncrementalGenerator/protected:counter' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='SOIncrementalGenerator' fullname='org.igniterealtime.xiff.data.id:SOIncrementalGenerator' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\id\SOIncrementalGenerator.as' namespace='org.igniterealtime.xiff.data.id' access='public' baseclass='org.igniterealtime.xiff.data.id:IncrementalGenerator' interfaces='org.igniterealtime.xiff.data.id:IIDGenerator' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Generates an incrementing ID and saves the last value in a local shared object.
	 ]]></description>
</classRec>
<method name='SOIncrementalGenerator' fullname='org.igniterealtime.xiff.data.id:SOIncrementalGenerator/SOIncrementalGenerator' isStatic='false' isFinal='false' isOverride='false'  param_names='id;prefix' param_types='String;String' param_defaults='undefined;null' result_type='*'>
</method>
<method name='generateID' fullname='org.igniterealtime.xiff.data.id:SOIncrementalGenerator/generateID' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[
		 Generates a unique ID.
		 
		 ]]></description>
<return><![CDATA[The generated ID
		 ]]></return>
</method>
<field name='SO_COOKIE_NAME' fullname='org.igniterealtime.xiff.data.id:SOIncrementalGenerator/private:SO_COOKIE_NAME' type='String' isStatic='true' isConst='true' defaultValue='SOIncrementalGenerator' >
</field>
<field name='_so' fullname='org.igniterealtime.xiff.data.id:SOIncrementalGenerator/private:_so' type='flash.net:SharedObject' isStatic='false' isConst='false' >
</field>
<classRec name='PresenceEvent' fullname='org.igniterealtime.xiff.events:PresenceEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\PresenceEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='PresenceEvent' fullname='org.igniterealtime.xiff.events:PresenceEvent/PresenceEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:PresenceEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:PresenceEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:PresenceEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Array of Presences.
		 ]]></description>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:PresenceEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='PRESENCE' fullname='org.igniterealtime.xiff.events:PresenceEvent/PRESENCE' type='String' isStatic='true' isConst='true' defaultValue='presence' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:PresenceEvent/private:_data' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='IQEvent' fullname='org.igniterealtime.xiff.events:IQEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\IQEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Event that occurs when an IQ has been received from the server.
	 ]]></description>
</classRec>
<method name='IQEvent' fullname='org.igniterealtime.xiff.events:IQEvent/IQEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Type should be the namespace of the extension that is related to this IQ
		 ]]></description>
<param><![CDATA[type
		 ]]></param>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:IQEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:IQEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:IQEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data:IExtension'>
<description><![CDATA[
		 Extension related to this event.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.Extension
		 ]]></see>
</method>
<method name='iq' fullname='org.igniterealtime.xiff.events:IQEvent/iq/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data:IQ'>
<description><![CDATA[
		 The IQ element related to this event.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.IQ
		 ]]></see>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:IQEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data:IExtension' param_defaults='undefined' result_type='void'>
</method>
<method name='iq' fullname='org.igniterealtime.xiff.events:IQEvent/iq/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
</method>
<field name='_data' fullname='org.igniterealtime.xiff.events:IQEvent/private:_data' type='org.igniterealtime.xiff.data:IExtension' isStatic='false' isConst='false' >
</field>
<field name='_iq' fullname='org.igniterealtime.xiff.events:IQEvent/private:_iq' type='org.igniterealtime.xiff.data:IQ' isStatic='false' isConst='false' >
</field>
<classRec name='ChangePasswordSuccessEvent' fullname='org.igniterealtime.xiff.events:ChangePasswordSuccessEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\ChangePasswordSuccessEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='ChangePasswordSuccessEvent' fullname='org.igniterealtime.xiff.events:ChangePasswordSuccessEvent/ChangePasswordSuccessEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:ChangePasswordSuccessEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:ChangePasswordSuccessEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='PASSWORD_SUCCESS' fullname='org.igniterealtime.xiff.events:ChangePasswordSuccessEvent/PASSWORD_SUCCESS' type='String' isStatic='true' isConst='true' defaultValue='changePasswordSuccess' >
</field>
<classRec name='ModelChangedEvent' fullname='org.igniterealtime.xiff.events:ModelChangedEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\ModelChangedEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='ModelChangedEvent' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/ModelChangedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='fieldName' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/fieldName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='firstItem' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/firstItem/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='lastItem' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/lastItem/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='removedIDs' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/removedIDs/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='fieldName' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/fieldName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='firstItem' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/firstItem/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='lastItem' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/lastItem/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='removedIDs' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/removedIDs/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='MODEL_CHANGED' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/MODEL_CHANGED' type='String' isStatic='true' isConst='true' defaultValue='modelChanged' >
</field>
<field name='_fieldName' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/private:_fieldName' type='String' isStatic='false' isConst='false' >
</field>
<field name='_firstItem' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/private:_firstItem' type='String' isStatic='false' isConst='false' >
</field>
<field name='_lastItem' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/private:_lastItem' type='String' isStatic='false' isConst='false' >
</field>
<field name='_removedIDs' fullname='org.igniterealtime.xiff.events:ModelChangedEvent/private:_removedIDs' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='RegistrationSuccessEvent' fullname='org.igniterealtime.xiff.events:RegistrationSuccessEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\RegistrationSuccessEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='RegistrationSuccessEvent' fullname='org.igniterealtime.xiff.events:RegistrationSuccessEvent/RegistrationSuccessEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:RegistrationSuccessEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:RegistrationSuccessEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='REGISTRATION_SUCCESS' fullname='org.igniterealtime.xiff.events:RegistrationSuccessEvent/REGISTRATION_SUCCESS' type='String' isStatic='true' isConst='true' defaultValue='registrationSuccess' >
</field>
<classRec name='BookmarkChangedEvent' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\BookmarkChangedEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 	 ]]></description>
</classRec>
<method name='BookmarkChangedEvent' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent/BookmarkChangedEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bookmark' param_types='String;*' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[bookmark
		 ]]></param>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='GROUPCHAT_BOOKMARK_ADDED' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent/GROUPCHAT_BOOKMARK_ADDED' type='String' isStatic='true' isConst='true' defaultValue='groupchatBookmarkAdded' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='GROUPCHAT_BOOKMARK_REMOVED' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent/GROUPCHAT_BOOKMARK_REMOVED' type='String' isStatic='true' isConst='true' defaultValue='groupchatBookmarkRemoved' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='groupchatBookmark' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent/groupchatBookmark' type='org.igniterealtime.xiff.bookmark:GroupChatBookmark' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='urlBookmark' fullname='org.igniterealtime.xiff.events:BookmarkChangedEvent/urlBookmark' type='org.igniterealtime.xiff.bookmark:UrlBookmark' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<classRec name='SearchPrepEvent' fullname='org.igniterealtime.xiff.events:SearchPrepEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\SearchPrepEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='SearchPrepEvent' fullname='org.igniterealtime.xiff.events:SearchPrepEvent/SearchPrepEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:SearchPrepEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:SearchPrepEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='server' fullname='org.igniterealtime.xiff.events:SearchPrepEvent/server/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='server' fullname='org.igniterealtime.xiff.events:SearchPrepEvent/server/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='SEARCH_PREP_COMPLETE' fullname='org.igniterealtime.xiff.events:SearchPrepEvent/SEARCH_PREP_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='searchPrepComplete' >
</field>
<field name='_server' fullname='org.igniterealtime.xiff.events:SearchPrepEvent/private:_server' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='MessageEvent' fullname='org.igniterealtime.xiff.events:MessageEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\MessageEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='MessageEvent' fullname='org.igniterealtime.xiff.events:MessageEvent/MessageEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:MessageEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:MessageEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:MessageEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data:Message'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:MessageEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data:Message' param_defaults='undefined' result_type='void'>
</method>
<field name='MESSAGE' fullname='org.igniterealtime.xiff.events:MessageEvent/MESSAGE' type='String' isStatic='true' isConst='true' defaultValue='message' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:MessageEvent/private:_data' type='org.igniterealtime.xiff.data:Message' isStatic='false' isConst='false' >
</field>
<classRec name='BookmarkRetrievedEvent' fullname='org.igniterealtime.xiff.events:BookmarkRetrievedEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\BookmarkRetrievedEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='BookmarkRetrievedEvent' fullname='org.igniterealtime.xiff.events:BookmarkRetrievedEvent/BookmarkRetrievedEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:BookmarkRetrievedEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:BookmarkRetrievedEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='BOOKMARK_RETRIEVED' fullname='org.igniterealtime.xiff.events:BookmarkRetrievedEvent/BOOKMARK_RETRIEVED' type='String' isStatic='true' isConst='true' defaultValue='bookmarkRetrieved' >
</field>
<classRec name='VCardEvent' fullname='org.igniterealtime.xiff.events:VCardEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\VCardEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='VCardEvent' fullname='org.igniterealtime.xiff.events:VCardEvent/VCardEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;vcard;bubbles;cancelable' param_types='String;org.igniterealtime.xiff.vcard:VCard;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:VCardEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:VCardEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='vcard' fullname='org.igniterealtime.xiff.events:VCardEvent/vcard/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.vcard:VCard'>
</method>
<field name='LOADED' fullname='org.igniterealtime.xiff.events:VCardEvent/LOADED' type='String' isStatic='true' isConst='true' defaultValue='loaded' >
</field>
<field name='SAVED' fullname='org.igniterealtime.xiff.events:VCardEvent/SAVED' type='String' isStatic='true' isConst='true' defaultValue='saved' >
</field>
<field name='SAVE_ERROR' fullname='org.igniterealtime.xiff.events:VCardEvent/SAVE_ERROR' type='String' isStatic='true' isConst='true' defaultValue='saveError' >
</field>
<field name='_vcard' fullname='org.igniterealtime.xiff.events:VCardEvent/private:_vcard' type='org.igniterealtime.xiff.vcard:VCard' isStatic='false' isConst='false' >
</field>
<classRec name='DisconnectionEvent' fullname='org.igniterealtime.xiff.events:DisconnectionEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\DisconnectionEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='DisconnectionEvent' fullname='org.igniterealtime.xiff.events:DisconnectionEvent/DisconnectionEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:DisconnectionEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:DisconnectionEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='DISCONNECT' fullname='org.igniterealtime.xiff.events:DisconnectionEvent/DISCONNECT' type='String' isStatic='true' isConst='true' defaultValue='disconnection' >
</field>
<classRec name='PropertyChangeEvent' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\PropertyChangeEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 When a property is changed somewhere, someone might be interested to listen its
	 current and previous values. Currently this is only used in RosterItemVO
	 in order to replace the Flex counterpart.
	 ]]></description>
</classRec>
<method name='PropertyChangeEvent' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/PropertyChangeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='newValue' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/newValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='oldValue' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/oldValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='newValue' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/newValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='oldValue' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/oldValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='CHANGE' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/CHANGE' type='String' isStatic='true' isConst='true' defaultValue='change' >
</field>
<field name='_name' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/private:_name' type='String' isStatic='false' isConst='false' >
</field>
<field name='_newValue' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/private:_newValue' type='' isStatic='false' isConst='false' >
</field>
<field name='_oldValue' fullname='org.igniterealtime.xiff.events:PropertyChangeEvent/private:_oldValue' type='' isStatic='false' isConst='false' >
</field>
<classRec name='LoginEvent' fullname='org.igniterealtime.xiff.events:LoginEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\LoginEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='LoginEvent' fullname='org.igniterealtime.xiff.events:LoginEvent/LoginEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:LoginEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:LoginEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='LOGIN' fullname='org.igniterealtime.xiff.events:LoginEvent/LOGIN' type='String' isStatic='true' isConst='true' defaultValue='login' >
</field>
<classRec name='FileTransferEvent' fullname='org.igniterealtime.xiff.events:FileTransferEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\FileTransferEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Events from the FileTransferManager
	 ]]></description>
</classRec>
<method name='FileTransferEvent' fullname='org.igniterealtime.xiff.events:FileTransferEvent/FileTransferEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[bubbles
		 ]]></param>
<param><![CDATA[cancelable
		 ]]></param>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:FileTransferEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:FileTransferEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='INCOMING_CLOSE' fullname='org.igniterealtime.xiff.events:FileTransferEvent/INCOMING_CLOSE' type='String' isStatic='true' isConst='true' defaultValue='incomingClose' >
</field>
<field name='INCOMING_FEATURE' fullname='org.igniterealtime.xiff.events:FileTransferEvent/INCOMING_FEATURE' type='String' isStatic='true' isConst='true' defaultValue='incomingFeature' >
</field>
<field name='INCOMING_OPEN' fullname='org.igniterealtime.xiff.events:FileTransferEvent/INCOMING_OPEN' type='String' isStatic='true' isConst='true' defaultValue='incomingOpen' >
</field>
<field name='OUTGOING_CLOSE' fullname='org.igniterealtime.xiff.events:FileTransferEvent/OUTGOING_CLOSE' type='String' isStatic='true' isConst='true' defaultValue='outgoingClose' >
</field>
<field name='OUTGOING_FEATURE' fullname='org.igniterealtime.xiff.events:FileTransferEvent/OUTGOING_FEATURE' type='String' isStatic='true' isConst='true' defaultValue='outgoingFeature' >
</field>
<field name='OUTGOING_OPEN' fullname='org.igniterealtime.xiff.events:FileTransferEvent/OUTGOING_OPEN' type='String' isStatic='true' isConst='true' defaultValue='outgoingOpen' >
</field>
<field name='extensions' fullname='org.igniterealtime.xiff.events:FileTransferEvent/extensions' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[
		 Extensions that might be related to the event type.
		 FeatureNegotiationExtension, FileTransferExtension
		 ]]></description>
</field>
<field name='iq' fullname='org.igniterealtime.xiff.events:FileTransferEvent/iq' type='org.igniterealtime.xiff.data:IQ' isStatic='false' isConst='false' >
<description><![CDATA[
		 The original IQ that contained the extension that might have triggered this event.
		 ]]></description>
</field>
<classRec name='ConnectionSuccessEvent' fullname='org.igniterealtime.xiff.events:ConnectionSuccessEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\ConnectionSuccessEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='ConnectionSuccessEvent' fullname='org.igniterealtime.xiff.events:ConnectionSuccessEvent/ConnectionSuccessEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:ConnectionSuccessEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:ConnectionSuccessEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='CONNECT_SUCCESS' fullname='org.igniterealtime.xiff.events:ConnectionSuccessEvent/CONNECT_SUCCESS' type='String' isStatic='true' isConst='true' defaultValue='connection' >
</field>
<classRec name='RosterEvent' fullname='org.igniterealtime.xiff.events:RosterEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\RosterEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='RosterEvent' fullname='org.igniterealtime.xiff.events:RosterEvent/RosterEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:RosterEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:RosterEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:RosterEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 Data can be of type:
		 <ul>
		 <li><code>Presence</code></li>
		 <li><code>RosterItemVO</code></li>
		 <li>...</li>
		 </ul>
		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.Presence
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.im.RosterItemVO
		 ]]></see>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.events:RosterEvent/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:RosterEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.events:RosterEvent/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<field name='ROSTER_LOADED' fullname='org.igniterealtime.xiff.events:RosterEvent/ROSTER_LOADED' type='String' isStatic='true' isConst='true' defaultValue='rosterLoaded' >
</field>
<field name='SUBSCRIPTION_DENIAL' fullname='org.igniterealtime.xiff.events:RosterEvent/SUBSCRIPTION_DENIAL' type='String' isStatic='true' isConst='true' defaultValue='subscriptionDenial' >
</field>
<field name='SUBSCRIPTION_REQUEST' fullname='org.igniterealtime.xiff.events:RosterEvent/SUBSCRIPTION_REQUEST' type='String' isStatic='true' isConst='true' defaultValue='subscriptionRequest' >
</field>
<field name='SUBSCRIPTION_REVOCATION' fullname='org.igniterealtime.xiff.events:RosterEvent/SUBSCRIPTION_REVOCATION' type='String' isStatic='true' isConst='true' defaultValue='subscriptionRevocation' >
</field>
<field name='USER_ADDED' fullname='org.igniterealtime.xiff.events:RosterEvent/USER_ADDED' type='String' isStatic='true' isConst='true' defaultValue='userAdded' >
</field>
<field name='USER_AVAILABLE' fullname='org.igniterealtime.xiff.events:RosterEvent/USER_AVAILABLE' type='String' isStatic='true' isConst='true' defaultValue='userAvailable' >
</field>
<field name='USER_PRESENCE_UPDATED' fullname='org.igniterealtime.xiff.events:RosterEvent/USER_PRESENCE_UPDATED' type='String' isStatic='true' isConst='true' defaultValue='userPresenceUpdated' >
</field>
<field name='USER_REMOVED' fullname='org.igniterealtime.xiff.events:RosterEvent/USER_REMOVED' type='String' isStatic='true' isConst='true' defaultValue='userRemoved' >
</field>
<field name='USER_SUBSCRIPTION_UPDATED' fullname='org.igniterealtime.xiff.events:RosterEvent/USER_SUBSCRIPTION_UPDATED' type='String' isStatic='true' isConst='true' defaultValue='userSubscriptionUpdated' >
</field>
<field name='USER_UNAVAILABLE' fullname='org.igniterealtime.xiff.events:RosterEvent/USER_UNAVAILABLE' type='String' isStatic='true' isConst='true' defaultValue='userUnavailable' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:RosterEvent/private:_data' type='' isStatic='false' isConst='false' >
</field>
<field name='_jid' fullname='org.igniterealtime.xiff.events:RosterEvent/private:_jid' type='org.igniterealtime.xiff.core:UnescapedJID' isStatic='false' isConst='false' >
</field>
<classRec name='RegistrationFieldsEvent' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\RegistrationFieldsEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='RegistrationFieldsEvent' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/RegistrationFieldsEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.register:RegisterExtension'>
<description><![CDATA[
		 Extension
		 ]]></description>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/fields/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Required registration fields
		 ]]></description>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data.register:RegisterExtension' param_defaults='undefined' result_type='void'>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/fields/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='REG_FIELDS' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/REG_FIELDS' type='String' isStatic='true' isConst='true' defaultValue='registrationFields' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/private:_data' type='org.igniterealtime.xiff.data.register:RegisterExtension' isStatic='false' isConst='false' >
</field>
<field name='_fields' fullname='org.igniterealtime.xiff.events:RegistrationFieldsEvent/private:_fields' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='RoomEvent' fullname='org.igniterealtime.xiff.events:RoomEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\RoomEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 	 ]]></description>
</classRec>
<method name='RoomEvent' fullname='org.igniterealtime.xiff.events:RoomEvent/RoomEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[bubbles
		 ]]></param>
<param><![CDATA[cancelable
		 ]]></param>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:RoomEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:RoomEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:RoomEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 Data type can be <code>Message</code>, <code>Array</code>, or <code>Presence</code>
		 depending of the context.
		 		 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.Message
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.Presence
		 ]]></see>
</method>
<method name='errorCode' fullname='org.igniterealtime.xiff.events:RoomEvent/errorCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.events:RoomEvent/errorCondition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.events:RoomEvent/errorMessage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.events:RoomEvent/errorType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='from' fullname='org.igniterealtime.xiff.events:RoomEvent/from/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 TODO: EscapedJID ?
		 ]]></description>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.events:RoomEvent/nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.events:RoomEvent/reason/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.events:RoomEvent/subject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:RoomEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='errorCode' fullname='org.igniterealtime.xiff.events:RoomEvent/errorCode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.events:RoomEvent/errorCondition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.events:RoomEvent/errorMessage/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.events:RoomEvent/errorType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='from' fullname='org.igniterealtime.xiff.events:RoomEvent/from/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.events:RoomEvent/nickname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.events:RoomEvent/reason/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='subject' fullname='org.igniterealtime.xiff.events:RoomEvent/subject/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ADMIN_ERROR' fullname='org.igniterealtime.xiff.events:RoomEvent/ADMIN_ERROR' type='String' isStatic='true' isConst='true' defaultValue='adminError' >
</field>
<field name='AFFILIATIONS' fullname='org.igniterealtime.xiff.events:RoomEvent/AFFILIATIONS' type='String' isStatic='true' isConst='true' defaultValue='affiliations' >
</field>
<field name='AFFILIATION_CHANGE_COMPLETE' fullname='org.igniterealtime.xiff.events:RoomEvent/AFFILIATION_CHANGE_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='affiliationChangeComplete' >
</field>
<field name='BANNED_ERROR' fullname='org.igniterealtime.xiff.events:RoomEvent/BANNED_ERROR' type='String' isStatic='true' isConst='true' defaultValue='bannedError' >
</field>
<field name='CONFIGURE_ROOM_COMPLETE' fullname='org.igniterealtime.xiff.events:RoomEvent/CONFIGURE_ROOM_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='configureRoomComplete' >
</field>
<field name='CONFIGURE_ROOM' fullname='org.igniterealtime.xiff.events:RoomEvent/CONFIGURE_ROOM' type='String' isStatic='true' isConst='true' defaultValue='configureRoom' >
</field>
<field name='DECLINED' fullname='org.igniterealtime.xiff.events:RoomEvent/DECLINED' type='String' isStatic='true' isConst='true' defaultValue='declined' >
</field>
<field name='GROUP_MESSAGE' fullname='org.igniterealtime.xiff.events:RoomEvent/GROUP_MESSAGE' type='String' isStatic='true' isConst='true' defaultValue='groupMessage' >
</field>
<field name='LOCKED_ERROR' fullname='org.igniterealtime.xiff.events:RoomEvent/LOCKED_ERROR' type='String' isStatic='true' isConst='true' defaultValue='lockedError' >
</field>
<field name='MAX_USERS_ERROR' fullname='org.igniterealtime.xiff.events:RoomEvent/MAX_USERS_ERROR' type='String' isStatic='true' isConst='true' defaultValue='maxUsersError' >
</field>
<field name='NICK_CONFLICT' fullname='org.igniterealtime.xiff.events:RoomEvent/NICK_CONFLICT' type='String' isStatic='true' isConst='true' defaultValue='nickConflict' >
</field>
<field name='PASSWORD_ERROR' fullname='org.igniterealtime.xiff.events:RoomEvent/PASSWORD_ERROR' type='String' isStatic='true' isConst='true' defaultValue='passwordError' >
</field>
<field name='PRIVATE_MESSAGE' fullname='org.igniterealtime.xiff.events:RoomEvent/PRIVATE_MESSAGE' type='String' isStatic='true' isConst='true' defaultValue='privateMessage' >
</field>
<field name='REGISTRATION_REQ_ERROR' fullname='org.igniterealtime.xiff.events:RoomEvent/REGISTRATION_REQ_ERROR' type='String' isStatic='true' isConst='true' defaultValue='registrationReqError' >
</field>
<field name='ROOM_DESTROYED' fullname='org.igniterealtime.xiff.events:RoomEvent/ROOM_DESTROYED' type='String' isStatic='true' isConst='true' defaultValue='roomDestroyed' >
</field>
<field name='ROOM_JOIN' fullname='org.igniterealtime.xiff.events:RoomEvent/ROOM_JOIN' type='String' isStatic='true' isConst='true' defaultValue='roomJoin' >
</field>
<field name='ROOM_LEAVE' fullname='org.igniterealtime.xiff.events:RoomEvent/ROOM_LEAVE' type='String' isStatic='true' isConst='true' defaultValue='roomLeave' >
</field>
<field name='SUBJECT_CHANGE' fullname='org.igniterealtime.xiff.events:RoomEvent/SUBJECT_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='subjectChange' >
</field>
<field name='USER_BANNED' fullname='org.igniterealtime.xiff.events:RoomEvent/USER_BANNED' type='String' isStatic='true' isConst='true' defaultValue='userBanned' >
</field>
<field name='USER_DEPARTURE' fullname='org.igniterealtime.xiff.events:RoomEvent/USER_DEPARTURE' type='String' isStatic='true' isConst='true' defaultValue='userDeparture' >
</field>
<field name='USER_JOIN' fullname='org.igniterealtime.xiff.events:RoomEvent/USER_JOIN' type='String' isStatic='true' isConst='true' defaultValue='userJoin' >
</field>
<field name='USER_KICKED' fullname='org.igniterealtime.xiff.events:RoomEvent/USER_KICKED' type='String' isStatic='true' isConst='true' defaultValue='userKicked' >
</field>
<field name='USER_PRESENCE_CHANGE' fullname='org.igniterealtime.xiff.events:RoomEvent/USER_PRESENCE_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='userPresenceChange' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_data' type='' isStatic='false' isConst='false' >
</field>
<field name='_errorCode' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_errorCode' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_errorCondition' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_errorCondition' type='String' isStatic='false' isConst='false' >
</field>
<field name='_errorMessage' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_errorMessage' type='String' isStatic='false' isConst='false' >
</field>
<field name='_errorType' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_errorType' type='String' isStatic='false' isConst='false' >
</field>
<field name='_from' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_from' type='String' isStatic='false' isConst='false' >
</field>
<field name='_nickname' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_nickname' type='String' isStatic='false' isConst='false' >
</field>
<field name='_reason' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_reason' type='String' isStatic='false' isConst='false' >
</field>
<field name='_subject' fullname='org.igniterealtime.xiff.events:RoomEvent/private:_subject' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='InviteEvent' fullname='org.igniterealtime.xiff.events:InviteEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\InviteEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='InviteEvent' fullname='org.igniterealtime.xiff.events:InviteEvent/InviteEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:InviteEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:InviteEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:InviteEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data:Message'>
<description><![CDATA[
		 Message that is possibly included in the invitation.
		 ]]></description>
</method>
<method name='from' fullname='org.igniterealtime.xiff.events:InviteEvent/from/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:UnescapedJID'>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.events:InviteEvent/reason/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A possible reason given by the inviting party
		 ]]></description>
</method>
<method name='room' fullname='org.igniterealtime.xiff.events:InviteEvent/room/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.conference:Room'>
<description><![CDATA[
		 The room in which the invitation is targeted.
		 ]]></description>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:InviteEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data:Message' param_defaults='undefined' result_type='void'>
</method>
<method name='from' fullname='org.igniterealtime.xiff.events:InviteEvent/from/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='reason' fullname='org.igniterealtime.xiff.events:InviteEvent/reason/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='room' fullname='org.igniterealtime.xiff.events:InviteEvent/room/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.conference:Room' param_defaults='undefined' result_type='void'>
</method>
<field name='INVITED' fullname='org.igniterealtime.xiff.events:InviteEvent/INVITED' type='String' isStatic='true' isConst='true' defaultValue='invited' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:InviteEvent/private:_data' type='org.igniterealtime.xiff.data:Message' isStatic='false' isConst='false' >
</field>
<field name='_from' fullname='org.igniterealtime.xiff.events:InviteEvent/private:_from' type='org.igniterealtime.xiff.core:UnescapedJID' isStatic='false' isConst='false' >
</field>
<field name='_reason' fullname='org.igniterealtime.xiff.events:InviteEvent/private:_reason' type='String' isStatic='false' isConst='false' >
</field>
<field name='_room' fullname='org.igniterealtime.xiff.events:InviteEvent/private:_room' type='org.igniterealtime.xiff.conference:Room' isStatic='false' isConst='false' >
</field>
<classRec name='OutgoingDataEvent' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\OutgoingDataEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='OutgoingDataEvent' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent/OutgoingDataEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Outgoing uncompressed data.
		 ]]></description>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<field name='OUTGOING_DATA' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent/OUTGOING_DATA' type='String' isStatic='true' isConst='true' defaultValue='outgoingData' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:OutgoingDataEvent/private:_data' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<classRec name='XIFFErrorEvent' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\XIFFErrorEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 RFC 3920 (XMPP Core, published October 2004),
	 in chapters 4.7. defines Stream Errors.
	 	 <p>The following rules apply to stream-level errors:</p>
	 	 <p>It is assumed that all stream-level errors are unrecoverable;
	 therefore, if an error occurs at the level of the stream, the
	 entity that detects the error MUST send a stream error to the
	 other entity, send a closing <strong>stream</strong> tag, and terminate the
	 underlying TCP connection.</p>
	 	 <p>If the error occurs while the stream is being set up, the
	 receiving entity MUST still send the opening <strong>stream</strong> tag, include
	 the <strong>error</strong> element as a child of the stream element, send the
	 closing <strong>stream</strong> tag, and terminate the underlying TCP
	 connection.  In this case, if the initiating entity provides an
	 unknown host in the 'to' attribute (or provides no 'to' attribute
	 at all), the server SHOULD provide the server's authoritative
	 hostname in the 'from' attribute of the stream header sent before
	 termination.</p>
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-4.7
	 ]]></see>
</classRec>
<method name='XIFFErrorEvent' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/XIFFErrorEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='errorCode' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 Legacy error code
		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0086.html
		 ]]></see>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorCondition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 <p>The following stream-level error conditions are defined:</p>
		 		 <ul>
		 <li><strong>bad-format</strong> - the entity has sent XML that cannot be processed;
		 this error MAY be used instead of the more specific XML-related
		 errors, such as <strong>bad-namespace-prefix</strong>, <strong>invalid-xml</strong>,
		 <strong>restricted-xml</strong>, <strong>unsupported-encoding</strong>, and
		 <strong>xml-not-well-formed</strong>, although the more specific errors are
		 preferred.</li>
		 		 <li><strong>bad-namespace-prefix</strong> - the entity has sent a namespace prefix
		 that is unsupported, or has sent no namespace prefix on an element
		 that requires such a prefix (see XML Namespace Names and Prefixes
		 (Section 11.2)).</li>
		 		 <li><strong>conflict</strong> - the server is closing the active stream for this
		 entity because a new stream has been initiated that conflicts with
		 the existing stream.</li>
		 		 <li><strong>connection-timeout</strong> - the entity has not generated any traffic
		 over the stream for some period of time (configurable according to
		 a local service policy).</li>
		 		 <li><strong>host-gone</strong> - the value of the 'to' attribute provided by the
		 initiating entity in the stream header corresponds to a hostname
		 that is no longer hosted by the server.</li>
		 		 <li><strong>host-unknown</strong> - the value of the 'to' attribute provided by the
		 initiating entity in the stream header does not correspond to a
		 hostname that is hosted by the server.</li>
		 		 <li><strong>improper-addressing</strong> - a stanza sent between two servers lacks
		 a 'to' or 'from' attribute (or the attribute has no value).</li>
		 		 <li><strong>internal-server-error</strong> - the server has experienced a
		 misconfiguration or an otherwise-undefined internal error that
		 prevents it from servicing the stream.</li>
		 		 <li><strong>invalid-from</strong> - the JID or hostname provided in a 'from'
		 address does not match an authorized JID or validated domain
		 negotiated between servers via SASL or dialback, or between a
		 client and a server via authentication and resource binding.</li>
		 		 <li><strong>invalid-id</strong> - the stream ID or dialback ID is invalid or does
		 not match an ID previously provided.</li>
		 		 <li><strong>invalid-namespace</strong> - the streams namespace name is something
		 other than "http://etherx.jabber.org/streams" or the dialback
		 namespace name is something other than "jabber:server:dialback"
		 (see XML Namespace Names and Prefixes (Section 11.2)).</li>
		 		 <li><strong>invalid-xml</strong> - the entity has sent invalid XML over the stream
		 to a server that performs validation (see Validation (Section
		 11.3)).</li>
		 		 <li><strong>not-authorized</strong> - the entity has attempted to send data before
		 the stream has been authenticated, or otherwise is not authorized
		 to perform an action related to stream negotiation; the receiving
		 entity MUST NOT process the offending stanza before sending the
		 stream error.</li>
		 		 <li><strong>policy-violation</strong> - the entity has violated some local service
		 policy; the server MAY choose to specify the policy in the <strong>text</strong>
		 element or an application-specific condition element.</li>
		 		 <li><strong>remote-connection-failed</strong> - the server is unable to properly
		 connect to a remote entity that is required for authentication or
		 authorization.</li>
		 		 <li><strong>resource-constraint</strong> - the server lacks the system resources
		 necessary to service the stream.</li>
		 		 <li><strong>restricted-xml</strong> - the entity has attempted to send restricted
		 XML features such as a comment, processing instruction, DTD,
		 entity reference, or unescaped character (see Restrictions
		 (Section 11.1)).</li>
		 		 <li><strong>see-other-host</strong> - the server will not provide service to the
		 initiating entity but is redirecting traffic to another host; the
		 server SHOULD specify the alternate hostname or IP address (which
		 MUST be a valid domain identifier) as the XML character data of
		 the <strong>see-other-host</strong> element.</li>
		 		 <li><strong>system-shutdown</strong> - the server is being shut down and all active
		 streams are being closed.</li>
		 		 <li><strong>undefined-condition</strong> - the error condition is not one of those
		 defined by the other conditions in this list; this error condition
		 SHOULD be used only in conjunction with an application-specific
		 condition.</li>
		 		 <li><strong>unsupported-encoding</strong> - the initiating entity has encoded the
		 stream in an encoding that is not supported by the server (see
		 Character Encoding (Section 11.5)).</li>
		 		 <li><strong>unsupported-stanza-type</strong> - the initiating entity has sent a
		 first-level child of the stream that is not supported by the
		 server.</li>
		 		 <li><strong>unsupported-version</strong> - the value of the 'version' attribute
		 provided by the initiating entity in the stream header specifies a
		 version of XMPP that is not supported by the server; the server
		 MAY specify the version(s) it supports in the <strong>text</strong> element.</li>
		 		 <li><strong>xml-not-well-formed</strong> - the initiating entity has sent XML that
		 is not well-formed as defined by [XML].</li>
		 </ul>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3920#section-4.7.3
		 ]]></see>
</method>
<method name='errorExt' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorExt/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data:Extension'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorMessage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='errorCode' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorCode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='errorCondition' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorCondition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorExt' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorExt/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data:Extension' param_defaults='undefined' result_type='void'>
</method>
<method name='errorMessage' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorMessage/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='errorType' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/errorType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='XIFF_ERROR' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/XIFF_ERROR' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_errorCode' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/private:_errorCode' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_errorCondition' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/private:_errorCondition' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_errorExt' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/private:_errorExt' type='org.igniterealtime.xiff.data:Extension' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_errorMessage' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/private:_errorMessage' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<field name='_errorType' fullname='org.igniterealtime.xiff.events:XIFFErrorEvent/private:_errorType' type='String' isStatic='false' isConst='false' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<classRec name='IncomingDataEvent' fullname='org.igniterealtime.xiff.events:IncomingDataEvent' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\events\IncomingDataEvent.as' namespace='org.igniterealtime.xiff.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='IncomingDataEvent' fullname='org.igniterealtime.xiff.events:IncomingDataEvent/IncomingDataEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clone' fullname='org.igniterealtime.xiff.events:IncomingDataEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.events:IncomingDataEvent/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:IncomingDataEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 The uncompressed data received
		 ]]></description>
</method>
<method name='data' fullname='org.igniterealtime.xiff.events:IncomingDataEvent/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<field name='INCOMING_DATA' fullname='org.igniterealtime.xiff.events:IncomingDataEvent/INCOMING_DATA' type='String' isStatic='true' isConst='true' defaultValue='incomingData' >
</field>
<field name='_data' fullname='org.igniterealtime.xiff.events:IncomingDataEvent/private:_data' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<interfaceRec name='ICollection' fullname='org.igniterealtime.xiff.collections:ICollection' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\collections\ICollection.as' namespace='org.igniterealtime.xiff.collections' access='public' baseClasses='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='addItemAt' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:addItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='item;index' param_types='*;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='addItem' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='clearSource' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:clearSource' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='contains' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:contains' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='getItemAt' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:getItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='*'>
</method>
<method name='getItemIndex' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:getItemIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='int'>
</method>
<method name='itemUpdated' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:itemUpdated' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='removeAll' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:removeAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeItemAt' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:removeItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='*'>
</method>
<method name='removeItem' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:removeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='setItemAt' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:setItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='item;index' param_types='*;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='length' fullname='org.igniterealtime.xiff.collections:ICollection/org.igniterealtime.xiff.collections:ICollection:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<classRec name='ArrayCollection' fullname='org.igniterealtime.xiff.collections:ArrayCollection' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\collections\ArrayCollection.as' namespace='org.igniterealtime.xiff.collections' access='public' baseclass='flash.utils:Proxy' interfaces='org.igniterealtime.xiff.collections:ICollection' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 The ArrayCollection class is a wrapper class that exposes an Array as a
	 collection that can be accessed and manipulated using collection methods.
	 ]]></description>
</classRec>
<method name='ArrayCollection' fullname='org.igniterealtime.xiff.collections:ArrayCollection/ArrayCollection' isStatic='false' isFinal='false' isOverride='false'  param_names='source' param_types='Array' param_defaults='null' result_type='*'>
<description><![CDATA[
		 Constructor.
		 ]]></description>
</method>
<method name='addEventListener' fullname='org.igniterealtime.xiff.collections:ArrayCollection/addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[
		 Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event.
		 ]]></description>
</method>
<method name='addItemAt' fullname='org.igniterealtime.xiff.collections:ArrayCollection/addItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='item;index' param_types='*;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Add the specified item at the specified index.
		 Any item that was after this index is moved out by one.
		 ]]></description>
</method>
<method name='addItem' fullname='org.igniterealtime.xiff.collections:ArrayCollection/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Add the specified item to the end of the list.
		 Equivalent to addItemAt( item, length );
		 ]]></description>
</method>
<method name='callProperty' fullname='org.igniterealtime.xiff.collections:ArrayCollection/flash_proxy:callProperty' isStatic='false' isFinal='false' isOverride='true'  param_names='name;rest' param_types='*;restParam' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearSource' fullname='org.igniterealtime.xiff.collections:ArrayCollection/clearSource' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Remove all items from the ArrayCollection without dispatching a RESET event.
		 ]]></description>
</method>
<method name='contains' fullname='org.igniterealtime.xiff.collections:ArrayCollection/contains' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Returns whether the ArrayCollection contains the specified item.
		 ]]></description>
</method>
<method name='dispatchEvent' fullname='org.igniterealtime.xiff.collections:ArrayCollection/dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Dispatches an event into the event flow.
		 ]]></description>
</method>
<method name='getItemAt' fullname='org.igniterealtime.xiff.collections:ArrayCollection/getItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Get the item at the specified index.
		 ]]></description>
</method>
<method name='getItemIndex' fullname='org.igniterealtime.xiff.collections:ArrayCollection/getItemIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		 Get the index of the item if it is in the ArrayCollection such that getItemAt( index ) == item.
		 ]]></description>
</method>
<method name='getProperty' fullname='org.igniterealtime.xiff.collections:ArrayCollection/flash_proxy:getProperty' isStatic='false' isFinal='false' isOverride='true'  param_names='name' param_types='*' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasEventListener' fullname='org.igniterealtime.xiff.collections:ArrayCollection/hasEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Checks whether the EventDispatcher object has any listeners registered for a specific type of event.
		 ]]></description>
</method>
<method name='hasProperty' fullname='org.igniterealtime.xiff.collections:ArrayCollection/flash_proxy:hasProperty' isStatic='false' isFinal='false' isOverride='true'  param_names='name' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		  ]]></description>
<param><![CDATA[name The property name that should be tested for existence.
		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='internalDispatchEvent' fullname='org.igniterealtime.xiff.collections:ArrayCollection/protected:internalDispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='kind;item;location' param_types='String;*;int' param_defaults='undefined;null;-1' result_type='void'>
<description><![CDATA[
		 Dispatches a collection event with the specified information.
		 ]]></description>
</method>
<method name='itemUpdated' fullname='org.igniterealtime.xiff.collections:ArrayCollection/itemUpdated' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Notifies the view that an item has been updated.
		 ]]></description>
</method>
<method name='nextNameIndex' fullname='org.igniterealtime.xiff.collections:ArrayCollection/flash_proxy:nextNameIndex' isStatic='false' isFinal='false' isOverride='true'  param_names='index' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='nextName' fullname='org.igniterealtime.xiff.collections:ArrayCollection/flash_proxy:nextName' isStatic='false' isFinal='false' isOverride='true'  param_names='index' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='nextValue' fullname='org.igniterealtime.xiff.collections:ArrayCollection/flash_proxy:nextValue' isStatic='false' isFinal='false' isOverride='true'  param_names='index' param_types='int' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeAll' fullname='org.igniterealtime.xiff.collections:ArrayCollection/removeAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Remove all items from the ArrayCollection.
		 ]]></description>
</method>
<method name='removeEventListener' fullname='org.igniterealtime.xiff.collections:ArrayCollection/removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[
		 Removes a listener from the EventDispatcher object.
		 ]]></description>
</method>
<method name='removeItemAt' fullname='org.igniterealtime.xiff.collections:ArrayCollection/removeItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 Removes the item at the specified index and returns it.
		 Any items that were after this index are now one index earlier.
		 ]]></description>
</method>
<method name='removeItem' fullname='org.igniterealtime.xiff.collections:ArrayCollection/removeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='*' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Remove the specified item from this list, should it exist.
		 ]]></description>
</method>
<method name='setItemAt' fullname='org.igniterealtime.xiff.collections:ArrayCollection/setItemAt' isStatic='false' isFinal='false' isOverride='false'  param_names='item;index' param_types='*;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 Places the item at the specified index.
		 If an item was already at that index the new item will replace it
		 and it will be returned.
		 ]]></description>
</method>
<method name='setProperty' fullname='org.igniterealtime.xiff.collections:ArrayCollection/flash_proxy:setProperty' isStatic='false' isFinal='false' isOverride='true'  param_names='name;value' param_types='*;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='toArray' fullname='org.igniterealtime.xiff.collections:ArrayCollection/toArray' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Return an Array that is populated in the same order as the ArrayCollection.
		 ]]></description>
</method>
<method name='toString' fullname='org.igniterealtime.xiff.collections:ArrayCollection/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Pretty prints the contents of the ArrayCollection to a string and returns it.
		 ]]></description>
</method>
<method name='willTrigger' fullname='org.igniterealtime.xiff.collections:ArrayCollection/willTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Checks whether an event listener is registered with this EventDispatcher object or any of its ancestors for the specified event type.
		 ]]></description>
</method>
<method name='length' fullname='org.igniterealtime.xiff.collections:ArrayCollection/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 The number of items in the ArrayCollection.
		 ]]></description>
</method>
<method name='source' fullname='org.igniterealtime.xiff.collections:ArrayCollection/source/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 The source of data in the ArrayCollection.
		 ]]></description>
</method>
<method name='source' fullname='org.igniterealtime.xiff.collections:ArrayCollection/source/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='OUT_OF_BOUNDS_MESSAGE' fullname='org.igniterealtime.xiff.collections:ArrayCollection/protected:OUT_OF_BOUNDS_MESSAGE' type='String' isStatic='false' isConst='true' defaultValue='The supplied index is out of bounds.' >
</field>
<field name='_source' fullname='org.igniterealtime.xiff.collections:ArrayCollection/protected:_source' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='eventDispatcher' fullname='org.igniterealtime.xiff.collections:ArrayCollection/protected:eventDispatcher' type='flash.events:EventDispatcher' isStatic='false' isConst='false' >
</field>
<classRec name='SerializationException' fullname='org.igniterealtime.xiff.exception:SerializationException' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\exception\SerializationException.as' namespace='org.igniterealtime.xiff.exception' access='public' baseclass='Error' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This exception is thrown whenever there is a problem serializing or
	 deserializing data for sending to the server.
	 ]]></description>
</classRec>
<method name='SerializationException' fullname='org.igniterealtime.xiff.exception:SerializationException/SerializationException' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[
		 		 ]]></description>
</method>
<field name='MSG' fullname='org.igniterealtime.xiff.exception:SerializationException/private:MSG' type='String' isStatic='true' isConst='true' defaultValue='Could not properly serialize/deserialize stanza.' >
<description><![CDATA[
		 		 ]]></description>
<default><![CDATA[]]></default>
</field>
<interfaceRec name='IPrivatePayload' fullname='org.igniterealtime.xiff.privatedata:IPrivatePayload' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\privatedata\IPrivatePayload.as' namespace='org.igniterealtime.xiff.privatedata' access='public' baseClasses='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
</interfaceRec>
<classRec name='PrivateDataManager' fullname='org.igniterealtime.xiff.privatedata:PrivateDataManager' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\privatedata\PrivateDataManager.as' namespace='org.igniterealtime.xiff.privatedata' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0049: Private XML Storage
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0049.html
	 ]]></see>
</classRec>
<method name='PrivateDataManager' fullname='org.igniterealtime.xiff.privatedata:PrivateDataManager/PrivateDataManager' isStatic='false' isFinal='false' isOverride='false'  param_names='aConnection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[aConnection
		 ]]></param>
</method>
<method name='getPrivateData' fullname='org.igniterealtime.xiff.privatedata:PrivateDataManager/getPrivateData' isStatic='false' isFinal='false' isOverride='false'  param_names='elementName;elementNamespace;callback' param_types='String;String;org.igniterealtime.xiff.util:Callback' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[elementName
		 ]]></param>
<param><![CDATA[elementNamespace
		 ]]></param>
<param><![CDATA[callback
		 ]]></param>
</method>
<method name='setPrivateData' fullname='org.igniterealtime.xiff.privatedata:PrivateDataManager/setPrivateData' isStatic='false' isFinal='false' isOverride='false'  param_names='elementName;elementNamespace;payload' param_types='String;String;org.igniterealtime.xiff.privatedata:IPrivatePayload' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[elementName
		 ]]></param>
<param><![CDATA[elementNamespace
		 ]]></param>
<param><![CDATA[payload
		 ]]></param>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.privatedata:PrivateDataManager/connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
<description><![CDATA[
		 The instance of the XMPPConnection class to use for sending and
		 receiving data.
		 ]]></description>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.privatedata:PrivateDataManager/connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<field name='_connection' fullname='org.igniterealtime.xiff.privatedata:PrivateDataManager/private:_connection' type='org.igniterealtime.xiff.core:IXMPPConnection' isStatic='false' isConst='false' >
</field>
<interfaceRec name='IRoster' fullname='org.igniterealtime.xiff.im:IRoster' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\im\IRoster.as' namespace='org.igniterealtime.xiff.im' access='public' baseClasses='org.igniterealtime.xiff.collections:ICollection' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='addContact' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:addContact' isStatic='false' isFinal='false' isOverride='false'  param_names='id;nickname;groupName;requestSubscription' param_types='org.igniterealtime.xiff.core:UnescapedJID;String;String;Boolean' param_defaults='undefined;undefined;null;true' result_type='void'>
</method>
<method name='denySubscription' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:denySubscription' isStatic='false' isFinal='false' isOverride='false'  param_names='tojid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='fetchRoster' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:fetchRoster' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getContainingGroups' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:getContainingGroups' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='Array'>
</method>
<method name='getGroup' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:getGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.im:IRosterGroup'>
</method>
<method name='getPresence' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:getPresence' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='org.igniterealtime.xiff.data:IPresence'>
</method>
<method name='grantSubscription' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:grantSubscription' isStatic='false' isFinal='false' isOverride='false'  param_names='tojid;requestAfterGrant' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;true' result_type='void'>
</method>
<method name='removeContact' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:removeContact' isStatic='false' isFinal='false' isOverride='false'  param_names='rosterItem' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='void'>
</method>
<method name='requestSubscription' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:requestSubscription' isStatic='false' isFinal='false' isOverride='false'  param_names='id;isResponse' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;false' result_type='void'>
</method>
<method name='setPresence' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:setPresence' isStatic='false' isFinal='false' isOverride='false'  param_names='show;status;priority' param_types='String;String;int' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='updateContactGroups' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:updateContactGroups' isStatic='false' isFinal='false' isOverride='false'  param_names='rosterItem;newGroupNames' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;Array' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='updateContactName' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:updateContactName' isStatic='false' isFinal='false' isOverride='false'  param_names='rosterItem;newName' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.im:IRoster/org.igniterealtime.xiff.im:IRoster:connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Roster' fullname='org.igniterealtime.xiff.im:Roster' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\im\Roster.as' namespace='org.igniterealtime.xiff.im' access='public' baseclass='org.igniterealtime.xiff.collections:ArrayCollection' interfaces='org.igniterealtime.xiff.im:IRoster' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Manages a user's server-side instant messaging roster (or "buddy list"). By default,
	 this class uses an internal data provider to keep track of roster data locally and
	 provides a "read-only" form of the Data Provider API for external use. Non-read operations
	 are performed using alternative, roster-specific methods.
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3921#section-7
	 ]]></see>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='userSubscriptionUpdated' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.USER_SUBSCRIPTION_UPDATED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='userPresenceUpdated' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.USER_PRESENCE_UPDATED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='userRemoved' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.USER_REMOVED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='rosterLoaded' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.ROSTER_LOADED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='userAvailable' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 Broadcast whenever a contact in the roster becomes available. (Goes from offline to online.)
	 The event object contains an attribute <code>jid</code> with the JID of the user who
	 became available.
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.USER_AVAILABLE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='userAvailable' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 Broadcast whenever a contact in the roster becomes unavailable. (Goes from online to offline.)
	 The event object contains an attribute <code>jid</code> with the JID of the user who
	 became unavailable.
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.USER_UNAVAILABLE
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='subscriptionDenial' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 Broadcast whenever a subscription request that you make (via the <code>addContact()</code>
	 or <code>requestSubscription()</code> methods) is denied.
	 	 The event object contains an attribute <code>jid</code> with the JID of the user who
	 denied the request.
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_DENIAL
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='subscriptionRequest' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 Broadcast whenever someone requests to subscribe to your presence. The event object
	 contains an attribute <code>jid</code> with the JID of the user who is requesting
	 a presence subscription.
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_REQUEST
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.im:Roster' name='subscriptionRevocation' type='org.igniterealtime.xiff.events.RosterEvent' >
<description><![CDATA[
	 Broadcast whenever someone revokes your presence subscription. This is not
	 an event that is fired when you revoke a subscription, but rather when one of your
	 contacts decides that he/she/it no longer wants you to know about their presence
	 status.
	 	 The event object contains an attribute <code>jid</code> with the JID of
	 the user who revoked your subscription.
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.RosterEvent.SUBSCRIPTION_REVOCATION
	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='Roster' fullname='org.igniterealtime.xiff.im:Roster/Roster' isStatic='false' isFinal='false' isOverride='false'  param_names='aConnection' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[aConnection A reference to an XMPPConnection class instance
		 ]]></param>
</method>
<method name='addContact_result' fullname='org.igniterealtime.xiff.im:Roster/addContact_result' isStatic='false' isFinal='false' isOverride='false'  param_names='resultIQ' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[resultIQ
		 ]]></param>
</method>
<method name='addContact' fullname='org.igniterealtime.xiff.im:Roster/addContact' isStatic='false' isFinal='false' isOverride='false'  param_names='id;nickname;groupName;requestSubscription' param_types='org.igniterealtime.xiff.core:UnescapedJID;String;String;Boolean' param_defaults='undefined;undefined;null;true' result_type='void'>
<description><![CDATA[
		 Adds a contact to the roster. Remember: All roster data is managed on the server-side,
		 so this contact is added to the server-side roster first, and upon successful addition,
		 reflected in the local client-side copy of the roster.
		 		 ]]></description>
<example><![CDATA[This example adds a contact to the roster and simultaneously requests a presence subscription
		 with the new contact.
		 <pre>myRoster.addContact( "homer&#64;springfield.com", "Homer", "Drinking Buddies", true );</pre>
		 ]]></example>
<param><![CDATA[id The JID of the contact to add
		 ]]></param>
<param><![CDATA[nickname A friendly name for use when displaying this contact in the roster
		 ]]></param>
<param><![CDATA[groupName (Optional) The name of the group that this contact should be added to. (Used for
		 organization in the roster listing.
		 ]]></param>
<param><![CDATA[requestSubscription (Optional) Determines whether a subscription request should be sent
		 to this user. Most of the time you will want this parameter to be true.
		 You will be unable to view the contacts presence status until a subscription request is granted.
		 ]]></param>
</method>
<method name='addRosterItem' fullname='org.igniterealtime.xiff.im:Roster/private:addRosterItem' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;nickname;show;status;groupNames;type;askType' param_types='org.igniterealtime.xiff.core:UnescapedJID;String;String;String;Array;String;String' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;none' result_type='Boolean'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
<param><![CDATA[nickname
		 ]]></param>
<param><![CDATA[show
		 ]]></param>
<param><![CDATA[status
		 ]]></param>
<param><![CDATA[groupNames
		 ]]></param>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[askType
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='denySubscription' fullname='org.igniterealtime.xiff.im:Roster/denySubscription' isStatic='false' isFinal='false' isOverride='false'  param_names='to' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Revokes an existing presence subscription or denies a subscription request. If a user
		 has sent you a subscription request you can use this method to deny that request. Otherwise,
		 if a user already has a granted presence subscription, you can use this method to revoke that
		 subscription.
		 		 ]]></description>
<param><![CDATA[to The JID of the user or service that you are denying subscription
		 ]]></param>
</method>
<method name='fetchRoster_result' fullname='org.igniterealtime.xiff.im:Roster/fetchRoster_result' isStatic='false' isFinal='false' isOverride='false'  param_names='resultIQ' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[resultIQ
		 ]]></param>
</method>
<method name='fetchRoster' fullname='org.igniterealtime.xiff.im:Roster/fetchRoster' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Fetches the roster data from the server. Once the data has been fetched, the Roster's data
		 provider is populated appropriately. If the Roster-XMPPConnection class dependency has been
		 set up before logging in, then this method will be called automatically because the Roster
		 listens for "login" events from the XMPPConnection.
		 ]]></description>
</method>
<method name='getContainingGroups' fullname='org.igniterealtime.xiff.im:Roster/getContainingGroups' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='Array'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[item
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getGroup' fullname='org.igniterealtime.xiff.im:Roster/getGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.im:IRosterGroup'>
<description><![CDATA[
		 Get a group by given name
		 ]]></description>
<param><![CDATA[name
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getPresence' fullname='org.igniterealtime.xiff.im:Roster/getPresence' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='org.igniterealtime.xiff.data:IPresence'>
<description><![CDATA[
		 Get the Presence of the given user if any.
		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='grantSubscription' fullname='org.igniterealtime.xiff.im:Roster/grantSubscription' isStatic='false' isFinal='false' isOverride='false'  param_names='tojid;requestAfterGrant' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[
		 Grants a user or service authorization for subscribing to your presence. Once authorization
		 is granted, the user can see whether you are offline, online, away, etc. Subscriptions can
		 be revoked at any time using the <code>denySubscription()</code> method.
		 		 ]]></description>
<param><![CDATA[tojid The JID of the user or service to grant subscription to
		 ]]></param>
<param><![CDATA[requestAfterGrant Whether or not a reciprocal subscription request should be sent
		 to the grantee, so that you may, in turn, subscribe to his/her/its presence.
		 ]]></param>
</method>
<method name='handleEvent' fullname='org.igniterealtime.xiff.im:Roster/private:handleEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='eventObj' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[eventObj PresenceEvent, LoginEvent or RosterExtension
		 ]]></param>
</method>
<method name='handlePresences' fullname='org.igniterealtime.xiff.im:Roster/private:handlePresences' isStatic='false' isFinal='false' isOverride='false'  param_names='presenceArray' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Dispathing <code>RosterEvent</code> based on the types of the <code>Presence</code>.
		 ]]></description>
<param><![CDATA[presenceArray	A pile of presences received at one time
		 ]]></param>
</method>
<method name='removeContact' fullname='org.igniterealtime.xiff.im:Roster/removeContact' isStatic='false' isFinal='false' isOverride='false'  param_names='rosterItem' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Removes a contact from the roster and revokes all presence subscriptions for that contact.
		 This method will only attempt action if the contact you are trying to remove is currently on the
		 roster in the first place.
		 		 ]]></description>
<param><![CDATA[rosterItem The value object which is to be removed
		 ]]></param>
</method>
<method name='requestSubscription' fullname='org.igniterealtime.xiff.im:Roster/requestSubscription' isStatic='false' isFinal='false' isOverride='false'  param_names='id;isResponse' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[
		 Requests subscription authorization with a user or service. In the XMPP-world, you cannot receive
		 notifications on changes to a contact's presence until that contact has authorized you to subscribe
		 to his/her/its presence.
		 		 ]]></description>
<param><![CDATA[id The JID of the user or service that you wish to subscribe to
		 ]]></param>
<param><![CDATA[isResponse
		 ]]></param>
<see><![CDATA[#subscriptionDenial
		 ]]></see>
</method>
<method name='setContactGroups' fullname='org.igniterealtime.xiff.im:Roster/private:setContactGroups' isStatic='false' isFinal='false' isOverride='false'  param_names='contact;groupNames' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;Array' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[contact
		 ]]></param>
<param><![CDATA[groupNames
		 ]]></param>
</method>
<method name='setPresence' fullname='org.igniterealtime.xiff.im:Roster/setPresence' isStatic='false' isFinal='false' isOverride='false'  param_names='show;status;priority' param_types='String;String;int' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Sets your current presence status. Calling this method notifies others who
		 are subscribed to your presence of a presence change. You should use this to
		 change your status to away, extended-away, etc. There are static variables that
		 you can use defined in the presence class for the <code>show</code> parameter:
		 <ul>
		 <li><code>Presence.SHOW_AWAY</code></li>
		 <li><code>Presence.SHOW_CHAT</code></li>
		 <li><code>Presence.SHOW_DND</code></li>
		 <li><code>Presence.SHOW_NORMAL</code></li>
		 <li><code>Presence.SHOW_XA</code></li>
		 </ul>
		 		 ]]></description>
<param><![CDATA[show The show type for your presence. This represents what others should see - whether
		 you are offline, online, away, etc.
		 ]]></param>
<param><![CDATA[status The status message associated with the show value
		 ]]></param>
<param><![CDATA[priority (Optional) A priority integer for the presence
		 ]]></param>
<see><![CDATA[org.igniterealtime.xiff.data.Presence
		 ]]></see>
</method>
<method name='unsubscribe_result' fullname='org.igniterealtime.xiff.im:Roster/unsubscribe_result' isStatic='false' isFinal='false' isOverride='false'  param_names='resultIQ' param_types='org.igniterealtime.xiff.data:IQ' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[resultIQ
		 ]]></param>
</method>
<method name='updateContactGroups' fullname='org.igniterealtime.xiff.im:Roster/updateContactGroups' isStatic='false' isFinal='false' isOverride='false'  param_names='rosterItem;newGroupNames' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;Array' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Updates the groups associated with an existing contact.
		 		 ]]></description>
<param><![CDATA[rosterItem The value object of the contact to update
		 ]]></param>
<param><![CDATA[newGroups The new groups to associate the contact with
		 ]]></param>
</method>
<method name='updateContactName' fullname='org.igniterealtime.xiff.im:Roster/updateContactName' isStatic='false' isFinal='false' isOverride='false'  param_names='rosterItem;newName' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Updates the display name for an existing contact.
		 		 ]]></description>
<param><![CDATA[rosterItem The value object of the contact to update
		 ]]></param>
<param><![CDATA[newName The new display name for this contact
		 ]]></param>
</method>
<method name='updateContact' fullname='org.igniterealtime.xiff.im:Roster/private:updateContact' isStatic='false' isFinal='false' isOverride='false'  param_names='rosterItem;newName;groupNames' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;String;Array' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Updates the information for an existing contact. You can use this method to change the
		 display name or associated group for a contact in your roster.
		 		 ]]></description>
<param><![CDATA[rosterItem The value object of the contact to update
		 ]]></param>
<param><![CDATA[newName The new display name for this contact
		 ]]></param>
<param><![CDATA[newGroups The new groups to associate the contact with
		 ]]></param>
</method>
<method name='updateRosterItemPresence' fullname='org.igniterealtime.xiff.im:Roster/private:updateRosterItemPresence' isStatic='false' isFinal='false' isOverride='false'  param_names='item;presence' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;org.igniterealtime.xiff.data:Presence' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[item
		 ]]></param>
<param><![CDATA[presence
		 ]]></param>
</method>
<method name='updateRosterItemSubscription' fullname='org.igniterealtime.xiff.im:Roster/private:updateRosterItemSubscription' isStatic='false' isFinal='false' isOverride='false'  param_names='item;type;name;newGroupNames' param_types='org.igniterealtime.xiff.data.im:IRosterItemVO;String;String;Array' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[item
		 ]]></param>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[name
		 ]]></param>
<param><![CDATA[newGroupNames
		 ]]></param>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.im:Roster/connection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:IXMPPConnection'>
<description><![CDATA[
		 The instance of the XMPPConnection class to use for the roster to use for
		 sending and receiving data.
		 ]]></description>
</method>
<method name='connection' fullname='org.igniterealtime.xiff.im:Roster/connection/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.core:IXMPPConnection' param_defaults='undefined' result_type='void'>
</method>
<field name='_connection' fullname='org.igniterealtime.xiff.im:Roster/private:_connection' type='org.igniterealtime.xiff.core:IXMPPConnection' isStatic='false' isConst='false' >
</field>
<field name='_groups' fullname='org.igniterealtime.xiff.im:Roster/private:_groups' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Store groups as RosterGroup.
		 ]]></description>
</field>
<field name='_pendingSubscriptionRequests' fullname='org.igniterealtime.xiff.im:Roster/private:_pendingSubscriptionRequests' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 List of <code>UnescapedJID</code> which are pending for subscription.
		 ]]></description>
</field>
<field name='_presenceMap' fullname='org.igniterealtime.xiff.im:Roster/private:_presenceMap' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[
		 Store presences of the people in users roster.
		 ]]></description>
</field>
<classRec name='BookmarkManager' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\bookmark\BookmarkManager.as' namespace='org.igniterealtime.xiff.bookmark' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0048: Bookmarks
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0048.html
	 ]]></see>
<metadata>
	<Event owner='org.igniterealtime.xiff.bookmark:BookmarkManager' name='bookmarkRetrieved' type='org.igniterealtime.xiff.events.BookmarkRetrievedEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.BookmarkRetrievedEvent.BOOKMARK_RETRIEVED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.bookmark:BookmarkManager' name='groupchatBookmarkRemoved' type='org.igniterealtime.xiff.events.BookmarkChangedEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.BookmarkChangedEvent.GROUPCHAT_BOOKMARK_REMOVED
	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='org.igniterealtime.xiff.bookmark:BookmarkManager' name='groupchatBookmarkAdded' type='org.igniterealtime.xiff.events.BookmarkChangedEvent' >
<description><![CDATA[
	 ]]></description>
<eventType><![CDATA[org.igniterealtime.xiff.events.BookmarkChangedEvent.GROUPCHAT_BOOKMARK_ADDED
	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='BookmarkManager' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/BookmarkManager' isStatic='false' isFinal='false' isOverride='false'  param_names='privateDataManager' param_types='org.igniterealtime.xiff.privatedata:PrivateDataManager' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[privateDataManager
		 ]]></param>
</method>
<method name='_addBookmark' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_addBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='bookmark' param_types='org.igniterealtime.xiff.data:INodeProxy' param_defaults='undefined' result_type='void'>
</method>
<method name='_processBookmarksAdd' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_processBookmarksAdd' isStatic='false' isFinal='false' isOverride='false'  param_names='bookmark;bookmarksIq' param_types='org.igniterealtime.xiff.data:INodeProxy;org.igniterealtime.xiff.data:XMPPStanza' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_processBookmarksRemove' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_processBookmarksRemove' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;bookmarksIq' param_types='org.igniterealtime.xiff.core:UnescapedJID;org.igniterealtime.xiff.data:XMPPStanza' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_processBookmarksSetAuto' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_processBookmarksSetAuto' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;state;bookmarksIq' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean;org.igniterealtime.xiff.data:XMPPStanza' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='_processBookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_processBookmarks' isStatic='false' isFinal='false' isOverride='false'  param_names='bookmarksIq' param_types='org.igniterealtime.xiff.data:XMPPStanza' param_defaults='undefined' result_type='void'>
</method>
<method name='_removeBookmark' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_removeBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
</method>
<method name='_setAutoJoin' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_setAutoJoin' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;state' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_updateBookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_updateBookmarks' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='addGroupChatBookmark' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/addGroupChatBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='serverBookmark' param_types='org.igniterealtime.xiff.bookmark:GroupChatBookmark' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[serverBookmark
		 ]]></param>
</method>
<method name='fetchBookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/fetchBookmarks' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getGroupChatBookmark' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/getGroupChatBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='org.igniterealtime.xiff.bookmark:GroupChatBookmark'>
<description><![CDATA[
		 Get a group chat bookmark with the given JID
		 		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='isGroupChatBookmarked' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/isGroupChatBookmarked' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Does there exist a group chat bookmark with the given JID
		 		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='removeGroupChatBookmark' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/removeGroupChatBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Remove
		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
</method>
<method name='setAutoJoin' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/setAutoJoin' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;state' param_types='org.igniterealtime.xiff.core:UnescapedJID;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Set autoJoin for the given bookmark JID
		 		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
<param><![CDATA[state
		 ]]></param>
</method>
<method name='bookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/bookmarks/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload'>
<description><![CDATA[
		 		 ]]></description>
</method>
<field name='_bookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_bookmarks' type='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload' isStatic='false' isConst='false' >
</field>
<field name='_privateDataManager' fullname='org.igniterealtime.xiff.bookmark:BookmarkManager/private:_privateDataManager' type='org.igniterealtime.xiff.privatedata:PrivateDataManager' isStatic='false' isConst='false' >
</field>
<classRec name='BookmarkPrivatePayload' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\bookmark\BookmarkPrivatePayload.as' namespace='org.igniterealtime.xiff.bookmark' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.privatedata:IPrivatePayload' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0048: Bookmarks
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0048.html
	 ]]></see>
</classRec>
<method name='BookmarkPrivatePayload' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/BookmarkPrivatePayload' isStatic='false' isFinal='false' isOverride='false'  param_names='groupChatBookmarks;urlBookmarks' param_types='Array;Array' param_defaults='null;null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[groupChatBookmarks
		 ]]></param>
<param><![CDATA[urlBookmarks
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='removeGroupChatBookmark' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/removeGroupChatBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='jid' param_types='org.igniterealtime.xiff.core:UnescapedJID' param_defaults='undefined' result_type='org.igniterealtime.xiff.bookmark:GroupChatBookmark'>
<description><![CDATA[
		 Removes the bookmark from the list, and returns it
		 ]]></description>
<param><![CDATA[jid
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='groupChatBookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/groupChatBookmarks/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='urlBookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/urlBookmarks/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 List of UrlBookmarks.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.bookmark.UrlBookmark
		 ]]></see>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/xml/set' isStatic='false' isFinal='false' isOverride='true'  param_names='bookmarks' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='storage' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/NS' type='String' isStatic='true' isConst='true' defaultValue='storage:bookmarks' >
</field>
<field name='_groupChatBookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/private:_groupChatBookmarks' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_others' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/private:_others' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_urlBookmarks' fullname='org.igniterealtime.xiff.bookmark:BookmarkPrivatePayload/private:_urlBookmarks' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='UrlBookmark' fullname='org.igniterealtime.xiff.bookmark:UrlBookmark' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\bookmark\UrlBookmark.as' namespace='org.igniterealtime.xiff.bookmark' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 The <strong>url</strong> element is designed for bookmarking web pages,
	 i.e., HTTP or HTTPS URLs.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0048.html#format-url
	 ]]></see>
</classRec>
<method name='UrlBookmark' fullname='org.igniterealtime.xiff.bookmark:UrlBookmark/UrlBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='url;name' param_types='String;String' param_defaults='undefined;null' result_type='*'>
<description><![CDATA[
		 Bookmark an url.
		 		 ]]></description>
<param><![CDATA[url REQUIRED
		 ]]></param>
<param><![CDATA[name RECOMMENDED
		 ]]></param>
</method>
<method name='name' fullname='org.igniterealtime.xiff.bookmark:UrlBookmark/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A friendly name for the bookmark.
		 ]]></description>
</method>
<method name='url' fullname='org.igniterealtime.xiff.bookmark:UrlBookmark/url/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The HTTP or HTTPS URL of the web page.
		 ]]></description>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.bookmark:UrlBookmark/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='url' >
</field>
<classRec name='GroupChatBookmark' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\bookmark\GroupChatBookmark.as' namespace='org.igniterealtime.xiff.bookmark' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0048: Bookmarks
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0048.html
	 ]]></see>
</classRec>
<method name='GroupChatBookmark' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/GroupChatBookmark' isStatic='false' isFinal='false' isOverride='false'  param_names='jid;name;autoJoin;nickname;password' param_types='org.igniterealtime.xiff.core:EscapedJID;String;Boolean;String;String' param_defaults='undefined;null;false;null;null' result_type='*'>
<description><![CDATA[
		 A common use case is bookmarking of multi-user chat rooms.
		 A room is bookmarked using the <strong>conference</strong> child element.
		 		 <p>Most of the properties can be set only via constructor or by setting the XML.</p>
		 		 ]]></description>
<param><![CDATA[jid			REQUIRED
		 ]]></param>
<param><![CDATA[name		RECOMMENDED
		 ]]></param>
<param><![CDATA[autoJoin	OPTIONAL
		 ]]></param>
<param><![CDATA[nickname	OPTIONAL
		 ]]></param>
<param><![CDATA[password	NOT RECOMMENDED
		 ]]></param>
<see><![CDATA[http://xmpp.org/extensions/xep-0048.html#format-conference
		 ]]></see>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='autoJoin' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/autoJoin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Whether the client should automatically join the conference room on login.
		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 The JabberID of the chat room.
		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A friendly name for the bookmark.
		 ]]></description>
</method>
<method name='nickname' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/nickname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The user's preferred roomnick for the chatroom.
		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Unencrypted string for the password needed to enter a password-protected room.
		 		 <p>For security reasons, use of this element is NOT RECOMMENDED.</p>
		 ]]></description>
</method>
<method name='autoJoin' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/autoJoin/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.bookmark:GroupChatBookmark/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='conference' >
</field>
<classRec name='FormField' fullname='org.igniterealtime.xiff.data.forms:FormField' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\forms\FormField.as' namespace='org.igniterealtime.xiff.data.forms' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class is used by the FormExtension class for managing fields
	 as fields have multiple behaviors depending on the type of the form
	 while containing different kinds of data, some optional some not.
	 	 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.forms.FormExtension
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0004.html
	 ]]></see>
</classRec>
<method name='FormField' fullname='org.igniterealtime.xiff.data.forms:FormField/FormField' isStatic='false' isFinal='false' isOverride='false'  param_names='type;varName;values;options;label;desc;required' param_types='String;String;Array;Array;String;String;Boolean' param_defaults='null;null;null;null;null;null;false' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[type
		 ]]></param>
<param><![CDATA[varName
		 ]]></param>
<param><![CDATA[values
		 ]]></param>
<param><![CDATA[options
		 ]]></param>
<param><![CDATA[label
		 ]]></param>
<param><![CDATA[desc
		 ]]></param>
<param><![CDATA[required
		 ]]></param>
</method>
<method name='desc' fullname='org.igniterealtime.xiff.data.forms:FormField/desc/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A natural-language description of the field, intended for presentation in a user-agent
		 (e.g., as a "tool-tip", help button, or explanatory text provided near the field).
		 ]]></description>
</method>
<method name='label' fullname='org.igniterealtime.xiff.data.forms:FormField/label/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A human-readable name for the field.
		 ]]></description>
</method>
<method name='options' fullname='org.igniterealtime.xiff.data.forms:FormField/options/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 If options are provided for possible selections of the value they are listed here.
		 		 <p>Applies to the following field types:</p>
		 		 <code>FormFieldType.LIST_MULTI</code>
		 <code>FormFieldType.LIST_SINGLE</code>
		 		 <p>Array of objects with the properties <code>label</code> and <code>value</code>, {label, value}.</p>
		 		 <p>The <strong>option</strong> element MUST contain one and only one
		 <strong>value</strong> child. If the field is not of type "list-single"
		 or "list-multi", it MUST NOT contain an <strong>option</strong> element.</p>
		 ]]></description>
</method>
<method name='required' fullname='org.igniterealtime.xiff.data.forms:FormField/required/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 If true, flags the field as required in order for the form to be considered valid.
		 ]]></description>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.forms:FormField/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The type of this field used by user interfaces to render an approprite
		 control to represent this field.
		 		 May be one of the following:
		 		 <code>FormFieldType.BOOLEAN</code>
		 <code>FormFieldType.FIXED</code>
		 <code>FormFieldType.HIDDEN</code>
		 <code>FormFieldType.JID_MULTI</code>
		 <code>FormFieldType.JID_SINGLE</code>
		 <code>FormFieldType.LIST_MULTI</code>
		 <code>FormFieldType.LIST_SINGLE</code>
		 <code>FormFieldType.TEXT_MULTI</code>
		 <code>FormFieldType.TEXT_PRIVATE</code>
		 <code>FormFieldType.TEXT_SINGLE</code>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0004.html#protocol-fieldtypes
		 ]]></see>
</method>
<method name='value' fullname='org.igniterealtime.xiff.data.forms:FormField/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The chosen value for this field. In forms with a type
		 <code>FormType.FORM</code> this is typically the default
		 value of the field.
		 		 Applies to the following field types:
		 		 <code>FormFieldType.BOOLEAN</code>
		 <code>FormFieldType.FIXED</code>
		 <code>FormFieldType.HIDDEN</code>
		 <code>FormFieldType.JID_SINGLE</code>
		 <code>FormFieldType.LIST_SINGLE</code>
		 <code>FormFieldType.LIST_MULTI</code>
		 <code>FormFieldType.TEXT_PRIVATE</code>
		 <code>FormFieldType.TEXT_SINGLE</code>
		 		 <p>Suggested values can typically be retrieved in <code>getAllOptions</code></p>
		 		 ]]></description>
</method>
<method name='values' fullname='org.igniterealtime.xiff.data.forms:FormField/values/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 The values for this multiple field.  In forms with a type
		 <code>FormType.FORM</code> these are typically the existing
		 values of the field.
		 		 Applies to the following field types:
		 		 <code>FormFieldType.JID_MULTI</code>
		 <code>FormFieldType.LIST_MULTI</code>
		 <code>FormFieldType.TEXT_MULTI</code>
		 		 Array containing strings representing the values of this field
		 ]]></description>
</method>
<method name='varName' fullname='org.igniterealtime.xiff.data.forms:FormField/varName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The var of this field used to uniquely identify the field in the context of the form.
		 		 Note: this serializes to the <code>var</code> attribute on the field node.
		 Since <code>var</code> is a reserved word in ActionScript
		 this field uses <code>varName</code> to describe the var of this field.
		 ]]></description>
</method>
<method name='desc' fullname='org.igniterealtime.xiff.data.forms:FormField/desc/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='label' fullname='org.igniterealtime.xiff.data.forms:FormField/label/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='options' fullname='org.igniterealtime.xiff.data.forms:FormField/options/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='required' fullname='org.igniterealtime.xiff.data.forms:FormField/required/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.forms:FormField/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='org.igniterealtime.xiff.data.forms:FormField/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='values' fullname='org.igniterealtime.xiff.data.forms:FormField/values/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='varName' fullname='org.igniterealtime.xiff.data.forms:FormField/varName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.forms:FormField/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='field' >
</field>
<classRec name='FormItem' fullname='org.igniterealtime.xiff.data.forms:FormItem' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\forms\FormItem.as' namespace='org.igniterealtime.xiff.data.forms' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0004.html
	 ]]></see>
</classRec>
<method name='FormItem' fullname='org.igniterealtime.xiff.data.forms:FormItem/FormItem' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.data.forms:FormItem/fields/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Item interface to array of fields if they are contained in a "field" element
		 		 ]]></description>
<return><![CDATA[Array of FormFields objects
		 ]]></return>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.data.forms:FormItem/fields/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.forms:FormItem/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='item' >
</field>
<classRec name='FormReported' fullname='org.igniterealtime.xiff.data.forms:FormReported' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\forms\FormReported.as' namespace='org.igniterealtime.xiff.data.forms' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 In some contexts (e.g., the results of a search request), it may be
	 necessary to communicate multiple items. Therefore, a data form of
	 type "result" MAY contain two child elements not described in the basic syntax:
	 <ol>
	 <li>One and only <strong>reported</strong> element, which can be understood as a "table header"
	 describing the data to follow.</li>
	 <li>Zero or more <strong>item</strong> elements, which can be understood as "table cells"
	 containing data (if any) that matches the request.</li>
	 </ol>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0004.html#protocol-results
	 ]]></see>
</classRec>
<method name='FormReported' fullname='org.igniterealtime.xiff.data.forms:FormReported/FormReported' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.data.forms:FormReported/fields/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Item interface to array of fields if they are contained in a "field" element
		 		 ]]></description>
<return><![CDATA[Array of FormFields objects
		 ]]></return>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.data.forms:FormReported/fields/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.forms:FormReported/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='reported' >
</field>
<classRec name='FormExtension' fullname='org.igniterealtime.xiff.data.forms:FormExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\forms\FormExtension.as' namespace='org.igniterealtime.xiff.data.forms' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0004: Data Forms
	 	 <p>Implements the base functionality of XEP-0004: Data Forms,
	 shared by all MUC extensions.</p>
	 	 <p>Also used by XEP-0128: Service Discovery Extensions</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0004.html
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0128.html
	 ]]></see>
</classRec>
<method name='FormExtension' fullname='org.igniterealtime.xiff.data.forms:FormExtension/FormExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.forms:FormExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getFormField' fullname='org.igniterealtime.xiff.data.forms:FormExtension/getFormField' isStatic='false' isFinal='false' isOverride='false'  param_names='varName' param_types='String' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.forms:FormField'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[varName The varName of the form field to retrieve
		 ]]></param>
<return><![CDATA[FormField the matching form field
		 ]]></return>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.forms:FormExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='setFieldMap' fullname='org.igniterealtime.xiff.data.forms:FormExtension/setFieldMap' isStatic='false' isFinal='false' isOverride='false'  param_names='fieldMap' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Sets the fields given a fieldMap object containing keys of field vars
		 and values of value arrays.
		 		 <p>Shorthand for setting <code>fields</code> property.</p>
		 		 ]]></description>
<param><![CDATA[fieldMap Object
		 Format:
		 { "varName": [ value1, value2, ... ] }
		 ]]></param>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.data.forms:FormExtension/fields/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Interface to array of fields.
		 		 ]]></description>
<return><![CDATA[Array of FormField objects
		 ]]></return>
</method>
<method name='formType' fullname='org.igniterealtime.xiff.data.forms:FormExtension/formType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 This is an accessor to the hidden field type <code>FORM_TYPE</code>
		 easily check what kind of form this is.
		 		 ]]></description>
<return><![CDATA[String the registered namespace of this form type
		 ]]></return>
<see><![CDATA[http://xmpp.org/extensions/xep-0068.html
		 ]]></see>
</method>
<method name='instructions' fullname='org.igniterealtime.xiff.data.forms:FormExtension/instructions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Natural-language instructions to be followed by the form-submitting entity.
		 		 ]]></description>
<return><![CDATA[Array containing instructions.
		 ]]></return>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.forms:FormExtension/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 Interface to array of items.
		 		 ]]></description>
<return><![CDATA[Array containing Arrays of FormItem objects
		 ]]></return>
<see><![CDATA[org.igniterealtime.xiff.data.forms.FormItem
		 ]]></see>
</method>
<method name='reported' fullname='org.igniterealtime.xiff.data.forms:FormExtension/reported/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.forms:FormReported'>
<description><![CDATA[
		 An element defining the data format for the result items.
		 		 ]]></description>
<return><![CDATA[A FormReported object
		 ]]></return>
</method>
<method name='title' fullname='org.igniterealtime.xiff.data.forms:FormExtension/title/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The title of this form
		 		 ]]></description>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.forms:FormExtension/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The type of form.
		 May be one of the following:
		 		 <code>FormType.FORM</code>
		 <code>FormType.SUBMIT</code>
		 <code>FormType.CANCEL</code>
		 <code>FormType.RESULT</code>
		 ]]></description>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.data.forms:FormExtension/fields/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='instructions' fullname='org.igniterealtime.xiff.data.forms:FormExtension/instructions/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.forms:FormExtension/items/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='reported' fullname='org.igniterealtime.xiff.data.forms:FormExtension/reported/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.data.forms:FormReported' param_defaults='undefined' result_type='void'>
</method>
<method name='title' fullname='org.igniterealtime.xiff.data.forms:FormExtension/title/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.forms:FormExtension/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.forms:FormExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='x' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.forms:FormExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:x:data' >
</field>
<classRec name='SearchItem' fullname='org.igniterealtime.xiff.data.search:SearchItem' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\search\SearchItem.as' namespace='org.igniterealtime.xiff.data.search' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class is used by the SearchExtension for internal representation of
	 information pertaining to items matching the search query.
	 	 ]]></description>
</classRec>
<method name='SearchItem' fullname='org.igniterealtime.xiff.data.search:SearchItem/SearchItem' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='email' fullname='org.igniterealtime.xiff.data.search:SearchItem/email/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 E-mail
		 ]]></description>
</method>
<method name='first' fullname='org.igniterealtime.xiff.data.search:SearchItem/first/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 First
		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.search:SearchItem/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 JID
		 ]]></description>
</method>
<method name='last' fullname='org.igniterealtime.xiff.data.search:SearchItem/last/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Last
		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.search:SearchItem/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Name
		 ]]></description>
</method>
<method name='nick' fullname='org.igniterealtime.xiff.data.search:SearchItem/nick/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Nick
		 ]]></description>
</method>
<method name='username' fullname='org.igniterealtime.xiff.data.search:SearchItem/username/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Username
		 ]]></description>
</method>
<method name='email' fullname='org.igniterealtime.xiff.data.search:SearchItem/email/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='first' fullname='org.igniterealtime.xiff.data.search:SearchItem/first/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.search:SearchItem/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='last' fullname='org.igniterealtime.xiff.data.search:SearchItem/last/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.search:SearchItem/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='nick' fullname='org.igniterealtime.xiff.data.search:SearchItem/nick/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='username' fullname='org.igniterealtime.xiff.data.search:SearchItem/username/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.search:SearchItem/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='item' >
</field>
<classRec name='SearchExtension' fullname='org.igniterealtime.xiff.data.search:SearchExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\search\SearchExtension.as' namespace='org.igniterealtime.xiff.data.search' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0055: Jabber Search
	 	 <p>Implements jabber:iq:search namespace. Use this to perform user searches.</p>
	 	 <p>Send an empty IQ.TYPE_GET packet with this extension and the return will either be
	 a conflict, or the fields you will need to fill out.</p>
	 	 <p>Send a IQ.TYPE_SET packet to the server and with the fields that are listed in
	 getRequiredFieldNames set on this extension.</p>
	 	 <p>Check the result and re-establish the connection with the new account.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0055.html
	 ]]></see>
</classRec>
<method name='SearchExtension' fullname='org.igniterealtime.xiff.data.search:SearchExtension/SearchExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The parent node used to build the XML tree.
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.search:SearchExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.search:SearchExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getRequiredFieldNames' fullname='org.igniterealtime.xiff.data.search:SearchExtension/getRequiredFieldNames' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 TODO rename to getter
		 ]]></description>
</method>
<method name='instructions' fullname='org.igniterealtime.xiff.data.search:SearchExtension/instructions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Use <code>null</code> to remove.
		 ]]></description>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.search:SearchExtension/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 List of SearchItem in this query.
		 		 ]]></description>
<return><![CDATA[]]></return>
</method>
<method name='fields' fullname='org.igniterealtime.xiff.data.search:SearchExtension/fields/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='instructions' fullname='org.igniterealtime.xiff.data.search:SearchExtension/instructions/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data.search:SearchExtension/xml/set' isStatic='false' isFinal='false' isOverride='true'  param_names='node' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.search:SearchExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.search:SearchExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:search' >
</field>
<field name='_fields' fullname='org.igniterealtime.xiff.data.search:SearchExtension/private:_fields' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<classRec name='BrowseItem' fullname='org.igniterealtime.xiff.data.browse:BrowseItem' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\browse\BrowseItem.as' namespace='org.igniterealtime.xiff.data.browse' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0011: Jabber Browsing
	 	 Class that representes a child resource of a browsed resource.
	 	 <p><strong>OBSOLETE</strong></p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0011.html
	 ]]></see>
</classRec>
<method name='BrowseItem' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/BrowseItem' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='addNamespace' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/addNamespace' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='XML'>
<description><![CDATA[
		 Add new features that are supported if you are responding to a
		 browse request
		 ]]></description>
</method>
<method name='category' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/category/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 One of the categories from the list above, or a
		 non-standard category prefixed with the string "x-".
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0011.html#sect-id2594870
		 ]]></see>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The full JabberID of the entity described
		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A friendly name that may be used in a user interface
		 ]]></description>
</method>
<method name='namespaces' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/namespaces/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 On top of the browsing framework, a simple form of "feature
		 advertisement" can be built. This enables any entity to advertise
		 whichfeatures it supports, based on the namespaces associated with
		 those features. The <strong>ns</strong> element is allowed as a subelement of the
		 item. This element contains a single namespace that the entity
		 		 supports, and multiple <strong>ns</strong> elements can be included in any item.
		 <p>For a connected client this might be &gt;ns&lt;jabber:iq:oob&lt;/ns&gt;, or for a
		 service &gt;ns&lt;jabber:iq:search&lt;/ns&gt;. This list of namespaces should be
		 used to present available options for a user or to automatically
		 locate functionality for an application.</p>
		 		 <p>The children of a browse result may proactively contain a few
		 <strong>ns</strong> elements (such as the result of the service request to the home
		 server), which advertises the features that the particular service
		 supports. This list may not be complete (it is only for first-pass
		 filtering by simpler clients), and the JID should be browsed if a
		 complete list is required.</p>
		 ]]></description>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 One of the official types from the specified category,
		 or a non-standard type prefixed with the string "x-".

		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0011.html#sect-id2594870
		 ]]></see>
</method>
<method name='version' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A string containing the version of the node, equivalent
		 to the response provided to a query in the 'jabber:iq:version'
		 namespace. This is useful for servers, especially for lists of
		 services (see the 'service/serverlist' category/type above).
		 ]]></description>
</method>
<method name='category' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/category/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='version' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/version/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.browse:BrowseItem/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='item' >
</field>
<classRec name='BrowseExtension' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\browse\BrowseExtension.as' namespace='org.igniterealtime.xiff.data.browse' access='public' baseclass='org.igniterealtime.xiff.data.browse:BrowseItem' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0011: Jabber Browsing
	 	 <p>Implements jabber:iq:browse namespace.  Use this extension to request the items
	 of an agent or service such as the rooms of a conference server or the members of
	 a room.</p>
	 	 <p><strong>OBSOLETE</strong></p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0011.html
	 ]]></see>
</classRec>
<method name='BrowseExtension' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension/BrowseExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='addItem' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.browse:BrowseItem' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.browse:BrowseItem'>
<description><![CDATA[
		 If you are generating a browse response to a browse request, then
		 fill out the items list with this method.
		 		 ]]></description>
<param><![CDATA[item BrowseItem which contains the info related to the browsed resource
		 ]]></param>
<return><![CDATA[the item added
		 ]]></return>
<see><![CDATA[org.igniterealtime.xiff.data.browse.BrowseItem
		 ]]></see>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 ]]></description>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the namespace associated with this extension.
		 The namespace for the BrowseExtension is "jabber:iq:browse".
		 		 ]]></description>
<return><![CDATA[The namespace
		 ]]></return>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 An array of BrowseItems containing information about the browsed resource
		 		 ]]></description>
<return><![CDATA[array of BrowseItem
		 ]]></return>
<see><![CDATA[org.igniterealtime.xiff.data.browse.BrowseItem
		 ]]></see>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.browse:BrowseExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:browse' >
</field>
<classRec name='DiscoItem' fullname='org.igniterealtime.xiff.data.disco:DiscoItem' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\disco\DiscoItem.as' namespace='org.igniterealtime.xiff.data.disco' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
	 ]]></see>
</classRec>
<method name='DiscoItem' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/DiscoItem' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='equals' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='other' param_types='org.igniterealtime.xiff.data.disco:DiscoItem' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 Does all three properties match the in the given DiscoItem to this one?
		 		 ]]></description>
<param><![CDATA[other
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Attribute specifying the JID of the item.
		 		 <p>required</p>
		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 A natural-language name for the item.
		 		 <p>optional</p>
		 ]]></description>
</method>
<method name='node' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/node/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The value of the node attribute may or may not have semantic meaning;
		 from the perspective of Service Discovery, a node is merely
		 something that is associated with an entity.
		 		 <p>optional</p>
		 ]]></description>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/jid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='node' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/node/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.disco:DiscoItem/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='item' >
</field>
<classRec name='DiscoIdentity' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\disco\DiscoIdentity.as' namespace='org.igniterealtime.xiff.data.disco' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
	 ]]></see>
</classRec>
<method name='DiscoIdentity' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/DiscoIdentity' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='equals' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='other' param_types='org.igniterealtime.xiff.data.disco:DiscoIdentity' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[other
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='category' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/category/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='lang' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/lang/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='category' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/category/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='lang' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/lang/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.disco:DiscoIdentity/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='identity' >
</field>
<classRec name='DiscoFeature' fullname='org.igniterealtime.xiff.data.disco:DiscoFeature' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\disco\DiscoFeature.as' namespace='org.igniterealtime.xiff.data.disco' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
	 ]]></see>
</classRec>
<method name='DiscoFeature' fullname='org.igniterealtime.xiff.data.disco:DiscoFeature/DiscoFeature' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='equals' fullname='org.igniterealtime.xiff.data.disco:DiscoFeature/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='other' param_types='org.igniterealtime.xiff.data.disco:DiscoFeature' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='varName' fullname='org.igniterealtime.xiff.data.disco:DiscoFeature/varName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
                 The var of this feature used by the application or server.
                 In most cases this is the namespace of the given feature/extension.
		                  <p>Note: This serializes to the <code>var</code> attribute on the feature node.</p>
                                  <p>Since <code>var</code> is a reserved word in ActionScript,
                 this feature uses <code>varName</code> to describe the var of this feature.</p>
		 		 ]]></description>
</method>
<method name='varName' fullname='org.igniterealtime.xiff.data.disco:DiscoFeature/varName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.disco:DiscoFeature/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='feature' >
</field>
<classRec name='DiscoExtension' fullname='org.igniterealtime.xiff.data.disco:DiscoExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\disco\DiscoExtension.as' namespace='org.igniterealtime.xiff.data.disco' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0030: Service Discovery
	 	 <p>Base class for service discovery extensions.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/protocols/disco/
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
	 ]]></see>
</classRec>
<method name='DiscoExtension' fullname='org.igniterealtime.xiff.data.disco:DiscoExtension/DiscoExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 The name of the resource of the service queried if the resource
		 doesn't have a JID.
		 		 ]]></description>
<see><![CDATA[http://www.jabber.org/registrar/disco-nodes.html
		 ]]></see>
</method>
<method name='node' fullname='org.igniterealtime.xiff.data.disco:DiscoExtension/node/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='node' fullname='org.igniterealtime.xiff.data.disco:DiscoExtension/node/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.disco:DiscoExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<classRec name='LastActivityExtension' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\disco\LastActivityExtension.as' namespace='org.igniterealtime.xiff.data.disco' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0012: Last Activity
	 	 <p>It is often helpful to know the time of the last
	 activity associated with a entity. The canonical
	 usage is to discover when a disconnected user last
	 accessed its server. The 'jabber:iq:last' namespace
	 provides a method for retrieving that information.
	 The 'jabber:iq:last' namespace can also be used to
	 discover or publicize when a connected user was
	 last active on the server (i.e., the user's idle
	 time) or to query servers and components about
	 their current uptime.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0012.html
	 ]]></see>
</classRec>
<method name='LastActivityExtension' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/LastActivityExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='seconds' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/seconds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Required address of the content.
		 ]]></description>
</method>
<method name='text' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Optional message text.
		 ]]></description>
</method>
<method name='seconds' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/seconds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.disco:LastActivityExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:last' >
</field>
<classRec name='InfoDiscoExtension' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\disco\InfoDiscoExtension.as' namespace='org.igniterealtime.xiff.data.disco' access='public' baseclass='org.igniterealtime.xiff.data.disco:DiscoExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements <a href="http://xmpp.org/extensions/xep-0030.html">XEP-0030: Service Discovery</a>
	 for service info discovery.
	 Also, take a look at <a href="http://xmpp.org/extensions/xep-0020.html">XEP-0020</a> and
	 <a href="http://xmpp.org/extensions/xep-0060.html">XEP-0060</a>.
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
	 ]]></see>
</classRec>
<method name='InfoDiscoExtension' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/InfoDiscoExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 In case you enable the FormExtension, you might get the extended disco information...
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='addFeature' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/addFeature' isStatic='false' isFinal='false' isOverride='false'  param_names='feature' param_types='org.igniterealtime.xiff.data.disco:DiscoFeature' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.disco:DiscoFeature'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[feature
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='addFeatures' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/addFeatures' isStatic='false' isFinal='false' isOverride='false'  param_names='varNames' param_types='Array' param_defaults='undefined' result_type='Array'>
<description><![CDATA[
		 Add features as a list of namespace strings.
		 		 ]]></description>
<return><![CDATA[List of DiscoFeature elements created
		 ]]></return>
</method>
<method name='addIdentity' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/addIdentity' isStatic='false' isFinal='false' isOverride='false'  param_names='identity' param_types='org.igniterealtime.xiff.data.disco:DiscoIdentity' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.disco:DiscoIdentity'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[identity
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='features' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/features/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 An array of namespaces this service supports for feature negotiation.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.disco.DiscoFeature
		 ]]></see>
</method>
<method name='identities' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/identities/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
         An array of objects that represent the identities of a resource discovered.
		          <p>The DiscoIdentity objects in the array have the following possible attributes:</p>
		 <ul>
		 <li><code>category</code> - a category of the kind of identity</li>
		 <li><code>type</code> - a path to a resource that can be discovered without a JID</li>
		 <li><code>name</code> - the friendly name of the identity</li>
		 </ul>
		 		 ]]></description>
<see><![CDATA[http://www.jabber.org/registrar/disco-categories.html
		 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.disco.DiscoIdentity
		 ]]></see>
</method>
<method name='features' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/features/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='identities' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/identities/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='NS' fullname='org.igniterealtime.xiff.data.disco:InfoDiscoExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/disco#info' >
</field>
<classRec name='ItemDiscoExtension' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\disco\ItemDiscoExtension.as' namespace='org.igniterealtime.xiff.data.disco' access='public' baseclass='org.igniterealtime.xiff.data.disco:DiscoExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Implements <a href="http://xmpp.org/extensions/xep-0030.html">XEP-0030</a>
	 for service item discovery.
	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0030.html
	 ]]></see>
</classRec>
<method name='ItemDiscoExtension' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension/ItemDiscoExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='addItem' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension/addItem' isStatic='false' isFinal='false' isOverride='false'  param_names='item' param_types='org.igniterealtime.xiff.data.disco:DiscoItem' param_defaults='undefined' result_type='org.igniterealtime.xiff.data.disco:DiscoItem'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[item
		 ]]></param>
<return><![CDATA[]]></return>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension/items/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 An array of DiscoItems that represent the items discovered.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.disco.DiscoItem
		 ]]></see>
</method>
<method name='items' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension/items/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='NS' fullname='org.igniterealtime.xiff.data.disco:ItemDiscoExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/disco#items' >
</field>
<classRec name='Stroke' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\whiteboard\Stroke.as' namespace='org.igniterealtime.xiff.data.whiteboard' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A helper class that abstracts the serialization of strokes and
	 provides an interface to access the properties
	 	 ]]></description>
</classRec>
<method name='Stroke' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/Stroke' isStatic='false' isFinal='false' isOverride='false'  param_names='color;opacity;thickness' param_types='uint;Number;Number' param_defaults='0;100;unknown' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='color' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 The value of the RGB color.  This is the same color format used by
		 Graphics.lineStyle
		 		 <p>XML attribute "stroke"</p>
		 		 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html
		 ]]></see>
</method>
<method name='opacity' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/opacity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 The opacity of the stroke, in percent. 100 is solid, 0 is transparent.
		 This property can be used as the alpha parameter of Graphics.lineStyle
		 		 <p>XML attribute "stroke-opacity"</p>
		 		 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html
		 ]]></see>
</method>
<method name='thickness' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/thickness/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 The thickness of the stroke in pixels.  This is in a format used by
		 Graphics.lineStyle
		 		 <p>XML attribute "stroke-width"</p>
		 		 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html
		 ]]></see>
</method>
<method name='color' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='opacity' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/opacity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='thickness' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/thickness/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.whiteboard:Stroke/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='stroke' >
</field>
<classRec name='Path' fullname='org.igniterealtime.xiff.data.whiteboard:Path' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\whiteboard\Path.as' namespace='org.igniterealtime.xiff.data.whiteboard' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A message extension for whiteboard exchange. This class is the base class
	 for other extension classes such as Path
	 ]]></description>
</classRec>
<method name='Path' fullname='org.igniterealtime.xiff.data.whiteboard:Path/Path' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='addPoints' fullname='org.igniterealtime.xiff.data.whiteboard:Path/addPoints' isStatic='false' isFinal='false' isOverride='false'  param_names='from_x;from_y;to_x;to_y' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Object'>
<description><![CDATA[
	     Another interface to add segments to this extension.  Instead of passing
	     an object, you can pass parameters that will be converted into a segment
	     and passed to addSegment
	     	     ]]></description>
<param><![CDATA[from_x the start x coordinate
	     ]]></param>
<param><![CDATA[from_y the start y coordinate
	     ]]></param>
<param><![CDATA[to_x the destination x coordinate
	     ]]></param>
<param><![CDATA[to_y the destination y coordinate
	     ]]></param>
<return><![CDATA[the segment object created from the parameters with the rounded values
	     from being modified in addSegment
	     ]]></return>
</method>
<method name='addSegment' fullname='org.igniterealtime.xiff.data.whiteboard:Path/addSegment' isStatic='false' isFinal='false' isOverride='false'  param_names='seg' param_types='Object' param_defaults='undefined' result_type='Object'>
<description><![CDATA[
	     Adds a start point and end point to this path.  The points will be rounded
	     to the nearest integer to save serialization space.  10.0000001 takes
	     4 times as much spaces as 10
	     	     ]]></description>
<param><![CDATA[seg An object containing the properties "from" and "to" which
	     are objects with the properties "x" and "y".  An example would
	     be { from: { x: 100, y: 200 }, to: { x: 200, y: 300 } }
	     ]]></param>
<return><![CDATA[the segment parameter with the rounded values
	     ]]></return>
<see><![CDATA[#addPoints
	     ]]></see>
</method>
<method name='indexOfNextCommand' fullname='org.igniterealtime.xiff.data.whiteboard:Path/private:indexOfNextCommand' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='Number'>
</method>
<method name='loadCommand' fullname='org.igniterealtime.xiff.data.whiteboard:Path/private:loadCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='cmd;str' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='loadNextCommand' fullname='org.igniterealtime.xiff.data.whiteboard:Path/private:loadNextCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='serializeSegments' fullname='org.igniterealtime.xiff.data.whiteboard:Path/serializeSegments' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Creates the compact form of the segments
		 in the fomrmat defined by SVG
		 Example: M100 200L14 -15 L 125 100L150 200 300 400M10 20L30 40 50 60 z
	     		 ]]></description>
<return><![CDATA[String containging the compact version
		 ]]></return>
</method>
<method name='serialize' fullname='org.igniterealtime.xiff.data.whiteboard:Path/serialize' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 TODO: make as set xml
		 		 Serializes the Path data to XML for sending.
		 		 ]]></description>
<param><![CDATA[parent The parent node that this extension should be serialized into
		 ]]></param>
<return><![CDATA[An indicator as to whether serialization was successful
		 ]]></return>
</method>
<method name='fill' fullname='org.igniterealtime.xiff.data.whiteboard:Path/fill/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.whiteboard:Fill'>
<description><![CDATA[
	     The Fill object that contains the properties describing the fill of this
	     path
	     	     ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.whiteboard.Fill
	     ]]></see>
</method>
<method name='segments' fullname='org.igniterealtime.xiff.data.whiteboard:Path/segments/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
	     The read-only list of start and end points encoded as an array of objects with the
	     format { from: { x: ###, y: ### }, to: { x: ###, y: ### } }
	     	     You should not modify this list.  Segments should be added with addSegment
	     	     ]]></description>
<see><![CDATA[#addSegment
	     ]]></see>
</method>
<method name='stroke' fullname='org.igniterealtime.xiff.data.whiteboard:Path/stroke/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.data.whiteboard:Stroke'>
<description><![CDATA[
	     The Stroke object that contains the properties describing the stroke of this
	     path
	     	     ]]></description>
<see><![CDATA[org.igniterealtime.xiff.data.whiteboard.Stroke
	     ]]></see>
</method>
<method name='xml' fullname='org.igniterealtime.xiff.data.whiteboard:Path/xml/set' isStatic='false' isFinal='false' isOverride='true'  param_names='elem' param_types='XML' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.whiteboard:Path/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='path' >
</field>
<field name='_fill' fullname='org.igniterealtime.xiff.data.whiteboard:Path/private:_fill' type='org.igniterealtime.xiff.data.whiteboard:Fill' isStatic='false' isConst='false' >
</field>
<field name='_lastLocation' fullname='org.igniterealtime.xiff.data.whiteboard:Path/private:_lastLocation' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_segments' fullname='org.igniterealtime.xiff.data.whiteboard:Path/private:_segments' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_stroke' fullname='org.igniterealtime.xiff.data.whiteboard:Path/private:_stroke' type='org.igniterealtime.xiff.data.whiteboard:Stroke' isStatic='false' isConst='false' >
</field>
<classRec name='Fill' fullname='org.igniterealtime.xiff.data.whiteboard:Fill' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\whiteboard\Fill.as' namespace='org.igniterealtime.xiff.data.whiteboard' access='public' baseclass='org.igniterealtime.xiff.data:XMLStanza' interfaces='org.igniterealtime.xiff.data:INodeProxy' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A helper class that abstracts the serialization of fills and
	 provides an interface to access the properties providing defaults
	 if no properties were defined in the XML.
	 	 ]]></description>
</classRec>
<method name='Fill' fullname='org.igniterealtime.xiff.data.whiteboard:Fill/Fill' isStatic='false' isFinal='false' isOverride='false'  param_names='color;opacity' param_types='uint;Number' param_defaults='0;100' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[color
		 ]]></param>
<param><![CDATA[opacity
		 ]]></param>
</method>
<method name='color' fullname='org.igniterealtime.xiff.data.whiteboard:Fill/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 The value of the RGB color.  This is the same color format used by
		 MovieClip.lineStyle
		 		 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html
		 ]]></see>
</method>
<method name='opacity' fullname='org.igniterealtime.xiff.data.whiteboard:Fill/opacity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 The opacity of the fill, in percent. 100 is solid, 0 is transparent.
		 This property can be used as the alpha parameter of MovieClip.lineStyle
		 		 ]]></description>
<see><![CDATA[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/display/Graphics.html
		 ]]></see>
</method>
<method name='color' fullname='org.igniterealtime.xiff.data.whiteboard:Fill/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='opacity' fullname='org.igniterealtime.xiff.data.whiteboard:Fill/opacity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.whiteboard:Fill/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='fill' >
</field>
<classRec name='WhiteboardExtension' fullname='org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\whiteboard\WhiteboardExtension.as' namespace='org.igniterealtime.xiff.data.whiteboard' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A message extension for whitboard exchange. This class is the base class
	 for other extension classes such as Path.
	 	 All child whiteboard objects are contained and serialized by this class
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0113.html
	 ]]></see>
</classRec>
<method name='WhiteboardExtension' fullname='org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension/WhiteboardExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the element name associated with this extension.
		 The element for this extension is "x".
		 		 ]]></description>
<return><![CDATA[The element name
		 ]]></return>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the namespace associated with this extension.
		 The namespace for the WhiteboardExtension is "xiff:wb".
		 		 ]]></description>
<return><![CDATA[The namespace
		 ]]></return>
</method>
<method name='paths' fullname='org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension/paths/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
	     The paths available in this whiteboard message
	     ]]></description>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='x' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.whiteboard:WhiteboardExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='xiff:wb' >
</field>
<classRec name='PrivateDataExtension' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\privatedata\PrivateDataExtension.as' namespace='org.igniterealtime.xiff.data.privatedata' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0049: Private XML Storage
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0049.html
	 ]]></see>
</classRec>
<method name='PrivateDataExtension' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/PrivateDataExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='privateName;privateNamespace;payload' param_types='String;String;org.igniterealtime.xiff.privatedata:IPrivatePayload' param_defaults='null;null;null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[privateName
		 ]]></param>
<param><![CDATA[privateNamespace
		 ]]></param>
<param><![CDATA[payload
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='payload' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/payload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.privatedata:IPrivatePayload'>
<description><![CDATA[
		 ]]></description>
<exampleText><![CDATA[&gt;defaultnick&lt;Hamlet&gt;/defaultnick&lt;
		 ]]></exampleText>
</method>
<method name='privateName' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/privateName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 ]]></description>
<exampleText><![CDATA[exodus
		 ]]></exampleText>
</method>
<method name='privateNamespace' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/privateNamespace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 ]]></description>
<exampleText><![CDATA[exodus:prefs
		 ]]></exampleText>
</method>
<method name='payload' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/payload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='org.igniterealtime.xiff.privatedata:IPrivatePayload' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:private' >
</field>
<field name='_payloadExt' fullname='org.igniterealtime.xiff.data.privatedata:PrivateDataExtension/private:_payloadExt' type='org.igniterealtime.xiff.privatedata:IPrivatePayload' isStatic='false' isConst='false' >
</field>
<classRec name='SharedGroupsExtension' fullname='org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\sharedgroups\SharedGroupsExtension.as' namespace='org.igniterealtime.xiff.data.sharedgroups' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Similar idea to XEP-0140 (http://xmpp.org/extensions/xep-0140.html) which was
	 retracted in favor of XEP-0144 (http://xmpp.org/extensions/xep-0144.html).
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0144.html
	 ]]></see>
<see><![CDATA[http://xmpp.org/extensions/xep-0140.html
	 ]]></see>
</classRec>
<method name='SharedGroupsExtension' fullname='org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension/SharedGroupsExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='sharedgroup' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.sharedgroups:SharedGroupsExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://www.jivesoftware.org/protocol/sharedgroup' >
</field>
<classRec name='VCardExtension' fullname='org.igniterealtime.xiff.data.vcard:VCardExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\vcard\VCardExtension.as' namespace='org.igniterealtime.xiff.data.vcard' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0054: vcard-temp
	 	 <p>The basic functionality is for a user to store and retrieve an XML
	 representation of his or her vCard using the data storage capabilities
	 native to all existing Jabber server implementations. This is done
	 by by sending an <strong>iq</strong> of type "set" (storage) or "get"
	 (retrieval) to one's Jabber server containing a <strong>vCard</strong>
	 child scoped by the 'vcard-temp' namespace, with the <strong>vCard</strong>
	 element containing the actual vCard-XML elements as defined by the
	 vCard-XML DTD. Other users may then view one's vCard information.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0054.html
	 ]]></see>
</classRec>
<method name='VCardExtension' fullname='org.igniterealtime.xiff.data.vcard:VCardExtension/VCardExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.vcard:VCardExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.vcard:VCardExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.vcard:VCardExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='vCard' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.vcard:VCardExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='vcard-temp' >
</field>
<classRec name='RegisterExtension' fullname='org.igniterealtime.xiff.data.register:RegisterExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\register\RegisterExtension.as' namespace='org.igniterealtime.xiff.data.register' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0077: In-Band Registration
	 	 <p>Implements jabber:iq:register namespace.  Use this to create new accounts on the jabber server.
	 Send an empty IQ.TYPE_GET packet with this extension and the return will either be a conflict,
	 or the fields you will need to fill out.</p>
	 	 <p>Send a IQ.TYPE_SET packet to the server and with the fields that are listed in
	 'getRequiredFieldNames()' set on this extension.
	 Check the result and re-establish the connection with the new account.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0077.html
	 ]]></see>
</classRec>
<method name='RegisterExtension' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/RegisterExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The parent node used to build the XML tree.
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getRequiredFieldNames' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/getRequiredFieldNames' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
		 In order to determine which fields are required for registration with a host,
		 an entity SHOULD first send an IQ get to the host. The entity SHOULD NOT attempt
		 to guess at the required fields by first sending an IQ set, since the nature
		 of the required data is subject to service provisioning.
		 		 <p>All fields available in this XML, except "key" and "instructions" are required.</p>
		 ]]></description>
<return><![CDATA[Names of the required fields
		 ]]></return>
</method>
<method name='address' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/address/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='city' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/city/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='date' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/date/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='email' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/email/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='first' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/first/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='instructions' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/instructions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Use <code>null</code> to remove.
		 ]]></description>
</method>
<method name='key' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/key/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 This element is obsolete, but is included here for historical completeness.
		 		 <p>The <strong>key</strong> element was used as a "transaction key" in certain
		 IQ interactions in order to verify the identity of the sender. In particular,
		 it was used by servers (but generally not services) during in-band registration,
		 since normally a user does not yet have a 'from' address before registering.</p>
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='last' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/last/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='misc' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/misc/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='nick' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/nick/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The 'jabber:iq:register' namespace enables a user to change his or her
		 password with a server or service. Once registered, the user can
		 change passwords by setting <code>username</code> and <code>password</code>.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0077.html#usecases-changepw
		 ]]></see>
</method>
<method name='phone' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/phone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='state' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/state/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='text' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='unregister' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/unregister/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 The 'jabber:iq:register' namespace also makes it possible for an entity to cancel a
		 registration with a host by sending a <strong>remove</strong> element in an IQ set.
		 The host MUST determine the identity of the requesting entity based on the 'from'
		 address of the IQ get.
		 ]]></description>
</method>
<method name='url' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/url/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='username' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/username/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The 'jabber:iq:register' namespace enables a user to change his or her
		 password with a server or service. Once registered, the user can
		 change passwords by setting <code>username</code> and <code>password</code>.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0077.html#usecases-changepw
		 ]]></see>
</method>
<method name='zip' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/zip/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 		 ]]></description>
</method>
<method name='address' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/address/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='city' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/city/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='date' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/date/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='email' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/email/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='first' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/first/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='instructions' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/instructions/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='key' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/key/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='last' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/last/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='misc' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/misc/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='nick' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/nick/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='phone' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/phone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='state' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/state/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='unregister' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/unregister/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='url' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/url/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='username' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/username/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='zip' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/zip/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.register:RegisterExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:register' >
</field>
<classRec name='SoftwareVersionExtension' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\version\SoftwareVersionExtension.as' namespace='org.igniterealtime.xiff.data.version' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0092: Software Version
	 	 <p>The 'jabber:iq:version' namespace provides a standard way for Jabber entities
	 to exchange information about the software version used by the entities.
	 The information is communicated in a request/response pair using an <code>iq</code>
	 element that contains a <code>query</code> scoped by the 'jabber:iq:version' namespace.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0092.html
	 ]]></see>
</classRec>
<method name='SoftwareVersionExtension' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/SoftwareVersionExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The natural-language name of the software.
		 This element is REQUIRED in a result.
		 		 ]]></description>
<exampleText><![CDATA[XIFF
		 ]]></exampleText>
</method>
<method name='os' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/os/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The operating system of the queried entity.
		 This element is OPTIONAL in a result, mind the
		 Security Considerations.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0092.html#security
		 ]]></see>
<exampleText><![CDATA[Windows OS 3.11
		 ]]></exampleText>
</method>
<method name='version' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The specific version of the software.
		 This element is REQUIRED in a result.
		 		 ]]></description>
<exampleText><![CDATA[3.1.0
		 ]]></exampleText>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='os' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/os/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='version' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/version/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.version:SoftwareVersionExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:version' >
</field>
<classRec name='SessionExtension' fullname='org.igniterealtime.xiff.data.session:SessionExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\session\SessionExtension.as' namespace='org.igniterealtime.xiff.data.session' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Session Establishment
	 	 <p>Most instant messaging and presence applications based on XMPP are
	 implemented via a client-server architecture that requires a client
	 to establish a session on a server in order to engage in the expected
	 instant messaging and presence activities.  However, there are
	 several pre-conditions that MUST be met before a client can establish
     an instant messaging and presence session.</p>
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc3921#section-3
	 ]]></see>
</classRec>
<method name='SessionExtension' fullname='org.igniterealtime.xiff.data.session:SessionExtension/SessionExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 Session Establishment as defined in RFC 3921
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection#establishSession
		 ]]></see>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.session:SessionExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.session:SessionExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.session:SessionExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='session' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.session:SessionExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='urn:ietf:params:xml:ns:xmpp-session' >
</field>
<classRec name='BindExtension' fullname='org.igniterealtime.xiff.data.bind:BindExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\bind\BindExtension.as' namespace='org.igniterealtime.xiff.data.bind' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Resource Binding as defined in RFC 6120: Section 7.
	 	 <p>After a client authenticates with a server, it MUST bind a specific
	 resource to the stream so that the server can properly address the
	 client.</p>
	 <p>That is, there MUST be an XMPP resource associated with the
	 bare JID (<strong>localpart&#64;domainpart</strong>) of the client, so that the address
	 for use over that stream is a full JID of the form
	 <strong>localpart&#64;domainpart/resource</strong> (including the resourcepart).  This
	 ensures that the server can deliver XML stanzas to and receive XML
	 stanzas from the client in relation to entities other than the server
	 itself or the client's account.</p>
	 	 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc6120#section-7
	 ]]></see>
</classRec>
<method name='BindExtension' fullname='org.igniterealtime.xiff.data.bind:BindExtension/BindExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 Support for resource binding is REQUIRED in XMPP client and server
		 implementations.
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.bind:BindExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.bind:BindExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='jid' fullname='org.igniterealtime.xiff.data.bind:BindExtension/jid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.igniterealtime.xiff.core:EscapedJID'>
<description><![CDATA[
		 JID that the server has accepted. Read-only.
		 ]]></description>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.data.bind:BindExtension/resource/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Resource.
		 		 <p>Use <code>null</code> to remove.</p>
		 		 <p>Instead of asking the server to generate a resourcepart on its behalf,
		 a client MAY attempt to submit a resourcepart that it has generated or
		 that the controlling user has provided.</p>
		 		 ]]></description>
<see><![CDATA[http://tools.ietf.org/html/rfc6120#section-7.7
		 ]]></see>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.data.bind:BindExtension/resource/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.bind:BindExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='bind' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.bind:BindExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='urn:ietf:params:xml:ns:xmpp-bind' >
</field>
<classRec name='StreamInitiationExtension' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\si\StreamInitiationExtension.as' namespace='org.igniterealtime.xiff.data.si' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0095: Stream Initiation
	 	 <p>To be used with XEP-0096: SI File Transfer</p>
	 	 <p>The <strong>si</strong> element is the root element for this
	 protocol. It is an identifiable container for all the information
	 necessary for negotiation and signalling. It contains attributes
	 for the identifier, intended MIME-type, and profile. The contents
	 convey stream-negotation and profile information.</p>
	 	 <p>When the Sender first negotiates a Stream Initiation, all of the
	 attributes SHOULD be present, and the id" and "profile" MUST be
	 present. The contents MUST contain one profile, in the namespace
	 declared in the "profile" attribute, and the feature negotiation
	 for the stream. The feature negotiation MUST contain at least one
	 option and use the field var "stream-method".</p>
	 	 <p>When the Receiver accepts a Stream Initiation, the
	 <strong>si</strong> element SHOULD NOT possess any attributes.
	 The selected stream MUST be in the feature negotiation for the
	 stream. There MUST only be one selected stream.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0095.html
	 ]]></see>
</classRec>
<method name='StreamInitiationExtension' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/StreamInitiationExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='id' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The "id" attribute is an opaque identifier.
		 		 <p>This attribute MUST be present on type='set',
		 and MUST be a valid string. This SHOULD NOT be sent back on
		 type='result', since the <strong>iq</strong> "id" attribute
		 provides the only context needed. This value is generated
		 by the Sender, and the same value MUST be used throughout
		 a session when talking to the Receiver.</p>
		 ]]></description>
</method>
<method name='mimeType' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/mimeType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The "mime-type" attribute identifies the MIME-type for
		 the data across the stream.
		 		 <p>This attribute MUST be a valid MIME-type as registered
		 with the Internet Assigned Numbers Authority (IANA).</p>
		 		 <p>During negotiation, this attribute SHOULD be present, and is
		 otherwise not required. If not included during negotiation, its value
		 is assumed to be "application/octet-stream".</p>
		 		 ]]></description>
<see><![CDATA[http://www.iana.org/assignments/media-types
		 ]]></see>
</method>
<method name='profile' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/profile/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The "profile" attribute defines the SI profile in use.
		 		 <p>This value MUST be present during negotiation,
		 and is the namespace of the profile to use.</p>
		 		 <p>TODO: Check validity against PROFILE_PREFIX.</p>
		 ]]></description>
</method>
<method name='id' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/id/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='mimeType' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/mimeType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='profile' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/profile/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='si' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/si' >
</field>
<field name='PROFILE_PREFIX' fullname='org.igniterealtime.xiff.data.si:StreamInitiationExtension/PROFILE_PREFIX' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/si/profile/' >
<description><![CDATA[
		 The SUGGESTED format for profile namespaces is, followed by the profile name.
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/registrar/si-profiles.html
		 ]]></see>
</field>
<classRec name='FileTransferExtension' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\si\FileTransferExtension.as' namespace='org.igniterealtime.xiff.data.si' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0096: SI File Transfer.
	 	 <p>To be used within XEP-0095: Stream Initiation</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0096.html
	 ]]></see>
</classRec>
<method name='FileTransferExtension' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/FileTransferExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 The size and name attributes MUST be present in the profile.
		 The other attributes MAY be present.
		 		 <p>There are two possible child elements of the root: 'desc' and 'range'.
		 Both are OPTIONAL.</p>
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='date' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/date/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
<description><![CDATA[
		 The last modification time of the file.
		 		 <p>This is specified using the DateTime profile as described in XMPP
		 Date and Time Profiles.</p>
		 		 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0082.html
		 ]]></see>
</method>
<method name='desc' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/desc/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Used to provide a sender-generated description of the file so the receiver
		 can better understand what is being sent. It MUST NOT be sent in the result.
		 ]]></description>
</method>
<method name='hasRange' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/hasRange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 When <code>range</code> is sent in the offer, it should have no attributes.
		 This signifies that the sender can do ranged transfers.
		 		 <p>Both <code>rangeOffset</code> and <code>rangeLength</code> attributes are OPTIONAL
		 on the <code>range</code> element. Sending no attributes is synonymous with not sending
		 the <code>range</code> element.</p>
		 		 <p>When no <code>range</code> element is sent in the Stream Initiation result, the Sender MUST send
		 the complete file starting at offset 0. More generally, data is sent over the stream
		 byte for byte starting at the offset position for the length specified.</p>
		 ]]></description>
</method>
<method name='hash' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/hash/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The MD5 sum of the file contents.
		 ]]></description>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The name of the file that the Sender wishes to send.
		 		 <p>REQUIRED</p>
		 ]]></description>
</method>
<method name='rangeLength' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/rangeLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Specifies the number of bytes to retrieve starting at offset.
		 This defaults to the length of the file from offset to the end.
		 		 <p>When a Stream Initiation result is sent with the <code>range</code> element, it uses this property.</p>
		 ]]></description>
</method>
<method name='rangeOffset' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/rangeOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Specifies the position, in bytes, to start transferring the file data from.
		 This defaults to zero (0) if not specified.
		 		 <p>When a Stream Initiation result is sent with the <code>range</code> element, it uses this property.</p>
		 ]]></description>
</method>
<method name='size' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 The size, in bytes, of the data to be sent.
		 		 <p>REQUIRED</p>
		 ]]></description>
</method>
<method name='date' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/date/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Date' param_defaults='undefined' result_type='void'>
</method>
<method name='desc' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/desc/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='hasRange' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/hasRange/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='hash' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/hash/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='rangeLength' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/rangeLength/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='rangeOffset' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/rangeOffset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='size' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/size/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='file' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.si:FileTransferExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/si/profile/file-transfer' >
</field>
<classRec name='PingExtension' fullname='org.igniterealtime.xiff.data.ping:PingExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\ping\PingExtension.as' namespace='org.igniterealtime.xiff.data.ping' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0199: XMPP Ping
	 	 <p>extension for sending application-level pings over XML streams.
	 Such pings can be sent from a client to a server, from one
	 server to another, or end-to-end.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0199.html
	 ]]></see>
</classRec>
<method name='PingExtension' fullname='org.igniterealtime.xiff.data.ping:PingExtension/PingExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent (Optional) The containing XML for this extension
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.ping:PingExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.ping:PingExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.ping:PingExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='ping' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.ping:PingExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='urn:xmpp:ping' >
</field>
<classRec name='XHTMLExtension' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\xhtml\XHTMLExtension.as' namespace='org.igniterealtime.xiff.data.xhtml' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
         XEP-0071: XHTML-IM
                  <p>This class provides an extension for XHTML body text in messages.</p>
	 <p>html --> http://jabber.org/protocol/xhtml-im</p>
	 <p>body --> http://www.w3.org/1999/xhtml</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0071.html
	 ]]></see>
</classRec>
<method name='XHTMLExtension' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension/XHTMLExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 ]]></description>
<param><![CDATA[parent The parent node for this extension
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the element name associated with this extension.
		 The element for this extension is "html".
		 		 ]]></description>
<return><![CDATA[The element name
		 ]]></return>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the namespace associated with this extension.
		 The namespace for the XHTMLExtension is "http://www.w3.org/1999/xhtml".
		 		 ]]></description>
<return><![CDATA[The namespace
		 ]]></return>
</method>
<method name='body' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension/body/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The XHTML body text. Valid XHTML is REQUIRED. Because XMPP operates using
		 valid XML, standard HTML, which is not necessarily XML-parser compliant, will
		 not work.
		 		 <p>Use <code>null</code> to remove.</p>
		 ]]></description>
</method>
<method name='body' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension/body/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='html' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.xhtml:XHTMLExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/xhtml-im' >
</field>
<classRec name='AuthExtension' fullname='org.igniterealtime.xiff.data.auth:AuthExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\auth\AuthExtension.as' namespace='org.igniterealtime.xiff.data.auth' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
         XEP-0078: Non-SASL Authentication
                  <p><strong>OBSOLETE</strong></p>
         	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0078.html
	 ]]></see>
</classRec>
<method name='AuthExtension' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/AuthExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
</method>
<method name='computeDigest' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/computeDigest' isStatic='true' isFinal='false' isOverride='false'  param_names='sessionID;password' param_types='String;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[
		 Computes the SHA1 digest of the password and session ID for use when
		 authenticating with the server.
		 		 ]]></description>
<param><![CDATA[sessionID The session ID provided by the server
		 ]]></param>
<param><![CDATA[password The user's password
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the element name associated with this extension.
		 The element for this extension is "query".
		 		 ]]></description>
<return><![CDATA[The element name
		 ]]></return>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Gets the namespace associated with this extension.
		 The namespace for the AuthExtension is "jabber:iq:auth".
		 		 ]]></description>
<return><![CDATA[The namespace
		 ]]></return>
</method>
<method name='isDigest' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/isDigest' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Determines whether this is a digest (SHA1) authentication.
		 		 ]]></description>
<return><![CDATA[It is a digest (true); it is not a digest (false)
		 ]]></return>
</method>
<method name='isPassword' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/isPassword' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 Determines whether this is a plain-text password authentication.
		 		 ]]></description>
<return><![CDATA[It is plain-text password (true); it is not plain-text
		 password (false)
		 ]]></return>
</method>
<method name='digest' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/digest/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The SHA1 digest to use for authentication.
		 While assigned, password is removed.
		 ]]></description>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The password to use for authentication.
		 While assigned, digest is removed.
		 ]]></description>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/resource/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The resource to use for authentication.
		 		 ]]></description>
<see><![CDATA[org.igniterealtime.xiff.core.XMPPConnection#resource
		 ]]></see>
</method>
<method name='username' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/username/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The username to use for authentication.
		 ]]></description>
</method>
<method name='digest' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/digest/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='resource' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/resource/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='username' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/username/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='query' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.auth:AuthExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='jabber:iq:auth' >
</field>
<classRec name='FeatureNegotiationExtension' fullname='org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\feature\FeatureNegotiationExtension.as' namespace='org.igniterealtime.xiff.data.feature' access='public' baseclass='org.igniterealtime.xiff.data:Extension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0020: Feature Negotiation
	 	 <p>Features are negotiated through the exchange of
	 <strong>iq</strong> or <strong>message</strong> stanzas
	 containing <strong>feature</strong> child elements qualified
	 by the 'http://jabber.org/protocol/feature-neg' namespace.
	 However, this <strong>feature</strong> element is simply a
	 wrapper for structured data encapsulated in the
	 Data Forms (<code>FormExtension</code>) protocol.</p>

	 <p>In order to begin a negotation, the initiator sends an
	 <strong>iq</strong> stanza of type "get" (or a
	 <strong>message</strong> stanza type "normal" - see Stanza
	 Session Negotiation for examples) to the recipient with a
	 single <strong>feature</strong> element containing a data form
	 of type "form" which defines the available options for one or
	 more features. Each feature is represented as an x-data "field".</p>

	 <p>The recipient SHOULD examine each feature and the values of
	 the options provided. In order to indicate preferred values,
	 the recipient then SHOULD specify one value for each feature
	 and return a data form of type "submit" to the initiator in an
	 <strong>iq</strong> stanza of type "result" (or a
	 <strong>message</strong> stanza type "normal").</p>

	 <p>The following examples show some likely scenarios for feature
	 negotiation between entities. Further examples can be found in
	 "using protocols", such as File Transfer
	 (<code>FileTransferExtension</code>).</p>
	 	 <p>Peter Millard, the primary author of this specification from version 0.1
	 through version 1.4, died on April 26, 2006. The remaining authors are
	 thankful for Peter's work on this specification.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0020.html
	 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.forms.FormExtension
	 ]]></see>
<see><![CDATA[org.igniterealtime.xiff.data.si.FileTransferExtension
	 ]]></see>
</classRec>
<method name='FeatureNegotiationExtension' fullname='org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension/FeatureNegotiationExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 Use <code>FormExtension</code> as a child extension.
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='feature' >
</field>
<field name='NS' fullname='org.igniterealtime.xiff.data.feature:FeatureNegotiationExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/feature-neg' >
</field>
<classRec name='IBBExtension' fullname='org.igniterealtime.xiff.data.stream:IBBExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\stream\IBBExtension.as' namespace='org.igniterealtime.xiff.data.stream' access='public' baseclass='org.igniterealtime.xiff.data:Extension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Base class of all IBB classes that are using same namespace.
	 Do not use this directly.</p>
	 	 <p>Generally, in-band bytestreams SHOULD be used only as a
	 last resort. SOCKS5 Bytestreams will almost always be preferable,
	 but are not implemented in XIFF...</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0047.html
	 ]]></see>
</classRec>
<method name='IBBExtension' fullname='org.igniterealtime.xiff.data.stream:IBBExtension/IBBExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getNS' fullname='org.igniterealtime.xiff.data.stream:IBBExtension/getNS' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='sid' fullname='org.igniterealtime.xiff.data.stream:IBBExtension/sid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The REQUIRED 'sid' attribute defines a unique session
		 ID for this IBB session (which MUST match the NMTOKEN
		 datatype).
		 		 <p>All of the extending classes require this property
		 to be set.</p>
		 ]]></description>
</method>
<method name='sid' fullname='org.igniterealtime.xiff.data.stream:IBBExtension/sid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='NS' fullname='org.igniterealtime.xiff.data.stream:IBBExtension/NS' type='String' isStatic='true' isConst='true' defaultValue='http://jabber.org/protocol/ibb' >
</field>
<classRec name='IBBDataExtension' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\stream\IBBDataExtension.as' namespace='org.igniterealtime.xiff.data.stream' access='public' baseclass='org.igniterealtime.xiff.data.stream:IBBExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Each chunk of data is contained in a <strong>data</strong>
	 element qualified by the 'http://jabber.org/protocol/ibb'
	 namespace. The data element SHOULD be sent in an IQ stanza
	 to enable proper tracking and throttling, but instead MAY be
	 sent in a message stanza. The data to be sent, prior to
	 base64-encoding and prior to any wrapping in XML, MUST NOT
	 be larger than the 'block-size' determined in the bytestream
	 negotiation.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0047.html
	 ]]></see>
</classRec>
<method name='IBBDataExtension' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension/IBBDataExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='data' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Base64 encoded data
		 ]]></description>
</method>
<method name='seq' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension/seq/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Required property 'seq'.
		 		 <p>This is a 16-bit unsigned
		 integer that acts as a counter for data chunks sent
		 in a particular direction within this session.
		 The 'seq' value starts at 0 (zero) for each sender
		 and MUST be incremented for each packet sent by that
		 entity. Thus, the second chunk sent has a 'seq' value
		 of 1, the third chunk has a 'seq' value of 2, and so
		 on. The counter loops at maximum, so that after value
		 65535 (215 - 1) the 'seq' MUST start again at 0.</p>
		 		 <p>This value can be safely incremented, limit checking
		 and resetting is imlemented within the setter.</p>
		 ]]></description>
</method>
<method name='data' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='seq' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension/seq/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.stream:IBBDataExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='data' >
</field>
<classRec name='IBBOpenExtension' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\stream\IBBOpenExtension.as' namespace='org.igniterealtime.xiff.data.stream' access='public' baseclass='org.igniterealtime.xiff.data.stream:IBBExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Open the communication</p>
	 	 <p>It is RECOMMENDED to send IBB data using IQ stanzas
	 instead of message stanzas because IQ stanzas provide
	 feedback to the sender regarding delivery to the recipient).</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0047.html
	 ]]></see>
</classRec>
<method name='IBBOpenExtension' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension/IBBOpenExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 The recommended values for <code>blockSize</code> (4096) and
		 <code>stanza</code> ("iq") are set by default.
		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='blockSize' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension/blockSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 The REQUIRED 'block-size' attribute defines the maximum
		 size in bytes of each data chunk (which MUST NOT be
		 greater than 65535).
		 		 ]]></description>
<default><![CDATA[4096
		 ]]></default>
</method>
<method name='stanza' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension/stanza/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 The OPTIONAL 'stanza' attribute defines whether the
		 data will be sent using <code>IQ</code> stanzas or
		 <code>Message</code> stanzas.
		 		 ]]></description>
<default><![CDATA[iq
		 ]]></default>
</method>
<method name='blockSize' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension/blockSize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='stanza' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension/stanza/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.stream:IBBOpenExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='open' >
</field>
<classRec name='IBBCloseExtension' fullname='org.igniterealtime.xiff.data.stream:IBBCloseExtension' sourcefile='D:\DropBox\paazmaya.com\xiff_3_1_0\src\org\igniterealtime\xiff\data\stream\IBBCloseExtension.as' namespace='org.igniterealtime.xiff.data.stream' access='public' baseclass='org.igniterealtime.xiff.data.stream:IBBExtension' interfaces='org.igniterealtime.xiff.data:IExtension' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 XEP-0047: In-Band Bytestreams, Version 2.0 (2012-06-22)
	 	 <p>Close the communication once transfer is complete.</p>
	 	 ]]></description>
<see><![CDATA[http://xmpp.org/extensions/xep-0047.html
	 ]]></see>
</classRec>
<method name='IBBCloseExtension' fullname='org.igniterealtime.xiff.data.stream:IBBCloseExtension/IBBCloseExtension' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='XML' param_defaults='null' result_type='*'>
<description><![CDATA[
		 		 		 ]]></description>
<param><![CDATA[parent
		 ]]></param>
</method>
<method name='getElementName' fullname='org.igniterealtime.xiff.data.stream:IBBCloseExtension/getElementName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='ELEMENT_NAME' fullname='org.igniterealtime.xiff.data.stream:IBBCloseExtension/ELEMENT_NAME' type='String' isStatic='true' isConst='true' defaultValue='close' >
</field>
</asdoc>
